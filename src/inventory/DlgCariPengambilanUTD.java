/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * DlgPenyakit.java
 *
 * Created on May 23, 2010, 12:57:16 AM
 */
package inventory;

import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import keuangan.Jurnal;

/**
 *
 * @author dosen
 */
public final class DlgCariPengambilanUTD extends javax.swing.JDialog {

    private final DefaultTableModel tabMode;
    private sekuel Sequel = new sekuel();
    private validasi Valid = new validasi();
    private Connection koneksi = koneksiDB.condb();
    private ResultSet rs;
    private PreparedStatement ps;
    private double total = 0;
    private Jurnal jur = new Jurnal();
    private riwayatobat Trackobat = new riwayatobat();
    private String dialog_simpan = "";

    /**
     * Creates new form DlgPenyakit
     *
     * @param parent
     * @param modal
     */
    public DlgCariPengambilanUTD(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocation(10, 2);
        setSize(628, 674);

        tabMode = new DefaultTableModel(null, new Object[]{
            "Kode Barang", "Nama Barang", "Jml", "Harga", "Subtotal", "Dari", "", "Tanggal", "Keterangan"
        }) {
            @Override
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        tbKamar.setModel(tabMode);
        //tbPenyakit.setDefaultRenderer(Object.class, new WarnaTable(panelJudul.getBackground(),tbPenyakit.getBackground()));
        tbKamar.setPreferredScrollableViewportSize(new Dimension(500, 500));
        tbKamar.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 9; i++) {
            TableColumn column = tbKamar.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(90);
            } else if (i == 1) {
                column.setPreferredWidth(200);
            } else if (i == 2) {
                column.setPreferredWidth(35);
            } else if (i == 3) {
                column.setPreferredWidth(80);
            } else if (i == 4) {
                column.setPreferredWidth(90);
            } else if (i == 5) {
                column.setPreferredWidth(140);
            } else if (i == 6) {
                column.setMinWidth(0);
                column.setMaxWidth(0);
            } else if (i == 7) {
                column.setPreferredWidth(120);
            } else if (i == 8) {
                column.setPreferredWidth(140);
            }
        }
        tbKamar.setDefaultRenderer(Object.class, new WarnaTable());
        TCari.setDocument(new batasInput((byte) 100).getKata(TCari));
        if (koneksiDB.cariCepat().equals("aktif")) {
            TCari.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
                @Override
                public void insertUpdate(DocumentEvent e) {
                    tampil();
                }

                @Override
                public void removeUpdate(DocumentEvent e) {
                    tampil();
                }

                @Override
                public void changedUpdate(DocumentEvent e) {
                    tampil();
                }
            });
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        MnLapPemakaianSemuaRuang = new javax.swing.JMenuItem();
        MnLapPemakaianPerRuang = new javax.swing.JMenuItem();
        MnLapPemakaianRuangPerTahun = new javax.swing.JMenuItem();
        MnLapInOut = new javax.swing.JMenuItem();
        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbKamar = new widget.Table();
        jPanel1 = new javax.swing.JPanel();
        panelisi3 = new widget.panelisi();
        jLabel19 = new widget.Label();
        DTPCari1 = new widget.Tanggal();
        jLabel21 = new widget.Label();
        DTPCari2 = new widget.Tanggal();
        label9 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();
        BtnAll = new widget.Button();
        panelisi1 = new widget.panelisi();
        BtnHapus = new widget.Button();
        BtnCetak = new widget.Button();
        label10 = new widget.Label();
        LCount = new widget.Label();
        label11 = new widget.Label();
        LTotal = new widget.Label();
        BtnKeluar = new widget.Button();

        jPopupMenu1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jPopupMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPopupMenu1.setName("jPopupMenu1"); // NOI18N
        jPopupMenu1.setPreferredSize(new java.awt.Dimension(240, 80));

        MnLapPemakaianSemuaRuang.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnLapPemakaianSemuaRuang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        MnLapPemakaianSemuaRuang.setText("Lap. Pemakaian Semua Ruang/Unit");
        MnLapPemakaianSemuaRuang.setName("MnLapPemakaianSemuaRuang"); // NOI18N
        MnLapPemakaianSemuaRuang.setPreferredSize(new java.awt.Dimension(240, 80));
        MnLapPemakaianSemuaRuang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnLapPemakaianSemuaRuangActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnLapPemakaianSemuaRuang);

        MnLapPemakaianPerRuang.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnLapPemakaianPerRuang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        MnLapPemakaianPerRuang.setText("Lap. Pemakaian Per Ruang/Unit");
        MnLapPemakaianPerRuang.setName("MnLapPemakaianPerRuang"); // NOI18N
        MnLapPemakaianPerRuang.setPreferredSize(new java.awt.Dimension(240, 80));
        MnLapPemakaianPerRuang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnLapPemakaianPerRuangActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnLapPemakaianPerRuang);

        MnLapPemakaianRuangPerTahun.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnLapPemakaianRuangPerTahun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        MnLapPemakaianRuangPerTahun.setText("Laporan Pemakaian Ruangan Per Tahun");
        MnLapPemakaianRuangPerTahun.setName("MnLapPemakaianRuangPerTahun"); // NOI18N
        MnLapPemakaianRuangPerTahun.setPreferredSize(new java.awt.Dimension(240, 80));
        MnLapPemakaianRuangPerTahun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnLapPemakaianRuangPerTahunActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnLapPemakaianRuangPerTahun);

        MnLapInOut.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnLapInOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        MnLapInOut.setText("Laporan Pemasukan dan Pengeluartan Gudang Farmasi Ruangan (EXCEL)");
        MnLapInOut.setName("MnLapInOut"); // NOI18N
        MnLapInOut.setPreferredSize(new java.awt.Dimension(240, 80));
        MnLapInOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnLapInOutActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnLapInOut);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Data Pengambilan BHP Medis Unit Tranfusi Darah & Farmasi ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setComponentPopupMenu(jPopupMenu1);
        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tbKamar.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbKamar.setComponentPopupMenu(jPopupMenu1);
        tbKamar.setName("tbKamar"); // NOI18N
        Scroll.setViewportView(tbKamar);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(816, 100));
        jPanel1.setLayout(new java.awt.BorderLayout(1, 1));

        panelisi3.setName("panelisi3"); // NOI18N
        panelisi3.setPreferredSize(new java.awt.Dimension(100, 44));
        panelisi3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 4, 9));

        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Tgl. Pengambilan :");
        jLabel19.setName("jLabel19"); // NOI18N
        jLabel19.setPreferredSize(new java.awt.Dimension(120, 23));
        panelisi3.add(jLabel19);

        DTPCari1.setEditable(false);
        DTPCari1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "02-03-2021" }));
        DTPCari1.setDisplayFormat("dd-MM-yyyy");
        DTPCari1.setName("DTPCari1"); // NOI18N
        DTPCari1.setOpaque(false);
        DTPCari1.setPreferredSize(new java.awt.Dimension(95, 23));
        panelisi3.add(DTPCari1);

        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("s.d.");
        jLabel21.setName("jLabel21"); // NOI18N
        jLabel21.setPreferredSize(new java.awt.Dimension(23, 23));
        panelisi3.add(jLabel21);

        DTPCari2.setEditable(false);
        DTPCari2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "02-03-2021" }));
        DTPCari2.setDisplayFormat("dd-MM-yyyy");
        DTPCari2.setName("DTPCari2"); // NOI18N
        DTPCari2.setOpaque(false);
        DTPCari2.setPreferredSize(new java.awt.Dimension(95, 23));
        panelisi3.add(DTPCari2);

        label9.setForeground(new java.awt.Color(0, 0, 0));
        label9.setText("Key Word :");
        label9.setName("label9"); // NOI18N
        label9.setPreferredSize(new java.awt.Dimension(70, 23));
        panelisi3.add(label9);

        TCari.setForeground(new java.awt.Color(0, 0, 0));
        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(200, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelisi3.add(TCari);

        BtnCari.setForeground(new java.awt.Color(0, 0, 0));
        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('2');
        BtnCari.setText("Tampilkan Data");
        BtnCari.setToolTipText("Alt+2");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(160, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelisi3.add(BtnCari);

        BtnAll.setForeground(new java.awt.Color(0, 0, 0));
        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setText("Semua Data");
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(120, 23));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelisi3.add(BtnAll);

        jPanel1.add(panelisi3, java.awt.BorderLayout.PAGE_START);

        panelisi1.setName("panelisi1"); // NOI18N
        panelisi1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnHapus.setForeground(new java.awt.Color(0, 0, 0));
        BtnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/stop_f2.png"))); // NOI18N
        BtnHapus.setMnemonic('H');
        BtnHapus.setText("Hapus");
        BtnHapus.setToolTipText("Alt+H");
        BtnHapus.setName("BtnHapus"); // NOI18N
        BtnHapus.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHapusActionPerformed(evt);
            }
        });
        BtnHapus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnHapusKeyPressed(evt);
            }
        });
        panelisi1.add(BtnHapus);

        BtnCetak.setForeground(new java.awt.Color(0, 0, 0));
        BtnCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnCetak.setMnemonic('C');
        BtnCetak.setText("Cetak");
        BtnCetak.setToolTipText("Alt+C");
        BtnCetak.setName("BtnCetak"); // NOI18N
        BtnCetak.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCetakActionPerformed(evt);
            }
        });
        BtnCetak.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCetakKeyPressed(evt);
            }
        });
        panelisi1.add(BtnCetak);

        label10.setForeground(new java.awt.Color(0, 0, 0));
        label10.setText("Record :");
        label10.setName("label10"); // NOI18N
        label10.setPreferredSize(new java.awt.Dimension(75, 30));
        panelisi1.add(label10);

        LCount.setForeground(new java.awt.Color(0, 0, 0));
        LCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LCount.setText("0");
        LCount.setName("LCount"); // NOI18N
        LCount.setPreferredSize(new java.awt.Dimension(60, 30));
        panelisi1.add(LCount);

        label11.setForeground(new java.awt.Color(0, 0, 0));
        label11.setText("Total :");
        label11.setName("label11"); // NOI18N
        label11.setPreferredSize(new java.awt.Dimension(55, 30));
        panelisi1.add(label11);

        LTotal.setForeground(new java.awt.Color(0, 0, 0));
        LTotal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LTotal.setText("0");
        LTotal.setName("LTotal"); // NOI18N
        LTotal.setPreferredSize(new java.awt.Dimension(180, 30));
        panelisi1.add(LTotal);

        BtnKeluar.setForeground(new java.awt.Color(0, 0, 0));
        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelisi1.add(BtnKeluar);

        jPanel1.add(panelisi1, java.awt.BorderLayout.CENTER);

        internalFrame1.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHapusActionPerformed
        if (tabMode.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Maaf, data sudah habis...!!!!");
            TCari.requestFocus();
        } else if (tbKamar.getSelectedRow() <= -1) {
            JOptionPane.showMessageDialog(null, "Maaf, Silahkan pilih data yang mau dihapus..!!");
        } else {
            Sequel.AutoComitFalse();
            Sequel.queryu("delete from utd_pengambilan_medis where kode_brng='" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 0) + "' "
                    + "and kd_bangsal_dr='" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 6) + "' "
                    + "and tanggal='" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 7).toString() + "' "
                    + "and jml='" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 2) + "'");
            Trackobat.catatRiwayat2(tbKamar.getValueAt(tbKamar.getSelectedRow(), 0).toString(), Valid.SetAngka(tbKamar.getValueAt(tbKamar.getSelectedRow(), 2).toString()), 0, "Pengambilan Medis", akses.getkode(), tbKamar.getValueAt(tbKamar.getSelectedRow(), 6).toString(), "Hapus");
            Sequel.menyimpan("gudangbarang", "'" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 0) + "',"
                    + "'" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 6) + "',"
                    + "'" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 2) + "'",
                    "stok=stok+" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 2),
                    "kode_brng='" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 0) + "' and "
                    + "kd_bangsal='" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 6) + "'");
            Sequel.menyimpan("utd_stok_medis", "'" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 0) + "',"
                    + "'-" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 2) + "','" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 3).toString() + "'",
                    "stok=stok-" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 2),
                    "kode_brng='" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 0) + "'");
            Sequel.queryu("delete from tampjurnal");
            Sequel.menyimpan("tampjurnal", "?,?,?,?", 4, new String[]{Sequel.cariIsi("select Pengambilan_Utd from set_akun"), "PENGAMBILAN BHP MEDIS UTD", "0", "" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 4)});
            Sequel.menyimpan("tampjurnal", "?,?,?,?", 4, new String[]{Sequel.cariIsi("select Kontra_Pengambilan_Utd from set_akun"), "PERSEDIAAN BARANG/OBAT/ALKES/BHP", "" + tbKamar.getValueAt(tbKamar.getSelectedRow(), 4), "0"});
            jur.simpanJurnal(DTPCari1.getSelectedItem().toString(), Valid.SetTgl(DTPCari1.getSelectedItem() + ""), "U", "PEMBATALAN PENGAMBILAN BHP MEDIS UTD DARI " + tbKamar.getValueAt(tbKamar.getSelectedRow(), 5));
            BtnCariActionPerformed(evt);
            Sequel.AutoComitTrue();
        }
}//GEN-LAST:event_BtnHapusActionPerformed

    private void BtnHapusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnHapusKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnHapusActionPerformed(null);
        } else {
            Valid.pindah(evt, BtnKeluar, BtnAll);
        }
}//GEN-LAST:event_BtnHapusKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
}//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            dispose();
        } else {
            Valid.pindah(evt, BtnAll, TCari);
        }
}//GEN-LAST:event_BtnKeluarKeyPressed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            BtnCariActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN) {
            BtnCari.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_UP) {
            BtnKeluar.requestFocus();
        }
}//GEN-LAST:event_TCariKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        tampil();
}//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnCariActionPerformed(null);
        } else {
            Valid.pindah(evt, TCari, BtnAll);
        }
}//GEN-LAST:event_BtnCariKeyPressed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnAllActionPerformed(null);
        } else {
            Valid.pindah(evt, BtnCari, TCari);
        }
    }//GEN-LAST:event_BtnAllKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        TCari.setText("");
        tampil();
    }//GEN-LAST:event_BtnAllActionPerformed

private void BtnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCetakActionPerformed
    this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    if (tabMode.getRowCount() == 0) {
        JOptionPane.showMessageDialog(null, "Maaf, data sudah habis...!!!!");
        BtnKeluar.requestFocus();
    } else {
        Map<String, Object> param = new HashMap<>();
        param.put("namars", akses.getnamars());
        param.put("alamatrs", akses.getalamatrs());
        param.put("kotars", akses.getkabupatenrs());
        param.put("propinsirs", akses.getpropinsirs());
        param.put("kontakrs", akses.getkontakrs());
        param.put("emailrs", akses.getemailrs());
        param.put("logo", Sequel.cariGambar("select logo from setting"));
        Valid.MyReport("rptPengambilanUTD.jasper", "report", "::[ Transaksi Pengambilan BHP Medis UTD ]::",
                "select utd_pengambilan_medis.kode_brng,databarang.nama_brng,utd_pengambilan_medis.jml,utd_pengambilan_medis.hargabeli,"
                + "utd_pengambilan_medis.total,utd_pengambilan_medis.kd_bangsal_dr,bangsal.nm_bangsal,utd_pengambilan_medis.tanggal,"
                + "utd_pengambilan_medis.keterangan,databarang.kode_sat from utd_pengambilan_medis inner join databarang inner join bangsal "
                + "on utd_pengambilan_medis.kode_brng=databarang.kode_brng and utd_pengambilan_medis.kd_bangsal_dr=bangsal.kd_bangsal "
                + "where utd_pengambilan_medis.tanggal between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + " 00:00:00' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + " 23:59:59' and utd_pengambilan_medis.kode_brng like '%" + TCari.getText().trim() + "%' or "
                + "utd_pengambilan_medis.tanggal between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + " 00:00:00' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + " 23:59:59' and databarang.nama_brng like '%" + TCari.getText().trim() + "%' or "
                + "utd_pengambilan_medis.tanggal between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + " 00:00:00' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + " 23:59:59' and utd_pengambilan_medis.kd_bangsal_dr like '%" + TCari.getText().trim() + "%' or "
                + "utd_pengambilan_medis.tanggal between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + " 00:00:00' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + " 23:59:59' and bangsal.nm_bangsal like '%" + TCari.getText().trim() + "%' or "
                + "utd_pengambilan_medis.tanggal between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + " 00:00:00' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + " 23:59:59' and utd_pengambilan_medis.keterangan like '%" + TCari.getText().trim() + "%' order by utd_pengambilan_medis.tanggal", param);

    }
    this.setCursor(Cursor.getDefaultCursor());
}//GEN-LAST:event_BtnCetakActionPerformed

private void BtnCetakKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCetakKeyPressed
// TODO add your handling code here:
}//GEN-LAST:event_BtnCetakKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        BtnHapus.setEnabled(akses.getpengambilan_utd());
    }//GEN-LAST:event_formWindowActivated

    private void MnLapPemakaianSemuaRuangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnLapPemakaianSemuaRuangActionPerformed
        if (tbKamar.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Maaf, data sudah habis. Tidak ada data yang bisa anda print...!!!!");
            DTPCari1.requestFocus();
        } else {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            Map<String, Object> param = new HashMap<>();
            param.put("namars", akses.getnamars());
            param.put("alamatrs", akses.getalamatrs());
            param.put("kotars", akses.getkabupatenrs());
            param.put("propinsirs", akses.getpropinsirs());
            param.put("kontakrs", akses.getkontakrs());
            param.put("emailrs", akses.getemailrs());
            param.put("logo", Sequel.cariGambar("select logo from setting"));
            Valid.MyReport("rptLapGFPerRuangan.jasper", "report", "::[ Cetak Laporan Pemakaian Obat/Alkes/BHP/Barang Per Ruangan ]::", " "
                    + " select (SELECT MIN(tanggal) FROM utd_pengambilan_medis "
                    + " WHERE utd_pengambilan_medis.tanggal BETWEEN '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "') AS tgl_awal, "
                    + " (SELECT MAX(tanggal) FROM utd_pengambilan_medis "
                    + " WHERE utd_pengambilan_medis.tanggal BETWEEN '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "') AS tgl_akhir, "
                    + " databarang.nama_brng,databarang.kode_sat,sum(utd_pengambilan_medis.jml) jml,utd_pengambilan_medis.hargabeli, "
                    + " (sum(utd_pengambilan_medis.jml)) * utd_pengambilan_medis.hargabeli as total,bangsal.nm_bangsal,utd_pengambilan_medis.tanggal, utd_pengambilan_medis.keterangan "
                    + " from utd_pengambilan_medis inner join databarang inner join bangsal "
                    + " on utd_pengambilan_medis.kode_brng=databarang.kode_brng and utd_pengambilan_medis.kd_bangsal_dr=bangsal.kd_bangsal "
                    + " where utd_pengambilan_medis.tanggal between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "' "
                    + " group by utd_pengambilan_medis.kode_brng,utd_pengambilan_medis.hargabeli,utd_pengambilan_medis.keterangan ORDER BY utd_pengambilan_medis.keterangan, databarang.nama_brng", param);
            this.setCursor(Cursor.getDefaultCursor());
        }
    }//GEN-LAST:event_MnLapPemakaianSemuaRuangActionPerformed

    private void MnLapPemakaianPerRuangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnLapPemakaianPerRuangActionPerformed
        if (tbKamar.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Maaf, data sudah habis. Tidak ada data yang bisa anda print...!!!!");
            DTPCari1.requestFocus();
        } else {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            Map<String, Object> param = new HashMap<>();
            param.put("namars", akses.getnamars());
            param.put("alamatrs", akses.getalamatrs());
            param.put("kotars", akses.getkabupatenrs());
            param.put("propinsirs", akses.getpropinsirs());
            param.put("kontakrs", akses.getkontakrs());
            param.put("emailrs", akses.getemailrs());
            param.put("logo", Sequel.cariGambar("select logo from setting"));
            Valid.MyReport("rptLapGFPerRuangUnit.jasper", "report", "::[ Cetak Laporan Pemakaian Obat/Alkes/BHP/Barang Per Ruangan ]::", " "
                    + " select (SELECT MIN(tanggal) FROM utd_pengambilan_medis "
                    + " WHERE utd_pengambilan_medis.tanggal BETWEEN '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "') AS tgl_awal, "
                    + " (SELECT MAX(tanggal) FROM utd_pengambilan_medis "
                    + " WHERE utd_pengambilan_medis.tanggal BETWEEN '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "') AS tgl_akhir, "
                    + " databarang.nama_brng,databarang.kode_sat,sum(utd_pengambilan_medis.jml) jml,utd_pengambilan_medis.hargabeli, "
                    + " (sum(utd_pengambilan_medis.jml)) * utd_pengambilan_medis.hargabeli as total,bangsal.nm_bangsal,utd_pengambilan_medis.tanggal, utd_pengambilan_medis.keterangan "
                    + " from utd_pengambilan_medis inner join databarang inner join bangsal "
                    + " on utd_pengambilan_medis.kode_brng=databarang.kode_brng and utd_pengambilan_medis.kd_bangsal_dr=bangsal.kd_bangsal "
                    + " where utd_pengambilan_medis.tanggal between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "' and utd_pengambilan_medis.keterangan like '%" + TCari.getText() + "%' "
                    + " group by utd_pengambilan_medis.kode_brng,utd_pengambilan_medis.hargabeli ORDER BY utd_pengambilan_medis.keterangan, databarang.nama_brng", param);
            this.setCursor(Cursor.getDefaultCursor());
        }
    }//GEN-LAST:event_MnLapPemakaianPerRuangActionPerformed

    private void MnLapPemakaianRuangPerTahunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnLapPemakaianRuangPerTahunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MnLapPemakaianRuangPerTahunActionPerformed

    private void MnLapInOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnLapInOutActionPerformed
        // TODO add your handling code here:
        dialog_simpan = "";
        dialog_simpan = Valid.openDialog();
        if (!dialog_simpan.equals("the user cancelled the operation")) {
            if (Valid.MyReportToExcelBoolean("select a.nama_brng 'NAMA',a.h_beli 'HARGA',ifnull(f.stok_awal,0) 'STOK AWAL BULAN',(ifnull(b.jumlah, 0)+ifnull(c.jumlah, 0)) 'MASUK',(ifnull(d.jumlah, 0)+ifnull(e.jumlah, 0)) 'KELUAR', ifnull(f.stok_awal,0)+(ifnull(b.jumlah, 0)+ifnull(c.jumlah, 0))-(ifnull(d.jumlah, 0)+ifnull(e.jumlah, 0)) 'TOTAL' from  "
                    + "((select kode_brng, nama_brng, h_beli from databarang where `status` = '1') "
                    + "as a "
                    + "left join "
                    + "(select d.kode_brng,sum(d.jumlah) jumlah from pemesanan p "
                    + "inner join detailpesan d on d.no_faktur = p.no_faktur "
                    + "where p.tgl_pesan between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "' "
                    + "group by d.kode_brng "
                    + ") as b on b.kode_brng = a.kode_brng "
                    + "left join "
                    + "(select kode_brng, sum(jml) jumlah from mutasibarang "
                    + "where tanggal between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "' and kd_bangsalke = 'APT04' "
                    + "group by kode_brng "
                    + ")as c on c.kode_brng = a.kode_brng "
                    + "left join "
                    + "(select kode_brng, sum(jml) jumlah from mutasibarang "
                    + "where tanggal between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "' and kd_bangsaldari = 'APT04' "
                    + "group by kode_brng "
                    + ")as d on d.kode_brng = a.kode_brng "
                    + "left join "
                    + "(select kode_brng, sum(jml) jumlah from utd_pengambilan_medis "
                    + "where DATE_FORMAT(tanggal,'%Y-%m-%d') between '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "' and kd_bangsal_dr = 'APT04' "
                    + "group by kode_brng "
                    + ")as e on e.kode_brng = a.kode_brng "
                    + "left join "
                    + "(select kode_brng, stok_awal from stok_bulanan where kd_bangsal = 'APT04' and periode = left('"+ Valid.SetTgl(DTPCari1.getSelectedItem() + "") +"',7) "
                    + ")as f on f.kode_brng = a.kode_brng "
                    + ")order by a.nama_brng", dialog_simpan) == true) {
                JOptionPane.showMessageDialog(null, "Data berhasil diexport menjadi file excel,..!!!");
            } else {
                JOptionPane.showMessageDialog(null, "Data gagal diexport menjadi file excel,..!!!");
            }
        }
    }//GEN-LAST:event_MnLapInOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgCariPengambilanUTD dialog = new DlgCariPengambilanUTD(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnCari;
    private widget.Button BtnCetak;
    private widget.Button BtnHapus;
    private widget.Button BtnKeluar;
    private widget.Tanggal DTPCari1;
    private widget.Tanggal DTPCari2;
    private widget.Label LCount;
    private widget.Label LTotal;
    private javax.swing.JMenuItem MnLapInOut;
    private javax.swing.JMenuItem MnLapPemakaianPerRuang;
    private javax.swing.JMenuItem MnLapPemakaianRuangPerTahun;
    private javax.swing.JMenuItem MnLapPemakaianSemuaRuang;
    private widget.ScrollPane Scroll;
    private widget.TextBox TCari;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel19;
    private widget.Label jLabel21;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private widget.Label label10;
    private widget.Label label11;
    private widget.Label label9;
    private widget.panelisi panelisi1;
    private widget.panelisi panelisi3;
    private widget.Table tbKamar;
    // End of variables declaration//GEN-END:variables

    public void tampil() {
        Valid.tabelKosong(tabMode);
        try {
            ps = koneksi.prepareStatement(
                    "select utd_pengambilan_medis.kode_brng,databarang.nama_brng,utd_pengambilan_medis.jml,utd_pengambilan_medis.hargabeli,"
                    + "utd_pengambilan_medis.total,utd_pengambilan_medis.kd_bangsal_dr,bangsal.nm_bangsal,utd_pengambilan_medis.tanggal,"
                    + "utd_pengambilan_medis.keterangan,databarang.kode_sat from utd_pengambilan_medis inner join databarang inner join bangsal "
                    + "on utd_pengambilan_medis.kode_brng=databarang.kode_brng and utd_pengambilan_medis.kd_bangsal_dr=bangsal.kd_bangsal "
                    + "where utd_pengambilan_medis.tanggal between ? and ? and utd_pengambilan_medis.kode_brng like ? or "
                    + "utd_pengambilan_medis.tanggal between ? and ? and databarang.nama_brng like ? or "
                    + "utd_pengambilan_medis.tanggal between ? and ? and utd_pengambilan_medis.kd_bangsal_dr like ? or "
                    + "utd_pengambilan_medis.tanggal between ? and ? and bangsal.nm_bangsal like ? or "
                    + "utd_pengambilan_medis.tanggal between ? and ? and utd_pengambilan_medis.keterangan like ? order by utd_pengambilan_medis.tanggal");
            try {
                total = 0;
                ps.setString(1, Valid.SetTgl(DTPCari1.getSelectedItem() + "") + " 00:00:00");
                ps.setString(2, Valid.SetTgl(DTPCari2.getSelectedItem() + "") + " 23:59:59");
                ps.setString(3, "%" + TCari.getText().trim() + "%");
                ps.setString(4, Valid.SetTgl(DTPCari1.getSelectedItem() + "") + " 00:00:00");
                ps.setString(5, Valid.SetTgl(DTPCari2.getSelectedItem() + "") + " 23:59:59");
                ps.setString(6, "%" + TCari.getText().trim() + "%");
                ps.setString(7, Valid.SetTgl(DTPCari1.getSelectedItem() + "") + " 00:00:00");
                ps.setString(8, Valid.SetTgl(DTPCari2.getSelectedItem() + "") + " 23:59:59");
                ps.setString(9, "%" + TCari.getText().trim() + "%");
                ps.setString(10, Valid.SetTgl(DTPCari1.getSelectedItem() + "") + " 00:00:00");
                ps.setString(11, Valid.SetTgl(DTPCari2.getSelectedItem() + "") + " 23:59:59");
                ps.setString(12, "%" + TCari.getText().trim() + "%");
                ps.setString(13, Valid.SetTgl(DTPCari1.getSelectedItem() + "") + " 00:00:00");
                ps.setString(14, Valid.SetTgl(DTPCari2.getSelectedItem() + "") + " 23:59:59");
                ps.setString(15, "%" + TCari.getText().trim() + "%");
                rs = ps.executeQuery();
                while (rs.next()) {
                    tabMode.addRow(new Object[]{
                        rs.getString("kode_brng"), rs.getString("nama_brng") + " (" + rs.getString("kode_sat") + ")",
                        rs.getString("jml"), rs.getString("hargabeli"),
                        rs.getString("total"), rs.getString("kd_bangsal_dr") + " " + rs.getString("nm_bangsal"),
                        rs.getString("kd_bangsal_dr"), rs.getString("tanggal"),
                        rs.getString("keterangan")
                    });
                    total = total + rs.getDouble("total");
                }
                LCount.setText("" + tabMode.getRowCount());
                LTotal.setText(Valid.SetAngka(total));
            } catch (Exception e) {
                System.out.println("Notifikasi : " + e);
            } finally {
                if (rs != null) {
                    rs.close();
                }
                if (ps != null) {
                    ps.close();
                }
            }
        } catch (Exception e) {
            System.out.println("Notifikasi : " + e);
        }
        LCount.setText("" + tabMode.getRowCount());
    }

    public void setHapus() {
        BtnHapus.setVisible(false);
    }

}
