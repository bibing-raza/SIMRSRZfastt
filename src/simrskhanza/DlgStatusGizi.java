/*
  Dilarang keras menggandakan/mengcopy/menyebarkan/membajak/mendecompile 
  Software ini dalam bentuk apapun tanpa seijin pembuat software
  (Khanza.Soft Media). Bagi yang sengaja membajak softaware ini ta
  npa ijin, kami sumpahi sial 1000 turunan, miskin sampai 500 turu
  nan. Selalu mendapat kecelakaan sampai 400 turunan. Anak pertama
  nya cacat tidak punya kaki sampai 300 turunan. Susah cari jodoh
  sampai umur 50 tahun sampai 200 turunan. Ya Alloh maafkan kami 
  karena telah berdoa buruk, semua ini kami lakukan karena kami ti
  dak pernah rela karya kami dibajak tanpa ijin.
 */
package simrskhanza;

import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import java.awt.Dimension;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;

/**
 *
 * @author dosen
 */
public final class DlgStatusGizi extends javax.swing.JDialog {

    private final DefaultTableModel tabMode;
    private Connection koneksi = koneksiDB.condb();
    private final Properties prop = new Properties();
    private validasi Valid = new validasi();
    private PreparedStatement ps, ps1, ps2;
    private ResultSet rs, rs1, rs2;
    private sekuel Sequel = new sekuel();
    private int i = 0, x = 0, dataGZ = 0, z = 0;
    private String kodekmr = "", noRM = "";

    /**
     * Creates new form DlgKamar
     *
     * @param parent
     * @param modal
     */
    public DlgStatusGizi(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.setLocation(10, 2);
        setSize(628, 674);

        tabMode = new DefaultTableModel(null, new String[]{
            "No.", "No. Rawat", "No. RM", "Nama Pasien", "Tgl. Input", "Status Gizi", "Ruang Rawat", "kdkamar"}) {
            @Override
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };

        tbStatusGZ.setModel(tabMode);
        tbStatusGZ.setPreferredScrollableViewportSize(new Dimension(500, 500));
        tbStatusGZ.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 8; i++) {
            TableColumn column = tbStatusGZ.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(30);
            } else if (i == 1) {
                column.setPreferredWidth(110);
            } else if (i == 2) {
                column.setPreferredWidth(50);
            } else if (i == 3) {
                column.setPreferredWidth(170);
            } else if (i == 4) {
                column.setPreferredWidth(70);
            } else if (i == 5) {
                column.setPreferredWidth(70);
            } else if (i == 6) {
                column.setPreferredWidth(130);
            } else if (i == 7) {
                column.setMinWidth(0);
                column.setMaxWidth(0);
            }
        }
        tbStatusGZ.setDefaultRenderer(Object.class, new WarnaTable());

        TCari.setDocument(new batasInput((byte) 100).getKata(TCari));

        if (koneksiDB.cariCepat().equals("aktif")) {
            TCari.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
                @Override
                public void insertUpdate(DocumentEvent e) {
                    tampil();
                }

                @Override
                public void removeUpdate(DocumentEvent e) {
                    tampil();
                }

                @Override
                public void changedUpdate(DocumentEvent e) {
                    tampil();
                }
            });
        }

        try {
            prop.loadFromXML(new FileInputStream("setting/database.xml"));
        } catch (Exception e) {
            System.out.println("E : " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        MnCetakLapRekap = new javax.swing.JMenuItem();
        MnCetakLapStatusGZ = new javax.swing.JMenuItem();
        WindowLapStatusGZ = new javax.swing.JDialog();
        internalFrame5 = new widget.InternalFrame();
        BtnCloseIn4 = new widget.Button();
        BtnCetak = new widget.Button();
        jLabel17 = new widget.Label();
        cmbGedung = new widget.ComboBox();
        jLabel18 = new widget.Label();
        tgl1 = new widget.Tanggal();
        jLabel22 = new widget.Label();
        tgl2 = new widget.Tanggal();
        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbStatusGZ = new widget.Table();
        jPanel3 = new javax.swing.JPanel();
        panelGlass8 = new widget.panelisi();
        BtnSimpan = new widget.Button();
        BtnBatal = new widget.Button();
        BtnEdit = new widget.Button();
        BtnAll = new widget.Button();
        BtnKeluar = new widget.Button();
        jLabel7 = new widget.Label();
        LCount = new widget.Label();
        panelGlass9 = new widget.panelisi();
        jLabel65 = new widget.Label();
        norw = new widget.TextBox();
        norm = new widget.TextBox();
        nmpasien = new widget.TextBox();
        jLabel66 = new widget.Label();
        cmbstatusGZ = new widget.ComboBox();
        jLabel70 = new widget.Label();
        cmbrgPasienGZ = new widget.ComboBox();
        jLabel67 = new widget.Label();
        nmUnit = new widget.TextBox();
        panelGlass10 = new widget.panelisi();
        jLabel19 = new widget.Label();
        DTPCari1 = new widget.Tanggal();
        jLabel21 = new widget.Label();
        DTPCari2 = new widget.Tanggal();
        jLabel6 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        MnCetakLapRekap.setBackground(new java.awt.Color(255, 255, 255));
        MnCetakLapRekap.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnCetakLapRekap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        MnCetakLapRekap.setText("Cetak Lap. Rekap");
        MnCetakLapRekap.setName("MnCetakLapRekap"); // NOI18N
        MnCetakLapRekap.setPreferredSize(new java.awt.Dimension(170, 26));
        MnCetakLapRekap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnCetakLapRekapActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnCetakLapRekap);

        MnCetakLapStatusGZ.setBackground(new java.awt.Color(255, 255, 255));
        MnCetakLapStatusGZ.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        MnCetakLapStatusGZ.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        MnCetakLapStatusGZ.setText("Cetak Lap. Status Gizi");
        MnCetakLapStatusGZ.setName("MnCetakLapStatusGZ"); // NOI18N
        MnCetakLapStatusGZ.setPreferredSize(new java.awt.Dimension(170, 26));
        MnCetakLapStatusGZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnCetakLapStatusGZActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MnCetakLapStatusGZ);

        WindowLapStatusGZ.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        WindowLapStatusGZ.setName("WindowLapStatusGZ"); // NOI18N
        WindowLapStatusGZ.setUndecorated(true);
        WindowLapStatusGZ.setResizable(false);

        internalFrame5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3), "::[ Cetak Lap. Status Gizi ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        internalFrame5.setName("internalFrame5"); // NOI18N
        internalFrame5.setWarnaBawah(new java.awt.Color(245, 250, 240));
        internalFrame5.setLayout(null);

        BtnCloseIn4.setForeground(new java.awt.Color(0, 0, 0));
        BtnCloseIn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cross.png"))); // NOI18N
        BtnCloseIn4.setMnemonic('U');
        BtnCloseIn4.setText("Tutup");
        BtnCloseIn4.setToolTipText("Alt+U");
        BtnCloseIn4.setName("BtnCloseIn4"); // NOI18N
        BtnCloseIn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCloseIn4ActionPerformed(evt);
            }
        });
        internalFrame5.add(BtnCloseIn4);
        BtnCloseIn4.setBounds(230, 90, 90, 30);

        BtnCetak.setForeground(new java.awt.Color(0, 0, 0));
        BtnCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnCetak.setMnemonic('C');
        BtnCetak.setText("Cetak");
        BtnCetak.setToolTipText("Alt+C");
        BtnCetak.setName("BtnCetak"); // NOI18N
        BtnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCetakActionPerformed(evt);
            }
        });
        internalFrame5.add(BtnCetak);
        BtnCetak.setBounds(120, 90, 100, 30);

        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Nama Gedung : ");
        jLabel17.setName("jLabel17"); // NOI18N
        internalFrame5.add(jLabel17);
        jLabel17.setBounds(0, 28, 118, 23);

        cmbGedung.setForeground(new java.awt.Color(0, 0, 0));
        cmbGedung.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        cmbGedung.setName("cmbGedung"); // NOI18N
        cmbGedung.setOpaque(false);
        internalFrame5.add(cmbGedung);
        cmbGedung.setBounds(120, 28, 205, 23);

        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Periode Tgl. MRS : ");
        jLabel18.setName("jLabel18"); // NOI18N
        internalFrame5.add(jLabel18);
        jLabel18.setBounds(0, 58, 118, 23);

        tgl1.setEditable(false);
        tgl1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "28-12-2021" }));
        tgl1.setDisplayFormat("dd-MM-yyyy");
        tgl1.setName("tgl1"); // NOI18N
        tgl1.setOpaque(false);
        tgl1.setPreferredSize(new java.awt.Dimension(100, 23));
        internalFrame5.add(tgl1);
        tgl1.setBounds(120, 58, 85, 23);

        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("s.d.");
        jLabel22.setName("jLabel22"); // NOI18N
        jLabel22.setPreferredSize(new java.awt.Dimension(23, 23));
        internalFrame5.add(jLabel22);
        jLabel22.setBounds(207, 58, 30, 23);

        tgl2.setEditable(false);
        tgl2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "28-12-2021" }));
        tgl2.setDisplayFormat("dd-MM-yyyy");
        tgl2.setName("tgl2"); // NOI18N
        tgl2.setOpaque(false);
        tgl2.setPreferredSize(new java.awt.Dimension(100, 23));
        internalFrame5.add(tgl2);
        tgl2.setBounds(240, 58, 85, 23);

        WindowLapStatusGZ.getContentPane().add(internalFrame5, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(null);
        setIconImages(null);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3), "::[ Status Gizi Pasien ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setComponentPopupMenu(jPopupMenu1);
        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tbStatusGZ.setAutoCreateRowSorter(true);
        tbStatusGZ.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbStatusGZ.setComponentPopupMenu(jPopupMenu1);
        tbStatusGZ.setName("tbStatusGZ"); // NOI18N
        tbStatusGZ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbStatusGZMouseClicked(evt);
            }
        });
        tbStatusGZ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbStatusGZKeyPressed(evt);
            }
        });
        Scroll.setViewportView(tbStatusGZ);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(44, 180));
        jPanel3.setLayout(new java.awt.BorderLayout(1, 1));

        panelGlass8.setName("panelGlass8"); // NOI18N
        panelGlass8.setPreferredSize(new java.awt.Dimension(55, 55));
        panelGlass8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnSimpan.setForeground(new java.awt.Color(0, 0, 0));
        BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan.setMnemonic('S');
        BtnSimpan.setText("Simpan");
        BtnSimpan.setToolTipText("Alt+S");
        BtnSimpan.setName("BtnSimpan"); // NOI18N
        BtnSimpan.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });
        panelGlass8.add(BtnSimpan);

        BtnBatal.setForeground(new java.awt.Color(0, 0, 0));
        BtnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Cancel-2-16x16.png"))); // NOI18N
        BtnBatal.setMnemonic('B');
        BtnBatal.setText("Baru");
        BtnBatal.setToolTipText("Alt+B");
        BtnBatal.setName("BtnBatal"); // NOI18N
        BtnBatal.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBatalActionPerformed(evt);
            }
        });
        BtnBatal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnBatalKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnBatal);

        BtnEdit.setForeground(new java.awt.Color(0, 0, 0));
        BtnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/inventaris.png"))); // NOI18N
        BtnEdit.setMnemonic('G');
        BtnEdit.setText("Ganti");
        BtnEdit.setToolTipText("Alt+G");
        BtnEdit.setName("BtnEdit"); // NOI18N
        BtnEdit.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });
        panelGlass8.add(BtnEdit);

        BtnAll.setForeground(new java.awt.Color(0, 0, 0));
        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setText("Semua");
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        panelGlass8.add(BtnAll);

        BtnKeluar.setForeground(new java.awt.Color(0, 0, 0));
        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(100, 30));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnKeluar);

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Record :");
        jLabel7.setName("jLabel7"); // NOI18N
        jLabel7.setPreferredSize(new java.awt.Dimension(65, 23));
        panelGlass8.add(jLabel7);

        LCount.setForeground(new java.awt.Color(0, 0, 0));
        LCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LCount.setText("0");
        LCount.setName("LCount"); // NOI18N
        LCount.setPreferredSize(new java.awt.Dimension(50, 23));
        panelGlass8.add(LCount);

        jPanel3.add(panelGlass8, java.awt.BorderLayout.PAGE_END);

        panelGlass9.setName("panelGlass9"); // NOI18N
        panelGlass9.setPreferredSize(new java.awt.Dimension(44, 75));
        panelGlass9.setLayout(null);

        jLabel65.setForeground(new java.awt.Color(0, 0, 0));
        jLabel65.setText("Pasien : ");
        jLabel65.setName("jLabel65"); // NOI18N
        jLabel65.setPreferredSize(new java.awt.Dimension(60, 24));
        panelGlass9.add(jLabel65);
        jLabel65.setBounds(6, 10, 60, 24);

        norw.setEditable(false);
        norw.setForeground(new java.awt.Color(0, 0, 0));
        norw.setName("norw"); // NOI18N
        norw.setPreferredSize(new java.awt.Dimension(140, 24));
        panelGlass9.add(norw);
        norw.setBounds(71, 10, 140, 24);

        norm.setEditable(false);
        norm.setForeground(new java.awt.Color(0, 0, 0));
        norm.setName("norm"); // NOI18N
        norm.setPreferredSize(new java.awt.Dimension(70, 24));
        panelGlass9.add(norm);
        norm.setBounds(216, 10, 70, 24);

        nmpasien.setEditable(false);
        nmpasien.setForeground(new java.awt.Color(0, 0, 0));
        nmpasien.setName("nmpasien"); // NOI18N
        nmpasien.setPreferredSize(new java.awt.Dimension(300, 24));
        panelGlass9.add(nmpasien);
        nmpasien.setBounds(291, 10, 300, 24);

        jLabel66.setForeground(new java.awt.Color(0, 0, 0));
        jLabel66.setText("Status Gizi : ");
        jLabel66.setName("jLabel66"); // NOI18N
        jLabel66.setPreferredSize(new java.awt.Dimension(70, 24));
        panelGlass9.add(jLabel66);
        jLabel66.setBounds(596, 10, 70, 24);

        cmbstatusGZ.setForeground(new java.awt.Color(0, 0, 0));
        cmbstatusGZ.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "BURUK", "KURANG", "NORMAL", "LEBIH", "OBESITAS" }));
        cmbstatusGZ.setName("cmbstatusGZ"); // NOI18N
        cmbstatusGZ.setPreferredSize(new java.awt.Dimension(77, 24));
        panelGlass9.add(cmbstatusGZ);
        cmbstatusGZ.setBounds(671, 10, 77, 24);

        jLabel70.setForeground(new java.awt.Color(0, 0, 0));
        jLabel70.setText("Bangsal : ");
        jLabel70.setName("jLabel70"); // NOI18N
        jLabel70.setPreferredSize(new java.awt.Dimension(75, 24));
        panelGlass9.add(jLabel70);
        jLabel70.setBounds(410, 40, 60, 24);

        cmbrgPasienGZ.setForeground(new java.awt.Color(0, 0, 0));
        cmbrgPasienGZ.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "VIP/SVIP", "ICU/ICCU", "RKPD", "ZAAL", "BEDAH", "ANAK", "PARU", "AS-SAMI UMUM", "AS-SAMI JANTUNG", "AR-RAUDAH SYARAF", "AR-RAUDAH MT-KK-THT", "BERSALIN", "ISOLASI COVID19", "ISOLASI BAYI COVID19" }));
        cmbrgPasienGZ.setName("cmbrgPasienGZ"); // NOI18N
        cmbrgPasienGZ.setPreferredSize(new java.awt.Dimension(144, 24));
        panelGlass9.add(cmbrgPasienGZ);
        cmbrgPasienGZ.setBounds(474, 40, 144, 24);

        jLabel67.setForeground(new java.awt.Color(0, 0, 0));
        jLabel67.setText("Rg. Perawatan : ");
        jLabel67.setName("jLabel67"); // NOI18N
        jLabel67.setPreferredSize(new java.awt.Dimension(60, 24));
        panelGlass9.add(jLabel67);
        jLabel67.setBounds(6, 40, 100, 24);

        nmUnit.setEditable(false);
        nmUnit.setForeground(new java.awt.Color(0, 0, 0));
        nmUnit.setName("nmUnit"); // NOI18N
        panelGlass9.add(nmUnit);
        nmUnit.setBounds(108, 40, 300, 23);

        jPanel3.add(panelGlass9, java.awt.BorderLayout.PAGE_START);

        panelGlass10.setName("panelGlass10"); // NOI18N
        panelGlass10.setPreferredSize(new java.awt.Dimension(44, 44));
        panelGlass10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Tgl. MRS : ");
        jLabel19.setName("jLabel19"); // NOI18N
        jLabel19.setPreferredSize(new java.awt.Dimension(60, 23));
        panelGlass10.add(jLabel19);

        DTPCari1.setEditable(false);
        DTPCari1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "28-12-2021" }));
        DTPCari1.setDisplayFormat("dd-MM-yyyy");
        DTPCari1.setName("DTPCari1"); // NOI18N
        DTPCari1.setOpaque(false);
        DTPCari1.setPreferredSize(new java.awt.Dimension(100, 23));
        panelGlass10.add(DTPCari1);

        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("s.d.");
        jLabel21.setName("jLabel21"); // NOI18N
        jLabel21.setPreferredSize(new java.awt.Dimension(23, 23));
        panelGlass10.add(jLabel21);

        DTPCari2.setEditable(false);
        DTPCari2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "28-12-2021" }));
        DTPCari2.setDisplayFormat("dd-MM-yyyy");
        DTPCari2.setName("DTPCari2"); // NOI18N
        DTPCari2.setOpaque(false);
        DTPCari2.setPreferredSize(new java.awt.Dimension(100, 23));
        panelGlass10.add(DTPCari2);

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Key Word :");
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(60, 23));
        panelGlass10.add(jLabel6);

        TCari.setForeground(new java.awt.Color(0, 0, 0));
        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(260, 24));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelGlass10.add(TCari);

        BtnCari.setBorder(null);
        BtnCari.setForeground(new java.awt.Color(0, 0, 0));
        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('2');
        BtnCari.setText("Tampilkan Data");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(130, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelGlass10.add(BtnCari);

        jPanel3.add(panelGlass10, java.awt.BorderLayout.CENTER);

        internalFrame1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        if (cmbstatusGZ.getSelectedItem().equals("-") || (norw.getText().equals("")) || (cmbrgPasienGZ.getSelectedItem().equals("-"))) {
            JOptionPane.showMessageDialog(null, "Isi & lengkapilah data status gizi pasien dengan benar....!!!!");
            cmbstatusGZ.requestFocus();
        } else {
            Sequel.menyimpan("status_gizi_inap", "'" + norw.getText() + "','" + Sequel.cariIsi("SELECT DATE(NOW())") + "',"
                    + "'" + cmbstatusGZ.getSelectedItem() + "','" + cmbrgPasienGZ.getSelectedItem() + "',"
                    + "'" + kodekmr + "' ", "Data status gizi");

            tampil();
            norw.setText("");
            norm.setText("");
            nmpasien.setText("");
            nmUnit.setText("");
            cmbrgPasienGZ.setSelectedIndex(0);
            cmbstatusGZ.setSelectedIndex(0);
            BtnSimpan.setEnabled(false);
            BtnEdit.setEnabled(true);
            BtnKeluar.requestFocus();
        }
    }//GEN-LAST:event_BtnSimpanActionPerformed

    private void BtnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBatalActionPerformed
        emptTeks();
    }//GEN-LAST:event_BtnBatalActionPerformed

    private void BtnBatalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnBatalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            emptTeks();
        }
    }//GEN-LAST:event_BtnBatalKeyPressed

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        if (cmbstatusGZ.getSelectedItem().equals("-") || (norw.getText().equals("")) || (cmbrgPasienGZ.getSelectedItem().equals("-"))) {
            JOptionPane.showMessageDialog(null, "Isi & lengkapilah data status gizi pasien dengan benar....!!!!");
            cmbstatusGZ.requestFocus();
        } else {
            Sequel.mengedit("status_gizi_inap", "no_rawat='" + norw.getText() + "'",
                    "status_gizi='" + cmbstatusGZ.getSelectedItem() + "', "
                    + "ruang_rawat='" + cmbrgPasienGZ.getSelectedItem() + "',"
                    + "kd_kamar='" + kodekmr + "' ");

            tampil();
            norw.setText("");
            norm.setText("");
            nmpasien.setText("");
            nmUnit.setText("");
            cmbrgPasienGZ.setSelectedIndex(0);
            cmbstatusGZ.setSelectedIndex(0);
        }
    }//GEN-LAST:event_BtnEditActionPerformed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        emptTeks();
        tampil();
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            dispose();
        }
    }//GEN-LAST:event_BtnKeluarKeyPressed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            BtnCariActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN) {
            BtnCari.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_UP) {
            BtnKeluar.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            tbStatusGZ.requestFocus();
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        tampil();
    }//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnCariActionPerformed(null);
        } else {
            Valid.pindah(evt, TCari, BtnAll);
        }
    }//GEN-LAST:event_BtnCariKeyPressed

    private void MnCetakLapRekapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnCetakLapRekapActionPerformed
        dataGZ = 0;
        dataGZ = Sequel.cariInteger("SELECT COUNT(no_rawat) FROM status_gizi_inap WHERE tgl_input BETWEEN "
                + " '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' and '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "'");

        if (dataGZ == 0) {
            JOptionPane.showMessageDialog(null, "Data status gizi pasien utk periode tgl. " + DTPCari1.getSelectedItem() + " s.d " + DTPCari2.getSelectedItem() + " tidak ditemukan,...!!!");
            DTPCari1.requestFocus();
        } else if (dataGZ > 0) {
            this.setCursor(Cursor.getDefaultCursor());
            Map<String, Object> param = new HashMap<>();
            param.put("namars", akses.getnamars());
            param.put("alamatrs", akses.getalamatrs());
            param.put("kotars", akses.getkabupatenrs());
            param.put("propinsirs", akses.getpropinsirs());
            param.put("kontakrs", akses.getkontakrs());
            param.put("emailrs", akses.getemailrs());
            param.put("logo", Sequel.cariGambar("select logo from setting"));
            param.put("periode", "PERIODE TGL. " + DTPCari1.getSelectedItem() + " S.D " + DTPCari2.getSelectedItem());
            param.put("tgl_surat", Sequel.cariIsi("select day(now())") + " " + Sequel.bulanINDONESIA("select month(now())") + " " + Sequel.cariIsi("select year(now())"));
            Valid.MyReport("rptrekapstatusgizi.jasper", "report", "::[ Data Rekap Status Gizi Pasien ]::",
                    " select sg.ruang_rawat, COUNT(CASE WHEN sg.status_gizi = 'BURUK' THEN 1 END) as buruk, "
                    + " COUNT(CASE WHEN sg.status_gizi = 'KURANG' THEN 1 END) as kurang, "
                    + " COUNT(CASE WHEN sg.status_gizi = 'NORMAL' THEN 1 END) as normal, "
                    + " COUNT(CASE WHEN sg.status_gizi = 'LEBIH' THEN 1 END) as lebih, "
                    + " COUNT(CASE WHEN sg.status_gizi = 'OBESITAS' THEN 1 END) as obesitas, "
                    + " COUNT(sg.no_rawat) total from status_gizi_inap sg "
                    + " inner join reg_periksa r on r.no_rawat=sg.no_rawat "
                    + " where r.tgl_registrasi BETWEEN '" + Valid.SetTgl(DTPCari1.getSelectedItem() + "") + "' AND '" + Valid.SetTgl(DTPCari2.getSelectedItem() + "") + "' "
                    + " and r.status_lanjut='ranap' group by sg.ruang_rawat order by sg.ruang_rawat desc", param);
            this.setCursor(Cursor.getDefaultCursor());

            tampil();
            emptTeks();
            BtnKeluar.requestFocus();
        }
    }//GEN-LAST:event_MnCetakLapRekapActionPerformed

    private void MnCetakLapStatusGZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnCetakLapStatusGZActionPerformed
        WindowLapStatusGZ.setSize(363, 143);
        WindowLapStatusGZ.setLocationRelativeTo(internalFrame1);
        WindowLapStatusGZ.setVisible(true);   
        cmbGedung.requestFocus();
    }//GEN-LAST:event_MnCetakLapStatusGZActionPerformed

    private void tbStatusGZKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbStatusGZKeyPressed
        if (tabMode.getRowCount() != 0) {
            if ((evt.getKeyCode() == KeyEvent.VK_ENTER) || (evt.getKeyCode() == KeyEvent.VK_UP) || (evt.getKeyCode() == KeyEvent.VK_DOWN)) {
                try {
                    getdata();
                } catch (java.lang.NullPointerException e) {
                }
            } else if (evt.getKeyCode() == KeyEvent.VK_V) {
                if (tbStatusGZ.getSelectedColumn() > 4) {
                    if (tbStatusGZ.getSelectedRow() != -1) {
                        if (tbStatusGZ.getValueAt(tbStatusGZ.getSelectedRow(), tbStatusGZ.getSelectedColumn()).toString().equals("false")) {
                            tbStatusGZ.setValueAt(true, tbStatusGZ.getSelectedRow(), tbStatusGZ.getSelectedColumn());
                        } else {
                            tbStatusGZ.setValueAt(false, tbStatusGZ.getSelectedRow(), tbStatusGZ.getSelectedColumn());
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_tbStatusGZKeyPressed

    private void tbStatusGZMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbStatusGZMouseClicked
        if (tabMode.getRowCount() != 0) {
            try {
                getdata();
                BtnSimpan.setEnabled(false);
                BtnEdit.setEnabled(true);
            } catch (java.lang.NullPointerException e) {
            }
        }
    }//GEN-LAST:event_tbStatusGZMouseClicked

    private void BtnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCetakActionPerformed
        if (cmbGedung.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Silahkan pilih salah satu nama gedung perawatan inap dg. benar..!!!");
        } else {
            try {
                Sequel.queryu2("delete from temporary");
                ps1 = koneksi.prepareStatement("select distinct ki.no_rawat from kamar_inap ki "
                        + "inner join reg_periksa rp on rp.no_rawat=ki.no_rawat inner join pasien p on p.no_rkm_medis=rp.no_rkm_medis "
                        + "inner join kamar k on k.kd_kamar=ki.kd_kamar inner join bangsal b on b.kd_bangsal=k.kd_bangsal "
                        + "left join status_gizi_inap sgi on sgi.no_rawat=ki.no_rawat left join detail_beri_diet bd on bd.no_rawat=ki.no_rawat "
                        + "left join diet d on d.kd_diet=bd.kd_diet where "
                        + "rp.tgl_registrasi between '" + Valid.SetTgl(tgl1.getSelectedItem() + "") + "' AND '" + Valid.SetTgl(tgl2.getSelectedItem() + "") + "' "
                        + "and (bd.waktu='Siang' or ifnull(bd.waktu,'') = '') AND b.nm_gedung='" + cmbGedung.getSelectedItem() + "' and "
                        + "ki.stts_pulang<>'Pindah Kamar' order by rp.no_rkm_medis, bd.tanggal");
                rs1 = ps1.executeQuery();
                while (rs1.next()) {
                    ps2 = koneksi.prepareStatement("select p.no_rkm_medis, p.nm_pasien, concat(ifnull(p.tmp_lahir,'-'),', ',date_format(p.tgl_lahir,'%d-%m-%Y')) ttl, "
                            + "lower(ki.diagnosa_awal) diagnosa_awal, ifnull(pr.berat,'') bb, ifnull(pr.tinggi,'') tb, ifnull(sgi.status_gizi,'') sttsgz, "
                            + "ifnull(date_format(bd.tanggal,'%d-%m-%Y'),'') tgldiet, ifnull(d.nama_diet,'') nmdietSiang from kamar_inap ki "
                            + "inner join reg_periksa rp on rp.no_rawat=ki.no_rawat inner join pasien p on p.no_rkm_medis=rp.no_rkm_medis "
                            + "inner join kamar k on k.kd_kamar=ki.kd_kamar inner join bangsal b on b.kd_bangsal=k.kd_bangsal "
                            + "left join status_gizi_inap sgi on sgi.no_rawat=ki.no_rawat left join detail_beri_diet bd on bd.no_rawat=ki.no_rawat "
                            + "left join diet d on d.kd_diet=bd.kd_diet LEFT JOIN pemeriksaan_ranap pr on pr.no_rawat=ki.no_rawat where "
                            + "rp.tgl_registrasi between '" + Valid.SetTgl(tgl1.getSelectedItem() + "") + "' AND '" + Valid.SetTgl(tgl2.getSelectedItem() + "") + "' "
                            + "and (bd.waktu='Siang' or ifnull(bd.waktu,'') = '') and ki.no_rawat = '" + rs1.getString("no_rawat") + "' "
                            + "AND b.nm_gedung='" + cmbGedung.getSelectedItem() + "' order by rp.no_rkm_medis, bd.tanggal");
                    rs2 = ps2.executeQuery();
                    z = 0;
                    while (rs2.next()) {
                        if (z == 0) {
                            Sequel.menyimpan("temporary", "'0','" + rs2.getString("no_rkm_medis") + "','" + rs2.getString("nm_pasien") + "','" + rs2.getString("ttl") + "',"
                                    + "'" + rs2.getString("diagnosa_awal") + "','" + rs2.getString("bb") + "', '" + rs2.getString("tb") + "',"
                                    + "'" + rs2.getString("sttsgz") + "','" + rs2.getString("nmdietSiang") + "','',"
                                    + "'','','','','','','','','','','','','','','','','','','','','','','','','','','',''", "Laporan Gizi");
                        } else if (z == 1) {
                            Sequel.mengedit("temporary", "temp1 = '" + rs2.getString("no_rkm_medis") + "'", "temp9='" + rs2.getString("nmdietSiang") + "'");
                        } else if (z == 2) {
                            Sequel.mengedit("temporary", "temp1 = '" + rs2.getString("no_rkm_medis") + "'", "temp10='" + rs2.getString("nmdietSiang") + "'");
                        } else if (z == 3) {
                            Sequel.mengedit("temporary", "temp1 = '" + rs2.getString("no_rkm_medis") + "'", "temp11='" + rs2.getString("nmdietSiang") + "'");
                        } else if (z == 4) {
                            Sequel.mengedit("temporary", "temp1 = '" + rs2.getString("no_rkm_medis") + "'", "temp12='" + rs2.getString("nmdietSiang") + "'");
                        }
                        z++;
                    }
                }

                this.setCursor(Cursor.getDefaultCursor());
                Map<String, Object> param = new HashMap<>();
                param.put("namars", akses.getnamars());
                param.put("alamatrs", akses.getalamatrs());
                param.put("kotars", akses.getkabupatenrs());
                param.put("propinsirs", akses.getpropinsirs());
                param.put("kontakrs", akses.getkontakrs());
                param.put("emailrs", akses.getemailrs());
                param.put("logo", Sequel.cariGambar("select logo from setting"));
                param.put("periode", "Periode Tgl. " + tgl1.getSelectedItem() + " S.D " + tgl2.getSelectedItem());
                param.put("tgl_surat", Sequel.cariIsi("select day(now())") + " " + Sequel.bulanINDONESIA("select month(now())") + " " + Sequel.cariIsi("select year(now())"));
                param.put("gedung", "Laporan Status Gizi Pasien Rawat Inap Di Ruang Perawatan " + cmbGedung.getSelectedItem());
                Valid.MyReport("rptlapstatusgizi.jasper", "report", "::[ Laporan Status Gizi Pasien Rawat Inap Per Gedung ]::", " select * from temporary", param);
                this.setCursor(Cursor.getDefaultCursor());
                
                BtnCloseIn4ActionPerformed(null);
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_BtnCetakActionPerformed

    private void BtnCloseIn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCloseIn4ActionPerformed
        WindowLapStatusGZ.dispose();
    }//GEN-LAST:event_BtnCloseIn4ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Sequel.cariIsiComboDB("SELECT nm_gedung FROM bangsal WHERE nm_gedung<>'-' GROUP BY nm_gedung ORDER BY nm_gedung", cmbGedung);
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgStatusGizi dialog = new DlgStatusGizi(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnBatal;
    public widget.Button BtnCari;
    private widget.Button BtnCetak;
    private widget.Button BtnCloseIn4;
    public widget.Button BtnEdit;
    private widget.Button BtnKeluar;
    public widget.Button BtnSimpan;
    private widget.Tanggal DTPCari1;
    private widget.Tanggal DTPCari2;
    private widget.Label LCount;
    private javax.swing.JMenuItem MnCetakLapRekap;
    private javax.swing.JMenuItem MnCetakLapStatusGZ;
    private widget.ScrollPane Scroll;
    public widget.TextBox TCari;
    public javax.swing.JDialog WindowLapStatusGZ;
    public widget.ComboBox cmbGedung;
    public widget.ComboBox cmbrgPasienGZ;
    public widget.ComboBox cmbstatusGZ;
    private widget.InternalFrame internalFrame1;
    private widget.InternalFrame internalFrame5;
    private widget.Label jLabel17;
    private widget.Label jLabel18;
    private widget.Label jLabel19;
    private widget.Label jLabel21;
    private widget.Label jLabel22;
    private widget.Label jLabel6;
    private widget.Label jLabel65;
    private widget.Label jLabel66;
    private widget.Label jLabel67;
    private widget.Label jLabel7;
    private widget.Label jLabel70;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private widget.TextBox nmUnit;
    private widget.TextBox nmpasien;
    private widget.TextBox norm;
    private widget.TextBox norw;
    private widget.panelisi panelGlass10;
    private widget.panelisi panelGlass8;
    private widget.panelisi panelGlass9;
    private widget.Table tbStatusGZ;
    private widget.Tanggal tgl1;
    private widget.Tanggal tgl2;
    // End of variables declaration//GEN-END:variables

    public JTable getTable() {
        return tbStatusGZ;
    }

    public void tampil() {
        Valid.tabelKosong(tabMode);
        try {
            ps = koneksi.prepareStatement("SELECT r.no_rawat, p.no_rkm_medis, p.nm_pasien, "
                    + " DATE_FORMAT(sg.tgl_input,'%d/%m/%Y') tgl_input, sg.status_gizi, sg.ruang_rawat, sg.kd_kamar "
                    + " FROM status_gizi_inap sg INNER JOIN reg_periksa r ON r.no_rawat=sg.no_rawat "
                    + " INNER JOIN pasien p ON p.no_rkm_medis=r.no_rkm_medis WHERE "
                    + " sg.tgl_input BETWEEN ? AND ? and sg.status_gizi like ? or "
                    + " sg.tgl_input BETWEEN ? AND ? and r.no_rkm_medis like ? or "
                    + " sg.tgl_input BETWEEN ? AND ? and sg.no_rawat like ? or "
                    + " sg.tgl_input BETWEEN ? AND ? and sg.ruang_rawat like ? or "
                    + " sg.tgl_input BETWEEN ? AND ? and p.nm_pasien like ? "
                    + " ORDER BY sg.tgl_input desc");
            try {
                ps.setString(1, Valid.SetTgl(DTPCari1.getSelectedItem() + ""));
                ps.setString(2, Valid.SetTgl(DTPCari2.getSelectedItem() + ""));
                ps.setString(3, "%" + TCari.getText().trim() + "%");
                ps.setString(4, Valid.SetTgl(DTPCari1.getSelectedItem() + ""));
                ps.setString(5, Valid.SetTgl(DTPCari2.getSelectedItem() + ""));
                ps.setString(6, "%" + TCari.getText().trim() + "%");
                ps.setString(7, Valid.SetTgl(DTPCari1.getSelectedItem() + ""));
                ps.setString(8, Valid.SetTgl(DTPCari2.getSelectedItem() + ""));
                ps.setString(9, "%" + TCari.getText().trim() + "%");
                ps.setString(10, Valid.SetTgl(DTPCari1.getSelectedItem() + ""));
                ps.setString(11, Valid.SetTgl(DTPCari2.getSelectedItem() + ""));
                ps.setString(12, "%" + TCari.getText().trim() + "%");
                ps.setString(13, Valid.SetTgl(DTPCari1.getSelectedItem() + ""));
                ps.setString(14, Valid.SetTgl(DTPCari2.getSelectedItem() + ""));
                ps.setString(15, "%" + TCari.getText().trim() + "%");
                rs = ps.executeQuery();
                x = 1;
                while (rs.next()) {
                    tabMode.addRow(new Object[]{
                        x + ".",
                        rs.getString(1),
                        rs.getString(2),
                        rs.getString(3),
                        rs.getString(4),
                        rs.getString(5),
                        rs.getString(6),
                        rs.getString(7)
                    });
                    x++;
                }
                this.setCursor(Cursor.getDefaultCursor());
            } catch (Exception e) {
                System.out.println("simrskhanza.DlgStatusGizi.tampil() : " + e);
            } finally {
                if (rs != null) {
                    rs.close();
                }
                if (ps != null) {
                    ps.close();
                }
            }
        } catch (SQLException e) {
            System.out.println("Notifikasi : " + e);
        }
        LCount.setText("" + tabMode.getRowCount());
    }

    public void emptTeks() {
        norw.setText("");
        norm.setText("");
        nmpasien.setText("");
        nmUnit.setText("");
        cmbrgPasienGZ.setSelectedIndex(0);
        cmbstatusGZ.setSelectedIndex(0);
        TCari.setText("");
    }

    public void setPasien(String noRawat, String noRM, String nmPasien, String kdkamar) {
        kodekmr = kdkamar;
        norw.setText(noRawat);
        norm.setText(noRM);
        nmpasien.setText(nmPasien);
        TCari.setText(noRawat);

        Sequel.cariIsi("select status_gizi from status_gizi_inap where no_rawat='" + noRawat + "'", cmbstatusGZ);
        Sequel.cariIsi("select ruang_rawat from status_gizi_inap where no_rawat='" + noRawat + "'", cmbrgPasienGZ);
        nmUnit.setText(Sequel.cariIsi("SELECT b.nm_bangsal FROM kamar k "
                + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal WHERE k.kd_kamar='" + kdkamar + "'"));
    }

    private void getdata() {
        kodekmr = "";
        if (tbStatusGZ.getSelectedRow() != -1) {
            norw.setText(tbStatusGZ.getValueAt(tbStatusGZ.getSelectedRow(), 1).toString());
            norm.setText(tbStatusGZ.getValueAt(tbStatusGZ.getSelectedRow(), 2).toString());
            nmpasien.setText(tbStatusGZ.getValueAt(tbStatusGZ.getSelectedRow(), 3).toString());
            cmbstatusGZ.setSelectedItem(tbStatusGZ.getValueAt(tbStatusGZ.getSelectedRow(), 5).toString());
            cmbrgPasienGZ.setSelectedItem(tbStatusGZ.getValueAt(tbStatusGZ.getSelectedRow(), 6).toString());
            kodekmr = tbStatusGZ.getValueAt(tbStatusGZ.getSelectedRow(), 7).toString();
            nmUnit.setText(Sequel.cariIsi("SELECT b.nm_bangsal FROM kamar k "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal WHERE k.kd_kamar='" + kodekmr + "'"));
        }
    }
}
