/*
  Dilarang keras menggandakan/mengcopy/menyebarkan/membajak/mendecompile 
  Software ini dalam bentuk apapun tanpa seijin pembuat software
  (Khanza.Soft Media). Bagi yang sengaja membajak softaware ini ta
  npa ijin, kami sumpahi sial 1000 turunan, miskin sampai 500 turu
  nan. Selalu mendapat kecelakaan sampai 400 turunan. Anak pertama
  nya cacat tidak punya kaki sampai 300 turunan. Susah cari jodoh
  sampai umur 50 tahun sampai 200 turunan. Ya Alloh maafkan kami 
  karena telah berdoa buruk, semua ini kami lakukan karena kami ti
  dak pernah rela karya kami dibajak tanpa ijin.
 */

package laporan;
import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import java.awt.Dimension;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import fungsi.sekuel;
import fungsi.validasi;
import fungsi.akses;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;

/**
 *
 * @author dosen
 */
public final class DlgDataDietRanap extends javax.swing.JDialog {
    private final DefaultTableModel tabMode;
    private Connection koneksi = koneksiDB.condb();
    private final Properties prop = new Properties();
    private PreparedStatement ps;
    private ResultSet rs;
    private validasi Valid = new validasi();
    private sekuel Sequel = new sekuel();
    private int i = 0, cekBonGZ=0,cekDataKetepatanDiet = 0;
    private String mencari = "", cari1 = "", cari2 = "", cari3 = "", cari4 = "", gedungGZ = "", 
            inisialWkt = "", wktpro = "", wktkada = "";
        
    /** Creates new form DlgKamar
     * @param parent
     * @param modal */
    public DlgDataDietRanap(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.setLocation(10,2);
        setSize(628,674);

        tabMode=new DefaultTableModel(null,new String[]{"Kelas", "Ruangan Inap", "Inisial Ruang", "Nama Gedung"}){
              @Override public boolean isCellEditable(int rowIndex, int colIndex){return false;}
        };
        
        tbDietRanap.setModel(tabMode);
        tbDietRanap.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbDietRanap.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (int i = 0; i < 4; i++) {
            TableColumn column = tbDietRanap.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(85);
            } else if (i == 1) {
                column.setPreferredWidth(300);
            } else if (i == 2) {
                column.setPreferredWidth(75);
            } else if (i == 3) {
                column.setPreferredWidth(115);
            }
        }
        tbDietRanap.setDefaultRenderer(Object.class, new WarnaTable());
        
        TCari.setDocument(new batasInput((byte)100).getKata(TCari));
        
        if(koneksiDB.cariCepat().equals("aktif")){
            TCari.getDocument().addDocumentListener(new javax.swing.event.DocumentListener(){
                @Override
                public void insertUpdate(DocumentEvent e) {tampil();}
                @Override
                public void removeUpdate(DocumentEvent e) {tampil();}
                @Override
                public void changedUpdate(DocumentEvent e) {tampil();}
            });
        } 
           
        try {
            prop.loadFromXML(new FileInputStream("setting/database.xml"));            
        } catch (Exception e) {
            System.out.println("E : "+e);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbDietRanap = new widget.Table();
        jPanel3 = new javax.swing.JPanel();
        panelGlass8 = new widget.panelisi();
        jLabel103 = new widget.Label();
        cmbPrin = new widget.ComboBox();
        BtnLabelGZ = new widget.Button();
        BtnBatal1 = new widget.Button();
        BtnCloseIn10 = new widget.Button();
        panelGlass9 = new widget.panelisi();
        jLabel97 = new widget.Label();
        inisial = new widget.TextBox();
        cekKelas = new widget.CekBox();
        kelas = new widget.TextBox();
        jLabel99 = new widget.Label();
        tglDiet = new widget.Tanggal();
        jLabel11 = new widget.Label();
        cmbWaktu = new widget.ComboBox();
        panelGlass10 = new widget.panelisi();
        jLabel102 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();
        BtnAll = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(null);
        setIconImages(null);
        setUndecorated(true);
        setResizable(false);

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3), "::[ Cetak Data Diet Makanan Pasien ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setBorder(javax.swing.BorderFactory.createTitledBorder(null, ".: Ruang Perawatan :.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);
        Scroll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ScrollMouseClicked(evt);
            }
        });

        tbDietRanap.setAutoCreateRowSorter(true);
        tbDietRanap.setToolTipText("Silahkan klik untuk memilih data yang mau diedit ataupun dihapus");
        tbDietRanap.setName("tbDietRanap"); // NOI18N
        tbDietRanap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDietRanapMouseClicked(evt);
            }
        });
        tbDietRanap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbDietRanapKeyPressed(evt);
            }
        });
        Scroll.setViewportView(tbDietRanap);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(44, 144));
        jPanel3.setLayout(new java.awt.BorderLayout(1, 1));

        panelGlass8.setName("panelGlass8"); // NOI18N
        panelGlass8.setPreferredSize(new java.awt.Dimension(55, 47));
        panelGlass8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel103.setForeground(new java.awt.Color(0, 0, 0));
        jLabel103.setText("Yang Akan Diprint :");
        jLabel103.setName("jLabel103"); // NOI18N
        jLabel103.setPreferredSize(new java.awt.Dimension(105, 20));
        panelGlass8.add(jLabel103);

        cmbPrin.setForeground(new java.awt.Color(0, 0, 0));
        cmbPrin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Bon Diet PerRuangan", "Form Ketepatan", "Label Diet PerRuangan", "Label PerWaktu Diet Semua Ruangan", "Bon Diet Semua Ruangan" }));
        cmbPrin.setName("cmbPrin"); // NOI18N
        cmbPrin.setPreferredSize(new java.awt.Dimension(210, 23));
        panelGlass8.add(cmbPrin);

        BtnLabelGZ.setForeground(new java.awt.Color(0, 0, 0));
        BtnLabelGZ.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/b_print.png"))); // NOI18N
        BtnLabelGZ.setMnemonic('C');
        BtnLabelGZ.setText("Cetak");
        BtnLabelGZ.setToolTipText("Alt+C");
        BtnLabelGZ.setName("BtnLabelGZ"); // NOI18N
        BtnLabelGZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLabelGZActionPerformed(evt);
            }
        });
        panelGlass8.add(BtnLabelGZ);

        BtnBatal1.setBorder(null);
        BtnBatal1.setForeground(new java.awt.Color(0, 0, 0));
        BtnBatal1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Cancel-2-16x16.png"))); // NOI18N
        BtnBatal1.setMnemonic('B');
        BtnBatal1.setText("Baru");
        BtnBatal1.setToolTipText("Alt+B");
        BtnBatal1.setName("BtnBatal1"); // NOI18N
        BtnBatal1.setPreferredSize(new java.awt.Dimension(65, 26));
        BtnBatal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBatal1ActionPerformed(evt);
            }
        });
        panelGlass8.add(BtnBatal1);

        BtnCloseIn10.setForeground(new java.awt.Color(0, 0, 0));
        BtnCloseIn10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/cross.png"))); // NOI18N
        BtnCloseIn10.setMnemonic('U');
        BtnCloseIn10.setText("Keluar");
        BtnCloseIn10.setToolTipText("Alt+U");
        BtnCloseIn10.setName("BtnCloseIn10"); // NOI18N
        BtnCloseIn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCloseIn10ActionPerformed(evt);
            }
        });
        panelGlass8.add(BtnCloseIn10);

        jPanel3.add(panelGlass8, java.awt.BorderLayout.PAGE_END);

        panelGlass9.setName("panelGlass9"); // NOI18N
        panelGlass9.setPreferredSize(new java.awt.Dimension(44, 47));
        panelGlass9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel97.setForeground(new java.awt.Color(0, 0, 0));
        jLabel97.setText("Inisial Ruangan :");
        jLabel97.setName("jLabel97"); // NOI18N
        jLabel97.setPreferredSize(new java.awt.Dimension(83, 20));
        panelGlass9.add(jLabel97);

        inisial.setEditable(false);
        inisial.setForeground(new java.awt.Color(0, 0, 0));
        inisial.setHighlighter(null);
        inisial.setName("inisial"); // NOI18N
        inisial.setPreferredSize(new java.awt.Dimension(50, 24));
        panelGlass9.add(inisial);

        cekKelas.setBorder(null);
        cekKelas.setForeground(new java.awt.Color(0, 0, 0));
        cekKelas.setText("Per Kelas :");
        cekKelas.setBorderPainted(true);
        cekKelas.setBorderPaintedFlat(true);
        cekKelas.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cekKelas.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        cekKelas.setName("cekKelas"); // NOI18N
        cekKelas.setOpaque(false);
        cekKelas.setPreferredSize(new java.awt.Dimension(100, 23));
        cekKelas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cekKelasItemStateChanged(evt);
            }
        });
        cekKelas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cekKelasMouseClicked(evt);
            }
        });
        cekKelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekKelasActionPerformed(evt);
            }
        });
        panelGlass9.add(cekKelas);

        kelas.setEditable(false);
        kelas.setForeground(new java.awt.Color(0, 0, 0));
        kelas.setHighlighter(null);
        kelas.setName("kelas"); // NOI18N
        kelas.setPreferredSize(new java.awt.Dimension(110, 24));
        panelGlass9.add(kelas);

        jLabel99.setForeground(new java.awt.Color(0, 0, 0));
        jLabel99.setText("Tgl. Beri Diet :");
        jLabel99.setName("jLabel99"); // NOI18N
        jLabel99.setPreferredSize(new java.awt.Dimension(80, 20));
        panelGlass9.add(jLabel99);

        tglDiet.setEditable(false);
        tglDiet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "31-05-2023" }));
        tglDiet.setDisplayFormat("dd-MM-yyyy");
        tglDiet.setName("tglDiet"); // NOI18N
        tglDiet.setOpaque(false);
        tglDiet.setPreferredSize(new java.awt.Dimension(95, 23));
        panelGlass9.add(tglDiet);

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Waktu Diet :");
        jLabel11.setName("jLabel11"); // NOI18N
        jLabel11.setPreferredSize(new java.awt.Dimension(67, 23));
        panelGlass9.add(jLabel11);

        cmbWaktu.setForeground(new java.awt.Color(0, 0, 0));
        cmbWaktu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Semua", "Pagi", "Siang", "Sore" }));
        cmbWaktu.setName("cmbWaktu"); // NOI18N
        cmbWaktu.setPreferredSize(new java.awt.Dimension(65, 23));
        cmbWaktu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbWaktuMouseClicked(evt);
            }
        });
        cmbWaktu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbWaktuKeyPressed(evt);
            }
        });
        panelGlass9.add(cmbWaktu);

        jPanel3.add(panelGlass9, java.awt.BorderLayout.PAGE_START);

        panelGlass10.setName("panelGlass10"); // NOI18N
        panelGlass10.setPreferredSize(new java.awt.Dimension(44, 47));
        panelGlass10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel102.setForeground(new java.awt.Color(0, 0, 0));
        jLabel102.setText("Key Word :");
        jLabel102.setName("jLabel102"); // NOI18N
        jLabel102.setPreferredSize(new java.awt.Dimension(60, 20));
        panelGlass10.add(jLabel102);

        TCari.setForeground(new java.awt.Color(0, 0, 0));
        TCari.setHighlighter(null);
        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(250, 24));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelGlass10.add(TCari);

        BtnCari.setBorder(null);
        BtnCari.setForeground(new java.awt.Color(0, 0, 0));
        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('2');
        BtnCari.setText("Tampilkan Data");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(130, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelGlass10.add(BtnCari);

        BtnAll.setForeground(new java.awt.Color(0, 0, 0));
        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('M');
        BtnAll.setText("Semua Data");
        BtnAll.setToolTipText("Alt+M");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        panelGlass10.add(BtnAll);

        jPanel3.add(panelGlass10, java.awt.BorderLayout.CENTER);

        internalFrame1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnLabelGZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLabelGZActionPerformed
        if (cmbPrin.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Pilih dulu salah satu yang akan diprint..!!!");
            cmbPrin.requestFocus();
        } else if (cmbPrin.getSelectedIndex() == 1 || cmbPrin.getSelectedIndex() == 2 || cmbPrin.getSelectedIndex() == 3) {

            if (inisial.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Inisial ruangan harus terisi..!!!");
            } else {
                if (cmbPrin.getSelectedIndex() == 1) {
                    cekBonGZ = 0;
                    cekBonGZ = Sequel.cariInteger("SELECT COUNT(1) cek FROM kamar_inap ki INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                            + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                            + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat "
                            + "AND dd.tanggal = '" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' AND (dd.waktu = 'SIANG' OR ifnull(dd.waktu, '-') = '-') "
                            + "LEFT JOIN diet d ON d.kd_diet = dd.kd_diet WHERE ki.stts_pulang = '-' AND b.nm_gedung = '" + gedungGZ + "'");

                    if (cekBonGZ == 0) {
                        JOptionPane.showMessageDialog(null, "Data tidak ditemukan..!!!");
                    } else {
                        PrinBonDietPerRuangan();
                        emptTeks();
                    }

                } else if (cmbPrin.getSelectedIndex() == 2) {
                    cekDataTepatGZ();
                    if (cekDataKetepatanDiet == 0) {
                        JOptionPane.showMessageDialog(null, "Data tidak ditemukan..!!!");
                    } else {
                        PrinKetepatanDiet();
                        emptTeks();
                    }
                } else if (cmbPrin.getSelectedIndex() == 3) {
                    PrinLabelDietPerRuangan();
                    emptTeks();
                }
            }
        } else if (cmbPrin.getSelectedIndex() == 4) {
            if (cmbWaktu.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Silahkan pilih dulu salah satu waktu dietnya..!!!");
                cmbWaktu.requestFocus();
            } else {
                PrinLabelDietRuanganInap();
                emptTeks();
            }
        } else if (cmbPrin.getSelectedIndex() == 5) {
            PrinBonDietSemuaRuangan();
            emptTeks();
        }
    }//GEN-LAST:event_BtnLabelGZActionPerformed

    private void BtnBatal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBatal1ActionPerformed
        emptTeks();
    }//GEN-LAST:event_BtnBatal1ActionPerformed

    private void BtnCloseIn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCloseIn10ActionPerformed
        dispose();
    }//GEN-LAST:event_BtnCloseIn10ActionPerformed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            BtnCariActionPerformed(null);
            inisial.setText("");
            cekKelas.setSelected(true);
            kelas.setText("");
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN) {
            BtnCari.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_UP) {
            BtnCloseIn10.requestFocus();
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        tampil();
    }//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnCariActionPerformed(null);
        } else {
            Valid.pindah(evt, TCari, BtnAll);
        }
    }//GEN-LAST:event_BtnCariKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        TCari.setText("");
        tampil();
    }//GEN-LAST:event_BtnAllActionPerformed

    private void cekKelasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cekKelasItemStateChanged
        if (cekKelas.isSelected() == true) {
            cekKelas.setText("Semua Kelas :");
            kelas.setText("");
        } else if (cekKelas.isSelected() == false) {
            cekKelas.setText("Per Kelas :");
            if (kelas.getText().equals("")) {
                cekKelas.setSelected(false);
            }
        }
    }//GEN-LAST:event_cekKelasItemStateChanged

    private void cekKelasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cekKelasMouseClicked
        if (cekKelas.isSelected() == true) {
            cekKelas.setText("Semua Kelas :");
            kelas.setText("");
        } else if (cekKelas.isSelected() == false) {
            cekKelas.setText("Per Kelas :");
            if (kelas.getText().equals("")) {
                cekKelas.setSelected(false);
            }
        }
    }//GEN-LAST:event_cekKelasMouseClicked

    private void cekKelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekKelasActionPerformed
        if (cekKelas.isSelected() == true) {
            cekKelas.setText("Semua Kelas :");
            kelas.setText("");
        } else if (cekKelas.isSelected() == false) {
            cekKelas.setText("Per Kelas :");
            if (kelas.getText().equals("")) {
                cekKelas.setSelected(false);
            }
        }
    }//GEN-LAST:event_cekKelasActionPerformed

    private void tbDietRanapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbDietRanapKeyPressed
        if (tabMode.getRowCount() != 0) {
            if ((evt.getKeyCode() == KeyEvent.VK_ENTER) || (evt.getKeyCode() == KeyEvent.VK_UP) || (evt.getKeyCode() == KeyEvent.VK_DOWN)) {
                try {
                    getDataLabelGZ();
                } catch (java.lang.NullPointerException e) {
                }
            }
        }
    }//GEN-LAST:event_tbDietRanapKeyPressed

    private void tbDietRanapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDietRanapMouseClicked
        if (tabMode.getRowCount() != 0) {
            try {
                getDataLabelGZ();
            } catch (java.lang.NullPointerException e) {
            }
        }
    }//GEN-LAST:event_tbDietRanapMouseClicked

    private void ScrollMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ScrollMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ScrollMouseClicked

    private void cmbWaktuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbWaktuMouseClicked
        cmbWaktu.setEditable(false);
    }//GEN-LAST:event_cmbWaktuMouseClicked

    private void cmbWaktuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbWaktuKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbWaktuKeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgDataDietRanap dialog = new DlgDataDietRanap(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnBatal1;
    private widget.Button BtnCari;
    private widget.Button BtnCloseIn10;
    private widget.Button BtnLabelGZ;
    private widget.ScrollPane Scroll;
    private widget.TextBox TCari;
    private widget.CekBox cekKelas;
    private widget.ComboBox cmbPrin;
    private widget.ComboBox cmbWaktu;
    private widget.TextBox inisial;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel102;
    private widget.Label jLabel103;
    private widget.Label jLabel11;
    private widget.Label jLabel97;
    private widget.Label jLabel99;
    private javax.swing.JPanel jPanel3;
    private widget.TextBox kelas;
    private widget.panelisi panelGlass10;
    private widget.panelisi panelGlass8;
    private widget.panelisi panelGlass9;
    private widget.Table tbDietRanap;
    private widget.Tanggal tglDiet;
    // End of variables declaration//GEN-END:variables

    public JTable getTable(){
        return tbDietRanap;
    }
    
    public void tampil() {
        mencari = "";
        cari1 = "b.inisial_label_gizi<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT') and b.nm_bangsal like '%" + TCari.getText() + "%'";
        cari2 = "b.inisial_label_gizi<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT') and k.kelas like '%" + TCari.getText() + "%'";
        cari3 = "b.inisial_label_gizi<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT') and b.inisial_label_gizi like '%" + TCari.getText() + "%'";
        cari4 = "b.inisial_label_gizi<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT') and b.nm_gedung like '%" + TCari.getText() + "%'";

        Valid.tabelKosong(tabMode);
        try {
            mencari = cari1 + " or " + cari2 + " or " + cari3 + " or " + cari4;
            ps = koneksi.prepareStatement("SELECT DISTINCT k.kelas, b.nm_bangsal, b.inisial_label_gizi, b.nm_gedung FROM bangsal b "
                    + "INNER JOIN kamar k on k.kd_bangsal=b.kd_bangsal WHERE " + mencari + " ORDER BY k.kelas, b.nm_bangsal");

            try {
                rs = ps.executeQuery();
                while (rs.next()) {
                    tabMode.addRow(new Object[]{
                        rs.getString(1),
                        rs.getString(2),
                        rs.getString(3),
                        rs.getString(4)
                    });
                }
            } catch (Exception e) {
                System.out.println("laporan.DlgDataDietRanap.tampil() : " + e);
            } finally {
                if (rs != null) {
                    rs.close();
                }
                if (ps != null) {
                    ps.close();
                }
            }
        } catch (SQLException e) {
            System.out.println("Notifikasi : " + e);
        }
    }
    
    private void PrinLabelDietPerRuangan() {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Map<String, Object> param = new HashMap<>();
        param.put("namars", akses.getnamars());
        param.put("alamatrs", akses.getalamatrs());
        param.put("kotars", akses.getkabupatenrs());
        param.put("propinsirs", akses.getpropinsirs());
        param.put("kontakrs", akses.getkontakrs());
        param.put("emailrs", akses.getemailrs());
        param.put("logo", Sequel.cariGambar("select logo from setting"));
        param.put("inisial_ruang", inisial.getText());

        if (cekKelas.isSelected() == true) {
            param.put("ruangan", "Ruang Perawatan : " + gedungGZ + ", Semua Kelas Rawat" + ", Tgl. Pemberian Diet : " + tglDiet.getSelectedItem());
            Valid.MyReport("rptlabeldietRanap.jasper", "report", "::[ Label Diet Gizi Pasien PerRuangan Inap ]::",
                    " select a.nm_pasien,a.no_rkm_medis,a.ttl , a.kelas, a.inisial_kls,a.inisial_label_gizi, "
                    + "ifnull(b.nama_diet,'.........................................') nama_diet_pagi, "
                    + "ifnull(b.waktu,'Pagi') waktu_pagi, ifnull(b.inisial_wkt,'PA') inisial_wkt_pagi, b.wp_pagi, b.wk_pagi, "
                    + "ifnull(c.nama_diet,'.........................................') nama_diet_siang, "
                    + "ifnull(c.waktu,'Siang') waktu_siang, ifnull(c.inisial_wkt,'SI') inisial_wkt_siang, c.wp_siang, c.wk_siang, "
                    + "ifnull(d.nama_diet,'.........................................') nama_diet_sore, "
                    + "ifnull(d.waktu,'Sore') waktu_sore, ifnull(d.inisial_wkt,'SO') inisial_wkt_sore, d.wp_sore, d.wk_sore "
                    + "from ((select rp.no_rkm_medis, p.nm_pasien,CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "k.kelas,SUBSTRING(k.kelas, 7, 1) inisial_kls, b.inisial_label_gizi from kamar_inap ki "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "where ki.stts_pulang = '-' AND b.inisial_label_gizi = '" + inisial.getText() + "') as a  "
                    + "left join "
                    + "(SELECT p.nm_pasien, p.no_rkm_medis, CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "IF(dd.disajikan='biasa',d.nama_diet,CONCAT(d.nama_diet,' (KOTAK)')) nama_diet, dd.waktu, "
                    + "LEFT (UPPER(dd.waktu), 2) inisial_wkt, b.inisial_label_gizi, k.kelas, SUBSTRING(k.kelas, 7, 1) inisial_kls, "
                    + "'Waktu Produksi : 06.30 WITA' wp_pagi, 'Waktu Kadaluarsa : 09.30 WITA' wk_pagi "
                    + "FROM kamar_inap ki "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                    + "and (dd.waktu = 'pagi' OR ifnull(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                    + "WHERE ki.stts_pulang = '-' AND b.inisial_label_gizi = '" + inisial.getText() + "') as b on b.no_rkm_medis = a.no_rkm_medis "
                    + "left JOIN "
                    + "(SELECT p.nm_pasien, p.no_rkm_medis, CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "IF(dd.disajikan='biasa',d.nama_diet,CONCAT(d.nama_diet,' (KOTAK)')) nama_diet, dd.waktu, "
                    + "LEFT (UPPER(dd.waktu), 2) inisial_wkt, b.inisial_label_gizi, k.kelas, SUBSTRING(k.kelas, 7, 1) inisial_kls, "
                    + "'Waktu Produksi : 11.30 WITA' wp_siang, 'Waktu Kadaluarsa : 14.30 WITA' wk_siang "
                    + "FROM kamar_inap ki "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                    + "and (dd.waktu = 'siang' OR ifnull(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                    + "WHERE ki.stts_pulang = '-' AND b.inisial_label_gizi = '" + inisial.getText() + "') as c on a.no_rkm_medis = c.no_rkm_medis "
                    + "left JOIN "
                    + "(SELECT p.nm_pasien, p.no_rkm_medis, CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "IF(dd.disajikan='biasa',d.nama_diet,CONCAT(d.nama_diet,' (KOTAK)')) nama_diet, dd.waktu, "
                    + "LEFT (UPPER(dd.waktu), 2) inisial_wkt, b.inisial_label_gizi, k.kelas, SUBSTRING(k.kelas, 7, 1) inisial_kls, "
                    + "'Waktu Produksi : 16.45 WITA' wp_sore, 'Waktu Kadaluarsa : 19.45 WITA' wk_sore "
                    + "FROM kamar_inap ki "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                    + "and (dd.waktu = 'sore' OR ifnull(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                    + "WHERE ki.stts_pulang = '-' AND b.inisial_label_gizi = '" + inisial.getText() + "') as d on a.no_rkm_medis = d.no_rkm_medis) "
                    + "ORDER BY nama_diet_pagi DESC, nama_diet_siang DESC, nama_diet_sore DESC, nm_pasien", param);

        } else if (cekKelas.isSelected() == false) {
            param.put("ruangan", "Ruang Perawatan : " + gedungGZ + ", " + kelas.getText() + ", Tgl. Pemberian Diet : " + tglDiet.getSelectedItem());
            Valid.MyReport("rptlabeldietRanap.jasper", "report", "::[ Label Diet Gizi Pasien PerRuangan Inap ]::",
                    "select a.nm_pasien,a.no_rkm_medis,a.ttl , a.kelas, a.inisial_kls,a.inisial_label_gizi, "
                    + "ifnull(b.nama_diet,'.........................................') nama_diet_pagi, "
                    + "ifnull(b.waktu,'Pagi') waktu_pagi, ifnull(b.inisial_wkt,'PA') inisial_wkt_pagi, b.wp_pagi, b.wk_pagi, "
                    + "ifnull(c.nama_diet,'.........................................') nama_diet_siang, "
                    + "ifnull(c.waktu,'Siang') waktu_siang, ifnull(c.inisial_wkt,'SI') inisial_wkt_siang, c.wp_siang, c.wk_siang, "
                    + "ifnull(d.nama_diet,'.........................................') nama_diet_sore, "
                    + "ifnull(d.waktu,'Sore') waktu_sore, ifnull(d.inisial_wkt,'SO') inisial_wkt_sore, d.wp_sore, d.wk_sore "
                    + "from ((select rp.no_rkm_medis, p.nm_pasien,CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "k.kelas,SUBSTRING(k.kelas, 7, 1) inisial_kls, b.inisial_label_gizi from kamar_inap ki "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "where ki.stts_pulang = '-' AND b.inisial_label_gizi = '" + inisial.getText() + "' AND k.kelas = '" + kelas.getText() + "') as a  "
                    + "left join "
                    + "(SELECT p.nm_pasien, p.no_rkm_medis, CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "IF(dd.disajikan='biasa',d.nama_diet,CONCAT(d.nama_diet,' (KOTAK)')) nama_diet, dd.waktu, "
                    + "LEFT (UPPER(dd.waktu), 2) inisial_wkt, b.inisial_label_gizi, k.kelas, SUBSTRING(k.kelas, 7, 1) inisial_kls, "
                    + "'Waktu Produksi : 06.30 WITA' wp_pagi, 'Waktu Kadaluarsa : 09.30 WITA' wk_pagi "
                    + "FROM kamar_inap ki "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                    + "and (dd.waktu = 'pagi' OR ifnull(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                    + "WHERE ki.stts_pulang = '-' AND b.inisial_label_gizi = '" + inisial.getText() + "' AND k.kelas = '" + kelas.getText() + "') as b on b.no_rkm_medis = a.no_rkm_medis "
                    + "left JOIN "
                    + "(SELECT p.nm_pasien, p.no_rkm_medis, CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "IF(dd.disajikan='biasa',d.nama_diet,CONCAT(d.nama_diet,' (KOTAK)')) nama_diet, dd.waktu, "
                    + "LEFT (UPPER(dd.waktu), 2) inisial_wkt, b.inisial_label_gizi, k.kelas, SUBSTRING(k.kelas, 7, 1) inisial_kls, "
                    + "'Waktu Produksi : 11.30 WITA' wp_siang, 'Waktu Kadaluarsa : 14.30 WITA' wk_siang "
                    + "FROM kamar_inap ki "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                    + "and (dd.waktu = 'siang' OR ifnull(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                    + "WHERE ki.stts_pulang = '-' AND b.inisial_label_gizi = '" + inisial.getText() + "' AND k.kelas = '" + kelas.getText() + "') as c on a.no_rkm_medis = c.no_rkm_medis "
                    + "left JOIN "
                    + "(SELECT p.nm_pasien, p.no_rkm_medis, CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "IF(dd.disajikan='biasa',d.nama_diet,CONCAT(d.nama_diet,' (KOTAK)')) nama_diet, dd.waktu, "
                    + "LEFT (UPPER(dd.waktu), 2) inisial_wkt, b.inisial_label_gizi, k.kelas, SUBSTRING(k.kelas, 7, 1) inisial_kls, "
                    + "'Waktu Produksi : 16.45 WITA' wp_sore, 'Waktu Kadaluarsa : 19.45 WITA' wk_sore "
                    + "FROM kamar_inap ki "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                    + "and (dd.waktu = 'sore' OR ifnull(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                    + "WHERE ki.stts_pulang = '-' AND b.inisial_label_gizi = '" + inisial.getText() + "' AND k.kelas = '" + kelas.getText() + "') as d on a.no_rkm_medis = d.no_rkm_medis) "
                    + "ORDER BY nama_diet_pagi DESC, nama_diet_siang DESC, nama_diet_sore DESC, nm_pasien", param);
        }

        this.setCursor(Cursor.getDefaultCursor());
        tampil();
    }
    
    private void PrinBonDietPerRuangan() {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Map<String, Object> param = new HashMap<>();
        param.put("namars", akses.getnamars());
        param.put("alamatrs", akses.getalamatrs());
        param.put("kotars", akses.getkabupatenrs());
        param.put("propinsirs", akses.getpropinsirs());
        param.put("kontakrs", akses.getkontakrs());
        param.put("emailrs", akses.getemailrs());
        param.put("logo", Sequel.cariGambar("select logo from setting"));
        param.put("tgl_beri_diet", Sequel.hariINDONESIA("SELECT DATE_FORMAT('" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "','%W')") + ", " + tglDiet.getSelectedItem());
        param.put("tgl_sekarang", Sequel.hariINDONESIA("SELECT DATE_FORMAT(now(),'%W')") + ", " + Sequel.cariIsi("SELECT DATE_FORMAT(NOW(),'%d-%m-%Y')"));
        param.put("ruangan", "BON DIET MAKANAN PASIEN RUANG PERAWATAN " + gedungGZ);
        Valid.MyReport("rptbondietRanap.jasper", "report", "::[ Bon Diet Makanan Pasien PerRuangan Inap ]::",
                "SELECT CONCAT(p.no_rkm_medis,' - ',p.nm_pasien) pasien, DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y') tgl_lhr, "
                + "b.nm_bangsal, lower(IFNULL(ki.diagnosa_awal, '-')) diag_awal, IFNULL(d.nama_diet, '') nm_diet, "
                + "if(dd.disajikan='biasa','',ifnull(dd.disajikan,'-')) kemasan FROM kamar_inap ki "
                + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal = '" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                + "AND (dd.waktu = 'SIANG' OR ifnull(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet WHERE "
                + "ki.stts_pulang = '-' AND b.nm_gedung = '" + gedungGZ + "' ORDER BY b.nm_bangsal, k.kelas, pasien", param);
        this.setCursor(Cursor.getDefaultCursor());
        tampil();
    }
    
    private void PrinBonDietSemuaRuangan() {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Map<String, Object> param = new HashMap<>();
        param.put("namars", akses.getnamars());
        param.put("alamatrs", akses.getalamatrs());
        param.put("kotars", akses.getkabupatenrs());
        param.put("propinsirs", akses.getpropinsirs());
        param.put("kontakrs", akses.getkontakrs());
        param.put("emailrs", akses.getemailrs());
        param.put("logo", Sequel.cariGambar("select logo from setting"));
        param.put("tgl_beri_diet", Sequel.hariINDONESIA("SELECT DATE_FORMAT('" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "','%W')") + ", " + tglDiet.getSelectedItem());
        param.put("tgl_sekarang", Sequel.hariINDONESIA("SELECT DATE_FORMAT(now(),'%W')") + ", " + Sequel.cariIsi("SELECT DATE_FORMAT(NOW(),'%d-%m-%Y')"));
        param.put("ruangan", "BON DIET MAKANAN PASIEN RUANG PERAWATAN INAP");        
        Valid.MyReport("rptbondietRanapAll.jasper", "report", "::[ Bon Diet Makanan Pasien Semua Ruangan Inap ]::",
                "SELECT CONCAT(p.no_rkm_medis,' - ',p.nm_pasien) pasien, DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y') tgl_lhr, "
                + "b.nm_bangsal, LOWER(IFNULL(ki.diagnosa_awal, '-')) diag_awal, IFNULL(d.nama_diet, '') nm_diet, b.nm_gedung, "
                + "if(dd.disajikan='biasa','',ifnull(dd.disajikan,'-')) kemasan FROM kamar_inap ki INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat "
                + "AND dd.tanggal = '" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                + "AND (dd.waktu = 'SIANG' OR IFNULL(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet WHERE "
                + "ki.stts_pulang = '-' AND b.nm_gedung<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT') ORDER BY b.nm_gedung, k.kelas, pasien", param);
        this.setCursor(Cursor.getDefaultCursor());
        tampil();
    }
    
    private void cekDataTepatGZ() {
        cekDataKetepatanDiet = 0;
        cekDataKetepatanDiet = Sequel.cariInteger("select COUNT(1) cek from ((select rp.no_rkm_medis, p.nm_pasien, "
                + "DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y') tgl_lahir, b.nm_bangsal, k.kelas from kamar_inap ki "
                + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                + "where ki.stts_pulang = '-' AND b.nm_gedung = '" + gedungGZ + "') as a "
                + "left join "
                + "(SELECT p.no_rkm_medis, p.nm_pasien, DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y') tgl_lahir, d.nama_diet, dd.waktu "
                + "FROM kamar_inap ki "
                + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                + "and dd.waktu = 'pagi' LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                + "WHERE ki.stts_pulang = '-' AND b.nm_gedung = '" + gedungGZ + "') as b on b.no_rkm_medis = a.no_rkm_medis "
                + "left JOIN "
                + "(SELECT p.no_rkm_medis, p.nm_pasien, DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y') tgl_lahir, d.nama_diet, dd.waktu "
                + "FROM kamar_inap ki "
                + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                + "and dd.waktu = 'siang' LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                + "WHERE ki.stts_pulang = '-' AND b.nm_gedung = '" + gedungGZ + "') as c on a.no_rkm_medis = c.no_rkm_medis "
                + "left JOIN "
                + "(SELECT p.no_rkm_medis, p.nm_pasien, DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y') tgl_lahir, d.nama_diet, dd.waktu "
                + "FROM kamar_inap ki "
                + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                + "and dd.waktu = 'sore' LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                + "WHERE ki.stts_pulang = '-' AND b.nm_gedung = '" + gedungGZ + "') as d on a.no_rkm_medis = d.no_rkm_medis)");
    }
    
    private void PrinKetepatanDiet() {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Map<String, Object> param = new HashMap<>();
        param.put("namars", akses.getnamars());
        param.put("alamatrs", akses.getalamatrs());
        param.put("kotars", akses.getkabupatenrs());
        param.put("propinsirs", akses.getpropinsirs());
        param.put("kontakrs", akses.getkontakrs());
        param.put("emailrs", akses.getemailrs());
        param.put("logo", Sequel.cariGambar("select logo from setting"));
        param.put("tgl_beri_diet", Sequel.hariINDONESIA("SELECT DATE_FORMAT('" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "','%W')") + ", " + tglDiet.getSelectedItem());
        param.put("tgl_sekarang", Sequel.hariINDONESIA("SELECT DATE_FORMAT(now(),'%W')") + ", " + Sequel.cariIsi("SELECT DATE_FORMAT(NOW(),'%d-%m-%Y')"));
        param.put("ruangan", "FORM KETEPATAN DIET RUANG PERAWATAN " + gedungGZ);
        Valid.MyReport("rptKetepatandietRanap.jasper", "report", "::[ Form Ketepatan Diet Pasien ]::",
                "select concat(a.no_rkm_medis,' - ',a.nm_pasien) pasien, a.tgl_lahir, a.nm_bangsal, ifnull(b.nama_diet,'') diet_pagi, ifnull(b.waktu,'Pagi') waktu_pagi, "
                + "ifnull(c.nama_diet,'') diet_siang, ifnull(c.waktu,'Siang') waktu_siang, ifnull(d.nama_diet,'') diet_sore, ifnull(d.waktu,'Sore') waktu_sore, a.kelas "
                + "from ((select rp.no_rkm_medis, p.nm_pasien, DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y') tgl_lahir, b.nm_bangsal, k.kelas from kamar_inap ki "
                + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                + "where ki.stts_pulang = '-' AND b.nm_gedung = '" + gedungGZ + "') as a "
                + "left join "
                + "(SELECT p.no_rkm_medis, p.nm_pasien, DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y') tgl_lahir, d.nama_diet, dd.waktu "
                + "FROM kamar_inap ki "
                + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                + "and dd.waktu = 'pagi' LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                + "WHERE ki.stts_pulang = '-' AND b.nm_gedung = '" + gedungGZ + "') as b on b.no_rkm_medis = a.no_rkm_medis "
                + "left JOIN "
                + "(SELECT p.no_rkm_medis, p.nm_pasien, DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y') tgl_lahir, d.nama_diet, dd.waktu "
                + "FROM kamar_inap ki "
                + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                + "and dd.waktu = 'siang' LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                + "WHERE ki.stts_pulang = '-' AND b.nm_gedung = '" + gedungGZ + "') as c on a.no_rkm_medis = c.no_rkm_medis "
                + "left JOIN "
                + "(SELECT p.no_rkm_medis, p.nm_pasien, DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y') tgl_lahir, d.nama_diet, dd.waktu "
                + "FROM kamar_inap ki "
                + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                + "and dd.waktu = 'sore' LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                + "WHERE ki.stts_pulang = '-' AND b.nm_gedung = '" + gedungGZ + "') as d on a.no_rkm_medis = d.no_rkm_medis) "
                + "ORDER BY nm_bangsal, kelas, pasien", param);
        this.setCursor(Cursor.getDefaultCursor());
        tampil();
    }
    
    public void emptTeks() {
        inisial.setText("");
        kelas.setText("");
        TCari.setText("");
        cekKelas.setSelected(true);
        cmbPrin.setSelectedIndex(0);
        cmbWaktu.setSelectedIndex(0);
        TCari.requestFocus();
    }
    
    private void getDataLabelGZ() {
        gedungGZ = "";

        if (tbDietRanap.getSelectedRow() != -1) {
            kelas.setText(tbDietRanap.getValueAt(tbDietRanap.getSelectedRow(), 0).toString());
            inisial.setText(tbDietRanap.getValueAt(tbDietRanap.getSelectedRow(), 2).toString());
            gedungGZ = tbDietRanap.getValueAt(tbDietRanap.getSelectedRow(), 3).toString();

            cekKelas.setSelected(false);
            if (kelas.getText().equals("Kelas VVIP")) {
                kelas.setText("Kelas VIP");
            } else {
                kelas.setText(tbDietRanap.getValueAt(tbDietRanap.getSelectedRow(), 0).toString());
            }
        }
    }
    
    private void PrinLabelDietRuanganInap() {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Map<String, Object> param = new HashMap<>();
        param.put("namars", akses.getnamars());
        param.put("alamatrs", akses.getalamatrs());
        param.put("kotars", akses.getkabupatenrs());
        param.put("propinsirs", akses.getpropinsirs());
        param.put("kontakrs", akses.getkontakrs());
        param.put("emailrs", akses.getemailrs());
        param.put("logo", Sequel.cariGambar("select logo from setting"));
        
        if (cmbWaktu.getSelectedIndex() == 1) {
            param.put("ruangan", "Semua Kelas Rawat" + ", Tgl. Pemberian Diet : " + tglDiet.getSelectedItem()+", Semua Waktu Diet");
            Valid.MyReport("rptlabeldietRanapAll.jasper", "report", "::[ Label Diet Gizi Pasien Semua Ruangan Inap Semua Waktu Diet ]::",
                    " SELECT a.nm_pasien,a.no_rkm_medis,a.ttl , a.kelas, a.inisial_kls,a.inisial_label_gizi, "
                    + "IFNULL(b.nama_diet,'.........................................') nama_diet_pagi, "
                    + "IFNULL(b.waktu,'Pagi') waktu_pagi, IFNULL(b.inisial_wkt,'PA') inisial_wkt_pagi, b.wp_pagi, b.wk_pagi, "
                    + "IFNULL(c.nama_diet,'.........................................') nama_diet_siang, "
                    + "IFNULL(c.waktu,'Siang') waktu_siang, IFNULL(c.inisial_wkt,'SI') inisial_wkt_siang, c.wp_siang, c.wk_siang, "
                    + "IFNULL(d.nama_diet,'.........................................') nama_diet_sore, "
                    + "IFNULL(d.waktu,'Sore') waktu_sore, IFNULL(d.inisial_wkt,'SO') inisial_wkt_sore, d.wp_sore, d.wk_sore, a.nm_gedung "
                    + "FROM ((SELECT rp.no_rkm_medis, p.nm_pasien,CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "k.kelas,SUBSTRING(k.kelas, 7, 1) inisial_kls, b.inisial_label_gizi, b.nm_gedung FROM kamar_inap ki "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "WHERE ki.stts_pulang = '-' AND b.nm_gedung<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT')) AS a  "
                    + "LEFT JOIN "
                    + "(SELECT p.nm_pasien, p.no_rkm_medis, CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "IF(dd.disajikan='biasa',d.nama_diet,CONCAT(d.nama_diet,' (KOTAK)')) nama_diet, dd.waktu, "
                            +"LEFT (UPPER(dd.waktu), 2) inisial_wkt, b.inisial_label_gizi, k.kelas, SUBSTRING(k.kelas, 7, 1) inisial_kls, "
                            +"'Waktu Produksi : 06.30 WITA' wp_pagi, 'Waktu Kadaluarsa : 09.30 WITA' wk_pagi "
                    + "FROM kamar_inap ki "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                    + "AND (dd.waktu = 'pagi' OR IFNULL(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                    + "WHERE ki.stts_pulang = '-' AND b.nm_gedung<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT')) AS b ON b.no_rkm_medis = a.no_rkm_medis "
                    + "LEFT JOIN "
                    + "(SELECT p.nm_pasien, p.no_rkm_medis, CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "IF(dd.disajikan='biasa',d.nama_diet,CONCAT(d.nama_diet,' (KOTAK)')) nama_diet, dd.waktu, "
                            +"LEFT (UPPER(dd.waktu), 2) inisial_wkt, b.inisial_label_gizi, k.kelas, SUBSTRING(k.kelas, 7, 1) inisial_kls, "
                            +"'Waktu Produksi : 11.30 WITA' wp_siang, 'Waktu Kadaluarsa : 14.30 WITA' wk_siang "
                    + "FROM kamar_inap ki "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                    + "AND (dd.waktu = 'siang' OR IFNULL(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                    + "WHERE ki.stts_pulang = '-' AND b.nm_gedung<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT')) AS c ON a.no_rkm_medis = c.no_rkm_medis "
                    + "LEFT JOIN "
                    + "(SELECT p.nm_pasien, p.no_rkm_medis, CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "IF(dd.disajikan='biasa',d.nama_diet,CONCAT(d.nama_diet,' (KOTAK)')) nama_diet, dd.waktu, "
                            +"LEFT (UPPER(dd.waktu), 2) inisial_wkt, b.inisial_label_gizi, k.kelas, SUBSTRING(k.kelas, 7, 1) inisial_kls, "
                            +"'Waktu Produksi : 16.45 WITA' wp_sore, 'Waktu Kadaluarsa : 19.45 WITA' wk_sore "
                    + "FROM kamar_inap ki "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                    + "AND (dd.waktu = 'sore' OR IFNULL(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                    + "WHERE ki.stts_pulang = '-' AND b.nm_gedung<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT')) AS d ON a.no_rkm_medis = d.no_rkm_medis) "
                    + "ORDER BY nm_gedung, nama_diet_pagi DESC, nama_diet_siang DESC, nama_diet_sore DESC, nm_pasien", param);
        } else {
            inisialWkt = "";
            wktpro = "";
            wktkada = "";
            if (cmbWaktu.getSelectedIndex() == 2) {
                inisialWkt = "PA";
                wktpro = "06.30 WITA";
                wktkada = "09.30 WITA";
            } else if (cmbWaktu.getSelectedIndex() == 3) {
                inisialWkt = "SI";
                wktpro = "11.30 WITA";
                wktkada = "14.30 WITA";
            } else if (cmbWaktu.getSelectedIndex() == 4) {
                inisialWkt = "SO";
                wktpro = "16.45 WITA";
                wktkada = "19.45 WITA";
            }
            
            param.put("ruangan", "Semua Kelas Rawat" + ", Tgl. Pemberian Diet : " + tglDiet.getSelectedItem());
            param.put("waktu_diet", ", Khusus untuk waktu diet : "+cmbWaktu.getSelectedItem());
            param.put("produksi", "Waktu Produksi : " + wktpro);
            param.put("kadaluarsa", "Waktu Kadaluarsa : " + wktkada);
            Valid.MyReport("rptlabeldietRanapWaktu.jasper", "report", "::[ Label Diet Gizi Pasien Semua Ruangan Inap PerWaktu Diet " + cmbWaktu.getSelectedItem() + " ]::",
                    " SELECT a.nm_pasien,a.no_rkm_medis,a.ttl , a.kelas, a.inisial_kls,a.inisial_label_gizi, "
                    + "IFNULL(b.nama_diet,'.........................................') nama_diet, "
                    + "IFNULL(b.waktu,'" + cmbWaktu.getSelectedItem() + "') waktu_diet, IFNULL(b.inisial_wkt,'" + inisialWkt + "') inisial_wkt_diet, a.nm_gedung "
                    + "FROM ((SELECT rp.no_rkm_medis, p.nm_pasien,CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "k.kelas,SUBSTRING(k.kelas, 7, 1) inisial_kls, b.inisial_label_gizi, b.nm_gedung FROM kamar_inap ki "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "WHERE ki.stts_pulang = '-' AND b.nm_gedung<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT')) AS a  "
                    + "LEFT JOIN "
                    + "(SELECT p.nm_pasien, p.no_rkm_medis, CONCAT(p.tmp_lahir,', ',DATE_FORMAT(p.tgl_lahir, '%d-%m-%Y')) ttl, "
                    + "IF(dd.disajikan='biasa',d.nama_diet,CONCAT(d.nama_diet,' (KOTAK)')) nama_diet, dd.waktu, LEFT (UPPER(dd.waktu), 2) inisial_wkt, b.inisial_label_gizi, k.kelas, SUBSTRING(k.kelas, 7, 1) inisial_kls "
                    + "FROM kamar_inap ki "
                    + "INNER JOIN kamar k ON k.kd_kamar = ki.kd_kamar "
                    + "INNER JOIN bangsal b ON b.kd_bangsal = k.kd_bangsal "
                    + "INNER JOIN reg_periksa rp ON rp.no_rawat = ki.no_rawat "
                    + "INNER JOIN pasien p ON p.no_rkm_medis = rp.no_rkm_medis "
                    + "LEFT JOIN detail_beri_diet dd ON dd.no_rawat = ki.no_rawat AND dd.tanggal='" + Valid.SetTgl(tglDiet.getSelectedItem() + "") + "' "
                    + "AND (dd.waktu = '" + cmbWaktu.getSelectedItem() + "' OR IFNULL(dd.waktu, '-') = '-') LEFT JOIN diet d ON d.kd_diet = dd.kd_diet "
                    + "WHERE ki.stts_pulang = '-' AND b.nm_gedung<>'-' and b.nm_gedung not in ('PERINATOLOGI','BAYI SEHAT')) AS b ON b.no_rkm_medis = a.no_rkm_medis) "
                    + "ORDER BY nm_gedung, nama_diet DESC, nm_pasien", param);
        }     

        this.setCursor(Cursor.getDefaultCursor());
        tampil();
    }
}
