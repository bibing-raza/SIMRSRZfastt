/*
  Dilarang keras menggandakan/mengcopy/menyebarkan/membajak/mendecompile 
  Software ini dalam bentuk apapun tanpa seijin pembuat software
  (Khanza.Soft Media). Bagi yang sengaja membajak softaware ini ta
  npa ijin, kami sumpahi sial 1000 turunan, miskin sampai 500 turu
  nan. Selalu mendapat kecelakaan sampai 400 turunan. Anak pertama
  nya cacat tidak punya kaki sampai 300 turunan. Susah cari jodoh
  sampai umur 50 tahun sampai 200 turunan. Ya Alloh maafkan kami 
  karena telah berdoa buruk, semua ini kami lakukan karena kami ti
  dak pernah rela karya kami dibajak tanpa ijin.
 */

package setting;
import fungsi.WarnaTable;
import fungsi.batasInput;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author perpustakaan
 */
public class DlgUpdateUser extends javax.swing.JDialog {
    private final DefaultTableModel tabMode;
    private Connection koneksi=koneksiDB.condb();
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private PreparedStatement ps;
    private ResultSet rs;
    private int i=0,jml=0;
    private boolean[] akses;
    private String[] menu;
    private boolean[] pilih;

    /** Creates new form DlgUser
     * @param parent
     * @param modal */
    public DlgUpdateUser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        tabMode=new DefaultTableModel(null,new Object[]{"#","Pilihan Hak Akses Menu","Status"}){
              @Override 
              public boolean isCellEditable(int rowIndex, int colIndex){
                  boolean a = true;
                    if (colIndex==1) {
                        a=false;
                    }
                    return a;
              }              
              Class[] types = new Class[] {
                java.lang.Boolean.class,java.lang.Object.class,java.lang.Boolean.class
             };
             @Override
             public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
             }
        };

        tbUser.setModel(tabMode);
        tbUser.setPreferredScrollableViewportSize(new Dimension(500,500));
        tbUser.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        for (i = 0; i < 3; i++) {
            TableColumn column = tbUser.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(30);
            } else if (i == 1) {
                column.setPreferredWidth(350);
            } else if (i == 2) {
                column.setPreferredWidth(60);
            }
        }
        
        tbUser.setDefaultRenderer(Object.class, new WarnaTable());
        
        TPass.setDocument(new batasInput((byte)50).getKata(TPass));
        TCari.setDocument(new batasInput((byte)100).getKata(TCari));       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do falseT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TKd = new widget.TextBox();
        Popup = new javax.swing.JPopupMenu();
        ppBersihkan = new javax.swing.JMenuItem();
        ppSemua = new javax.swing.JMenuItem();
        ppBersihkan1 = new javax.swing.JMenuItem();
        ppSemua1 = new javax.swing.JMenuItem();
        internalFrame1 = new widget.InternalFrame();
        Scroll = new widget.ScrollPane();
        tbUser = new widget.Table();
        panelGlass5 = new widget.panelisi();
        jLabel3 = new widget.Label();
        TNmUser = new widget.TextBox();
        jLabel4 = new widget.Label();
        TPass = new widget.TextBox();
        panelGlass8 = new widget.panelisi();
        jLabel8 = new widget.Label();
        TCari = new widget.TextBox();
        BtnCari = new widget.Button();
        BtnAll = new widget.Button();
        jLabel9 = new widget.Label();
        LCount = new widget.Label();
        BtnSimpan = new widget.Button();
        BtnKeluar = new widget.Button();

        TKd.setEditable(false);
        TKd.setHighlighter(null);
        TKd.setName("TKd"); // NOI18N
        TKd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TKdKeyPressed(evt);
            }
        });

        Popup.setName("Popup"); // NOI18N

        ppBersihkan.setBackground(new java.awt.Color(255, 255, 254));
        ppBersihkan.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ppBersihkan.setForeground(new java.awt.Color(0, 0, 0));
        ppBersihkan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        ppBersihkan.setText("Bersihkan Pilihan");
        ppBersihkan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ppBersihkan.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ppBersihkan.setIconTextGap(8);
        ppBersihkan.setName("ppBersihkan"); // NOI18N
        ppBersihkan.setPreferredSize(new java.awt.Dimension(200, 25));
        ppBersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppBersihkanActionPerformed(evt);
            }
        });
        Popup.add(ppBersihkan);

        ppSemua.setBackground(new java.awt.Color(255, 255, 254));
        ppSemua.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ppSemua.setForeground(new java.awt.Color(0, 0, 0));
        ppSemua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        ppSemua.setText("Pilih Semua");
        ppSemua.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ppSemua.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ppSemua.setIconTextGap(8);
        ppSemua.setName("ppSemua"); // NOI18N
        ppSemua.setPreferredSize(new java.awt.Dimension(200, 25));
        ppSemua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppSemuaActionPerformed(evt);
            }
        });
        Popup.add(ppSemua);

        ppBersihkan1.setBackground(new java.awt.Color(255, 255, 254));
        ppBersihkan1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ppBersihkan1.setForeground(new java.awt.Color(0, 0, 0));
        ppBersihkan1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        ppBersihkan1.setText("Bersihkan Semua Hak Akses");
        ppBersihkan1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ppBersihkan1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ppBersihkan1.setIconTextGap(8);
        ppBersihkan1.setName("ppBersihkan1"); // NOI18N
        ppBersihkan1.setPreferredSize(new java.awt.Dimension(200, 25));
        ppBersihkan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppBersihkan1ActionPerformed(evt);
            }
        });
        Popup.add(ppBersihkan1);

        ppSemua1.setBackground(new java.awt.Color(255, 255, 254));
        ppSemua1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ppSemua1.setForeground(new java.awt.Color(0, 0, 0));
        ppSemua1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/category.png"))); // NOI18N
        ppSemua1.setText("Pilih Semua Hak Akses");
        ppSemua1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ppSemua1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ppSemua1.setIconTextGap(8);
        ppSemua1.setName("ppSemua1"); // NOI18N
        ppSemua1.setPreferredSize(new java.awt.Dimension(200, 25));
        ppSemua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppSemua1ActionPerformed(evt);
            }
        });
        Popup.add(ppSemua1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3), "::[ Update Hak Akses User ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        Scroll.setComponentPopupMenu(Popup);
        Scroll.setName("Scroll"); // NOI18N
        Scroll.setOpaque(true);

        tbUser.setAutoCreateRowSorter(true);
        tbUser.setToolTipText("Untuk memegang hak akses agar tidak hilang karena pencarian data, silahkan klik di bagian #. \nUntuk memberikan hak akses klik pada akses. Gunakan klik kanan untuk menampilkan popup menu.");
        tbUser.setComponentPopupMenu(Popup);
        tbUser.setName("tbUser"); // NOI18N
        Scroll.setViewportView(tbUser);

        internalFrame1.add(Scroll, java.awt.BorderLayout.CENTER);

        panelGlass5.setName("panelGlass5"); // NOI18N
        panelGlass5.setPreferredSize(new java.awt.Dimension(55, 44));
        panelGlass5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("User : ");
        jLabel3.setName("jLabel3"); // NOI18N
        jLabel3.setPreferredSize(new java.awt.Dimension(50, 23));
        panelGlass5.add(jLabel3);

        TNmUser.setEditable(false);
        TNmUser.setForeground(new java.awt.Color(0, 0, 0));
        TNmUser.setName("TNmUser"); // NOI18N
        TNmUser.setPreferredSize(new java.awt.Dimension(200, 23));
        panelGlass5.add(TNmUser);

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Password : ");
        jLabel4.setName("jLabel4"); // NOI18N
        jLabel4.setPreferredSize(new java.awt.Dimension(80, 23));
        panelGlass5.add(jLabel4);

        TPass.setForeground(new java.awt.Color(0, 0, 0));
        TPass.setName("TPass"); // NOI18N
        TPass.setPreferredSize(new java.awt.Dimension(200, 23));
        TPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TPassKeyPressed(evt);
            }
        });
        panelGlass5.add(TPass);

        internalFrame1.add(panelGlass5, java.awt.BorderLayout.PAGE_START);

        panelGlass8.setName("panelGlass8"); // NOI18N
        panelGlass8.setPreferredSize(new java.awt.Dimension(55, 44));
        panelGlass8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Key Word :");
        jLabel8.setName("jLabel8"); // NOI18N
        jLabel8.setPreferredSize(new java.awt.Dimension(60, 23));
        jLabel8.setRequestFocusEnabled(false);
        panelGlass8.add(jLabel8);

        TCari.setForeground(new java.awt.Color(0, 0, 0));
        TCari.setName("TCari"); // NOI18N
        TCari.setPreferredSize(new java.awt.Dimension(135, 23));
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TCariKeyPressed(evt);
            }
        });
        panelGlass8.add(TCari);

        BtnCari.setForeground(new java.awt.Color(0, 0, 0));
        BtnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/accept.png"))); // NOI18N
        BtnCari.setMnemonic('T');
        BtnCari.setText("Tampilkan Data");
        BtnCari.setToolTipText("Alt+T");
        BtnCari.setName("BtnCari"); // NOI18N
        BtnCari.setPreferredSize(new java.awt.Dimension(130, 23));
        BtnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCariActionPerformed(evt);
            }
        });
        BtnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnCariKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnCari);

        BtnAll.setForeground(new java.awt.Color(0, 0, 0));
        BtnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Search-16x16.png"))); // NOI18N
        BtnAll.setMnemonic('D');
        BtnAll.setText("Semua Data");
        BtnAll.setToolTipText("Alt+D");
        BtnAll.setName("BtnAll"); // NOI18N
        BtnAll.setPreferredSize(new java.awt.Dimension(120, 23));
        BtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAllActionPerformed(evt);
            }
        });
        BtnAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnAllKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnAll);

        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Record :");
        jLabel9.setName("jLabel9"); // NOI18N
        jLabel9.setPreferredSize(new java.awt.Dimension(50, 23));
        panelGlass8.add(jLabel9);

        LCount.setForeground(new java.awt.Color(0, 0, 0));
        LCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        LCount.setText("0");
        LCount.setName("LCount"); // NOI18N
        LCount.setPreferredSize(new java.awt.Dimension(30, 23));
        panelGlass8.add(LCount);

        BtnSimpan.setForeground(new java.awt.Color(0, 0, 0));
        BtnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/save-16x16.png"))); // NOI18N
        BtnSimpan.setMnemonic('S');
        BtnSimpan.setText("Simpan");
        BtnSimpan.setToolTipText("Alt+S");
        BtnSimpan.setName("BtnSimpan"); // NOI18N
        BtnSimpan.setPreferredSize(new java.awt.Dimension(90, 23));
        BtnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSimpanActionPerformed(evt);
            }
        });
        BtnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnSimpanKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnSimpan);

        BtnKeluar.setForeground(new java.awt.Color(0, 0, 0));
        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setText("Keluar");
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(90, 23));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass8.add(BtnKeluar);

        internalFrame1.add(panelGlass8, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TKdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TKdKeyPressed
        Valid.pindah(evt,BtnSimpan,TPass);
}//GEN-LAST:event_TKdKeyPressed

    private void TPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TPassKeyPressed
        Valid.pindah(evt,TKd,BtnSimpan);
}//GEN-LAST:event_TPassKeyPressed

    private void TCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            BtnCariActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN) {
            BtnCari.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_PAGE_UP) {
            BtnKeluar.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            tbUser.requestFocus();
        }
    }//GEN-LAST:event_TCariKeyPressed

    private void BtnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCariActionPerformed
        tampil(TKd.getText());
    }//GEN-LAST:event_BtnCariActionPerformed

    private void BtnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnCariKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnCariActionPerformed(null);
        } else {
            Valid.pindah(evt, TCari, BtnAll);
        }
    }//GEN-LAST:event_BtnCariKeyPressed

    private void BtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAllActionPerformed
        TCari.setText("");
        tampil(TKd.getText());
    }//GEN-LAST:event_BtnAllActionPerformed

    private void BtnAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnAllKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnAllActionPerformed(null);
        } else {
            Valid.pindah(evt, BtnCari, BtnSimpan);
        }
    }//GEN-LAST:event_BtnAllKeyPressed

    private void BtnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSimpanActionPerformed
        if (TKd.getText().trim().equals("") || TNmUser.getText().trim().equals("")) {
            Valid.textKosong(TNmUser, "User");
        } else if (TPass.getText().trim().equals("")) {
            Valid.textKosong(TPass, "Password");
        } else {
            Simpan();
            dispose();
        }
    }//GEN-LAST:event_BtnSimpanActionPerformed

    private void BtnSimpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnSimpanKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnSimpanActionPerformed(null);
        } else {
            Valid.pindah(evt, BtnAll, BtnKeluar);
        }
    }//GEN-LAST:event_BtnSimpanKeyPressed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            BtnCariActionPerformed(null);
        } else {
            Valid.pindah(evt, BtnSimpan, TCari);
        }
    }//GEN-LAST:event_BtnKeluarKeyPressed

    private void ppBersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppBersihkanActionPerformed
        for (i = 0; i < tbUser.getRowCount(); i++) {
            tbUser.setValueAt(false, i, 0);
        }
    }//GEN-LAST:event_ppBersihkanActionPerformed

    private void ppSemuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppSemuaActionPerformed
        for (i = 0; i < tbUser.getRowCount(); i++) {
            tbUser.setValueAt(true, i, 0);
        }
    }//GEN-LAST:event_ppSemuaActionPerformed

    private void ppSemua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppSemua1ActionPerformed
        for (i = 0; i < tbUser.getRowCount(); i++) {
            tbUser.setValueAt(true, i, 2);
        }
    }//GEN-LAST:event_ppSemua1ActionPerformed

    private void ppBersihkan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppBersihkan1ActionPerformed
        for (i = 0; i < tbUser.getRowCount(); i++) {
            tbUser.setValueAt(false, i, 2);
        }
    }//GEN-LAST:event_ppBersihkan1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgUpdateUser dialog = new DlgUpdateUser(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnAll;
    private widget.Button BtnCari;
    private widget.Button BtnKeluar;
    private widget.Button BtnSimpan;
    private widget.Label LCount;
    private javax.swing.JPopupMenu Popup;
    private widget.ScrollPane Scroll;
    private widget.TextBox TCari;
    private widget.TextBox TKd;
    private widget.TextBox TNmUser;
    private widget.TextBox TPass;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel3;
    private widget.Label jLabel4;
    private widget.Label jLabel8;
    private widget.Label jLabel9;
    private widget.panelisi panelGlass5;
    private widget.panelisi panelGlass8;
    private javax.swing.JMenuItem ppBersihkan;
    private javax.swing.JMenuItem ppBersihkan1;
    private javax.swing.JMenuItem ppSemua;
    private javax.swing.JMenuItem ppSemua1;
    private widget.Table tbUser;
    // End of variables declaration//GEN-END:variables

    private void tampil(String user) {        
        try {
            jml = 0;
            for (i = 0; i < tbUser.getRowCount(); i++) {
                if (tbUser.getValueAt(i, 0).toString().equals("true")) {
                    jml++;
                }
            }

            pilih = null;
            pilih = new boolean[jml];
            akses = null;
            akses = new boolean[jml];
            menu = null;
            menu = new String[jml];

            jml = 0;
            for (i = 0; i < tbUser.getRowCount(); i++) {
                if (tbUser.getValueAt(i, 0).toString().equals("true")) {
                    pilih[jml] = true;
                    menu[jml] = tbUser.getValueAt(i, 1).toString();
                    akses[jml] = Boolean.parseBoolean(tbUser.getValueAt(i, 2).toString());
                    jml++;
                }
            }

            Valid.tabelKosong(tabMode);

            for (i = 0; i < jml; i++) {
                tabMode.addRow(new Object[]{
                    pilih[i], menu[i], akses[i]
                });
            }
            ps = koneksi.prepareStatement("select penyakit, obat_penyakit, dokter, jadwal_praktek, petugas, pasien, registrasi, "
                    + "tindakan_ralan, kamar_inap, tindakan_ranap, operasi, rujukan_keluar, rujukan_masuk, beri_obat, resep_pulang, "
                    + "pasien_meninggal, diet_pasien, kelahiran_bayi, periksa_lab, periksa_radiologi, kasir_ralan, "
                    + "deposit_pasien, piutang_pasien, peminjaman_berkas, barcode, presensi_harian, presensi_bulanan, "
                    + "pegawai_admin, pegawai_user, suplier, satuan_barang, konversi_satuan, jenis_barang, obat, "
                    + "stok_opname_obat, stok_obat_pasien, pengadaan_obat, pemesanan_obat, penjualan_obat, piutang_obat, "
                    + "retur_ke_suplier, retur_dari_pembeli, retur_obat_ranap, retur_piutang_pasien, keuntungan_penjualan, "
                    + "keuntungan_beri_obat, sirkulasi_obat, ipsrs_barang, ipsrs_pengadaan_barang, ipsrs_stok_keluar, "
                    + "ipsrs_rekap_pengadaan, ipsrs_rekap_stok_keluar, ipsrs_pengeluaran_harian, inventaris_jenis, "
                    + "inventaris_kategori, inventaris_merk, inventaris_ruang, inventaris_produsen, inventaris_koleksi,"
                    + "inventaris_inventaris, inventaris_sirkulasi, parkir_jenis, parkir_in, parkir_out, parkir_rekap_harian, "
                    + "parkir_rekap_bulanan, informasi_kamar, harian_tindakan_poli, obat_per_poli, obat_per_kamar, "
                    + "obat_per_dokter_ralan, obat_per_dokter_ranap, harian_dokter, bulanan_dokter, harian_paramedis,"
                    + "bulanan_paramedis, pembayaran_ralan, pembayaran_ranap, rekap_pembayaran_ralan, rekap_pembayaran_ranap,"
                    + "tagihan_masuk, tambahan_biaya, potongan_biaya, resep_obat, resume_pasien, penyakit_ralan, penyakit_ranap, "
                    + "kamar, tarif_ralan, tarif_ranap, tarif_lab, tarif_radiologi, tarif_operasi, akun_rekening, rekening_tahun, "
                    + "posting_jurnal, buku_besar, cashflow, keuangan, pengeluaran, setup_pjlab, setup_otolokasi, setup_jam_kamin, "
                    + "setup_embalase, tracer_login, display, set_harga_obat, set_penggunaan_tarif, set_oto_ralan, biaya_harian, "
                    + "biaya_masuk_sekali, set_no_rm, billing_ralan, billing_ranap, jm_ranap_dokter, igd, barcoderalan, barcoderanap, "
                    + "set_harga_obat_ralan,set_harga_obat_ranap,penyakit_pd3i,surveilans_pd3i,surveilans_ralan,diagnosa_pasien, "
                    + "surveilans_ranap,pny_takmenular_ranap,pny_takmenular_ralan,kunjungan_ralan,rl32,rl33,rl37,rl38,harian_tindakan_dokter,sms, "
                    + "sidikjari,jam_masuk,jadwal_pegawai,parkir_barcode,set_nota,dpjp_ranap,mutasi_barang,rl34,rl36,"
                    + "fee_visit_dokter,fee_bacaan_ekg,fee_rujukan_rontgen,fee_rujukan_ranap,fee_ralan,akun_bayar,bayar_pemesanan_obat,"
                    + "obat_per_dokter_peresep,ipsrs_jenis_barang,pemasukan_lain,pengaturan_rekening,closing_kasir,keterlambatan_presensi,"
                    + "set_harga_kamar,rekap_per_shift,bpjs_cek_nik,bpjs_cek_kartu,bpjs_cek_riwayat,obat_per_cara_bayar,kunjungan_ranap,"
                    + "bayar_piutang,payment_point,bpjs_cek_nomor_rujukan,icd9,darurat_stok,retensi_rm,temporary_presensi,jurnal_harian, "
                    + "sirkulasi_obat2,edit_registrasi,bpjs_referensi_diagnosa,bpjs_referensi_poli,industrifarmasi,harian_js,bulanan_js,"
                    + "harian_paket_bhp,bulanan_paket_bhp,piutang_pasien2,bpjs_referensi_faskes,bpjs_sep,pengambilan_utd,tarif_utd, "
                    + "pengambilan_utd2,utd_medis_rusak,pengambilan_penunjang_utd,pengambilan_penunjang_utd2,utd_penunjang_rusak,"
                    + "suplier_penunjang,utd_donor,bpjs_monitoring_klaim,utd_cekal_darah,utd_komponen_darah,utd_stok_darah, "
                    + "utd_pemisahan_darah,harian_kamar,rincian_piutang_pasien,keuntungan_beri_obat_nonpiutang,reklasifikasi_ralan, "
                    + "reklasifikasi_ranap,utd_penyerahan_darah,hutang_obat,riwayat_obat_alkes_bhp,sensus_harian_poli,rl4a,aplicare_referensi_kamar, "
                    + "aplicare_ketersediaan_kamar,inacbg_klaim_baru_otomatis,inacbg_klaim_baru_manual,inacbg_coder_nik,mutasi_berkas, "
                    + "akun_piutang,harian_kso,bulanan_kso,harian_menejemen,bulanan_menejemen,inhealth_cek_eligibilitas,inhealth_referensi_jenpel_ruang_rawat, "
                    + "inhealth_referensi_poli,inhealth_referensi_faskes,inhealth_sjp,piutang_ralan,piutang_ranap,detail_piutang_penjab, "
                    + "lama_pelayanan_ralan,catatan_pasien,rl4b,rl4asebab,rl4bsebab,data_HAIs,harian_HAIs,bulanan_HAIs,hitung_bor,perusahaan_pasien, "
                    + "resep_dokter,lama_pelayanan_apotek,hitung_alos,detail_tindakan,rujukan_poli_internal,rekap_poli_anak,grafik_kunjungan_poli, "
                    + "grafik_kunjungan_perdokter,grafik_kunjungan_perpekerjaan,grafik_kunjungan_perpendidikan,grafik_kunjungan_pertahun,"
                    + "berkas_digital_perawatan,penyakit_menular_ranap,penyakit_menular_ralan,grafik_kunjungan_perbulan,grafik_kunjungan_pertanggal, "
                    + "grafik_kunjungan_demografi,grafik_kunjungan_statusdaftartahun,grafik_kunjungan_statusdaftartahun2, "
                    + "grafik_kunjungan_statusdaftarbulan,grafik_kunjungan_statusdaftarbulan2,grafik_kunjungan_statusdaftartanggal,"
                    + "grafik_kunjungan_statusdaftartanggal2,grafik_kunjungan_statusbataltahun,grafik_kunjungan_statusbatalbulan,"
                    + "pcare_cek_penyakit,grafik_kunjungan_statusbataltanggal,kategori_barang,golongan_barang,pemberian_obat_pertanggal,"
                    + "penjualan_obat_pertanggal,skdp_bpjs,rujukan_keluar_vclaim_bpjs,booking_registrasi,"
                    + "bpjs_cek_riwayat_rujukan_pcare,bpjs_cek_riwayat_rujukan_rs,bpjs_cek_rujukan_kartu_rs,"
                    + "bpjs_cek_tanggal_rujukan,bpjs_cek_no_rujukan_rs,bpjs_cek_rujukan_kartu_pcare,"
                    + "bpjs_cek_referensi_kelas_rawat,bpjs_cek_referensi_prosedur,bpjs_cek_referensi_dpjp,"
                    + "bpjs_cek_referensi_dokter,bpjs_cek_referensi_spesialistik,bpjs_cek_referensi_ruang_rawat,"
                    + "bpjs_cek_referensi_cara_keluar,bpjs_cek_referensi_pasca_pulang,bpjs_cek_referensi_propinsi,bpjs_cek_referensi_kabupaten,"
                    + "bpjs_cek_referensi_kecamatan,permintaan_lab,permintaan_radiologi,selisih_tarif_bpjs,edit_data_kematian,"
                    + "bridging_jamkesda,masuk_pindah_pulang_inap,masuk_pindah_inap,jumlah_macam_diet,jumlah_porsi_diet,status_gizi,"
                    + "gizi_buruk,master_faskes,set_status_registrasi_ralan,telusur_kunjungan_pasien,sisrute_rujukan_keluar,sisrute_rujukan_masuk,"
                    + "sisrute_referensi_diagnosa,sisrute_referensi_alasanrujuk,sisrute_referensi_faskes,barang_cssd,status_pulang_inap,data_persalinan,"
                    + "data_ponek,registrasi_booking_dikasir,bahasa_pasien,suku_pasien,harian_hais_ranap,bulanan_hais_ranap,harian_hais_ralan,"
                    + "bulanan_hais_ralan,ringkasan_pulang_ranap,laporan_farmasi,master_masalah_keperawatan,penilaian_awal_keperawatan_ralan,master_triase_skala1,"
                    + "master_triase_skala2,master_triase_skala3,master_triase_skala4,master_triase_skala5,master_triase_macamkasus,master_triase_pemeriksaan,"
                    + "data_triase_igd,master_cara_bayar,status_kerja_dokter,pasien_corona,diagnosa_pasien_corona,perawatan_pasien_corona,inacbg_klaim_baru_manual2,"
                    + "indikator_ranap,sensus_inap,review_rm_igd,review_rm_ruangan_h1,review_rm_ruangan_pulang,review_rm_laporan,assesmen_gizi_harian,"
                    + "assesmen_gizi_ulang,tombol_nota_billing,tombol_simpan_hasil_radiologi,monev_asuhan_gizi,inacbg_klaim_raza,"
                    + "pengajuan_klaim_inacbg_raza,copy_pemeriksaan_dokter_kepetugas_ralan,jkn_belum_diproses_klaim,input_kode_icd,indikator_mutu_unit,"
                    + "kendali_Mutu_kendali_Biaya_INACBG,dashboard_eResep,bpjs_sep_internal,kemenkes_sitt,rencana_kontrol_jkn,spri_jkn,hapus_sep,"
                    + "penilaian_awal_medis_ralan_kebidanan,penilaian_awal_keperawatan_kebidanan,ikhtisar_perawatan_hiv,survey_kepuasan,kemenkes_kanker,"
                    + "aktivasi_bridging,operator_antrian,penilaian_awal_medis_ralan_tht,rekam_psikologis,penilaian_pasien_geriatri,penilaian_awal_medis_ralan_mata,"
                    + "surat_sakit,surat_keterangan_kir_mcu,asesmen_medik_dewasa_ranap,pemberian_obat,cppt,bridging_satu_sehat,kemoterapi,cek_piutang,"
                    + "asesmen_medik_anak_ranap,kegiatan_operasi from user where id_user=AES_ENCRYPT(?,'nur')");
            try {
                ps.setString(1, user);
                rs = ps.executeQuery();
                while (rs.next()) {
                    if ("[A]Assesment Gizi Harian".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Assesment Gizi Harian", rs.getBoolean("assesmen_gizi_harian")});
                    }

                    if ("[A]Assesment Gizi Ulang".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Assesment Gizi Ulang", rs.getBoolean("assesmen_gizi_ulang")});
                    }

                    if ("[A]Bahasa Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Bahasa Pasien", rs.getBoolean("bahasa_pasien")});
                    }

                    if ("[A]Beri Obat, Alkes & BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Beri Obat, Alkes & BHP", rs.getBoolean("beri_obat")});
                    }

                    if ("[A]Billing Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Billing Ralan", rs.getBoolean("billing_ralan")});
                    }

                    if ("[A]Billing Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Billing Ranap", rs.getBoolean("billing_ranap")});
                    }

                    if ("[A]Booking Registrasi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Booking Registrasi", rs.getBoolean("booking_registrasi")});
                    }

                    if ("[A]Bridging SEP Jamkesda".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Bridging SEP Jamkesda", rs.getBoolean("bridging_jamkesda")});
                    }

                    if ("[A]Copy Pemeriksaan Dokter Ke Perawat/Bidan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Copy Pemeriksaan Dokter Ke Perawat/Bidan", rs.getBoolean("copy_pemeriksaan_dokter_kepetugas_ralan")});
                    }

                    if ("[A]Diet Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Diet Pasien", rs.getBoolean("diet_pasien")});
                    }

                    if ("[A]DPJP Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]DPJP Ranap", rs.getBoolean("dpjp_ranap")});
                    }

                    if ("[A]Edit Data Kematian".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Edit Data Kematian", rs.getBoolean("edit_data_kematian")});
                    }

                    if ("[A]Edit Registrasi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Edit Registrasi", rs.getBoolean("edit_registrasi")});
                    }

                    if ("[A]IGD".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]IGD", rs.getBoolean("igd")});
                    }

                    if ("[A]Informasi Kamar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Informasi Kamar", rs.getBoolean("informasi_kamar")});
                    }

                    if ("[A]Jadwal Praktek".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Jadwal Praktek", rs.getBoolean("jadwal_praktek")});
                    }

                    if ("[A]Kamar Inap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Kamar Inap", rs.getBoolean("kamar_inap")});
                    }

                    if ("[A]Kasir Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Kasir Ralan", rs.getBoolean("kasir_ralan")});
                    }

                    if ("[A]Master Faskes/Perujuk".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Master Faskes/Perujuk", rs.getBoolean("master_faskes")});
                    }

                    if ("[A]Masuk & Pindah (Ranap)".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Masuk & Pindah (Ranap)", rs.getBoolean("masuk_pindah_inap")});
                    }

                    if ("[A]Masuk, Pindah, Pulang (Ranap)".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Masuk, Pindah, Pulang (Ranap)", rs.getBoolean("masuk_pindah_pulang_inap")});
                    }

                    if ("[A]Monitoring Evaluasi Asuhan Gizi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Monitoring Evaluasi Asuhan Gizi", rs.getBoolean("monev_asuhan_gizi")});
                    }

                    if ("[A]No.Resep".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]No.Resep", rs.getBoolean("resep_obat")});
                    }

                    if ("[A]Operasi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Operasi", rs.getBoolean("operasi")});
                    }

                    if ("[A]Periksa Lab".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Periksa Lab", rs.getBoolean("periksa_lab")});
                    }

                    if ("[A]Periksa Radiologi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Periksa Radiologi", rs.getBoolean("periksa_radiologi")});
                    }

                    if ("[A]Permintaan Periksa Lab.".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Permintaan Periksa Lab.", rs.getBoolean("permintaan_lab")});
                    }

                    if ("[A]Permintaan Periksa Radiologi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Permintaan Periksa Radiologi", rs.getBoolean("permintaan_radiologi")});
                    }

                    if ("[A]Registrasi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Registrasi", rs.getBoolean("registrasi")});
                    }

                    if ("[A]Registrasi Booking Dikasir".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Registrasi Booking Dikasir", rs.getBoolean("registrasi_booking_dikasir")});
                    }

                    if ("[A]Resep Pulang".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Resep Pulang", rs.getBoolean("resep_pulang")});
                    }

                    if ("[A]Rujukan Keluar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Rujukan Keluar", rs.getBoolean("rujukan_keluar")});
                    }

                    if ("[A]Rujukan Masuk".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Rujukan Masuk", rs.getBoolean("rujukan_masuk")});
                    }

                    if ("[A]Rujukan Poli Internal".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Rujukan Poli Internal", rs.getBoolean("rujukan_poli_internal")});
                    }

                    if ("[A]Selisih Tarif Naik Kls. Rawat BPJS".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Selisih Tarif Naik Kls. Rawat BPJS", rs.getBoolean("selisih_tarif_bpjs")});
                    }

                    if ("[A]Sensus Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Sensus Ranap", rs.getBoolean("sensus_inap")});
                    }

                    if ("[A]Set Status Reg. Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Set Status Reg. Ralan", rs.getBoolean("set_status_registrasi_ralan")});
                    }

                    if ("[A]Status Pulang Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Status Pulang Ranap", rs.getBoolean("status_pulang_inap")});
                    }

                    if ("[A]Suku Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Suku Pasien", rs.getBoolean("suku_pasien")});
                    }

                    if ("[A]Tindakan Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Tindakan Ralan", rs.getBoolean("tindakan_ralan")});
                    }

                    if ("[A]Tindakan Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[A]Tindakan Ranap", rs.getBoolean("tindakan_ranap")});
                    }
                    
                    if ("[B]Checklist Pra Operasi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[B]Checklist Pra Operasi", rs.getBoolean("kegiatan_operasi")});
                    }

                    if ("[B]Barcode Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[B]Barcode Ralan", rs.getBoolean("barcoderalan")});
                    }

                    if ("[B]Barcode Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[B]Barcode Ranap", rs.getBoolean("barcoderanap")});
                    }

                    if ("[C]Barcode Presensi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Barcode Presensi", rs.getBoolean("barcode")});
                    }

                    if ("[C]Dokter".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Dokter", rs.getBoolean("dokter")});
                    }

                    if ("[C]Jadwal Pegawai".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Jadwal Pegawai", rs.getBoolean("jadwal_pegawai")});
                    }

                    if ("[C]Jam Presensi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Jam Presensi", rs.getBoolean("jam_masuk")});
                    }

                    if ("[C]Pegawai Admin".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Pegawai Admin", rs.getBoolean("pegawai_admin")});
                    }

                    if ("[C]Pegawai User".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Pegawai User", rs.getBoolean("pegawai_user")});
                    }

                    if ("[C]Petugas".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Petugas", rs.getBoolean("petugas")});
                    }

                    if ("[C]Presensi Bulanan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Presensi Bulanan", rs.getBoolean("presensi_bulanan")});
                    }

                    if ("[C]Presensi Harian".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Presensi Harian", rs.getBoolean("presensi_harian")});
                    }

                    if ("[C]Sidik Jari".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Sidik Jari", rs.getBoolean("sidikjari")});
                    }

                    if ("[C]SMS Gateway".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]SMS Gateway", rs.getBoolean("sms")});
                    }

                    if ("[C]Status Kerja Dokter".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Status Kerja Dokter", rs.getBoolean("status_kerja_dokter")});
                    }

                    if ("[C]Temporary Presensi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[C]Temporary Presensi", rs.getBoolean("temporary_presensi")});
                    }
                    
                    if ("[D]Pemberian Obat Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Pemberian Obat Pasien", rs.getBoolean("pemberian_obat")});
                    }

                    if ("[D]Darurat Stok".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Darurat Stok", rs.getBoolean("darurat_stok")});
                    }

                    if ("[D]Golongan Obat/Alkes/BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Golongan Obat/Alkes/BHP", rs.getBoolean("golongan_barang")});
                    }

                    if ("[D]Industri Farmasi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Industri Farmasi", rs.getBoolean("industrifarmasi")});
                    }

                    if ("[D]Jenis Obat/Alkes/BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Jenis Obat/Alkes/BHP", rs.getBoolean("jenis_barang")});
                    }

                    if ("[D]Kategori Obat/Alkes/BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Kategori Obat/Alkes/BHP", rs.getBoolean("kategori_barang")});
                    }

                    if ("[D]Keuntungan Beri Obat, Alkes & BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Keuntungan Beri Obat, Alkes & BHP", rs.getBoolean("keuntungan_beri_obat")});
                    }

                    if ("[D]Keuntungan Beri Obat, Alkes & BHP 2".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Keuntungan Beri Obat, Alkes & BHP 2", rs.getBoolean("keuntungan_beri_obat_nonpiutang")});
                    }

                    if ("[D]Keuntungan Penjualan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Keuntungan Penjualan", rs.getBoolean("keuntungan_penjualan")});
                    }

                    if ("[D]Konversi Satuan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Konversi Satuan", rs.getBoolean("konversi_satuan")});
                    }

                    if ("[D]Laporan Farmasi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Laporan Farmasi", rs.getBoolean("laporan_farmasi")});
                    }

                    if ("[D]Mutasi Obat/Alkes/BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Mutasi Obat/Alkes/BHP", rs.getBoolean("mutasi_barang")});
                    }

                    if ("[D]Obat, Alkes & BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Obat, Alkes & BHP", rs.getBoolean("obat")});
                    }

                    if ("[D]Obat/Alkes/BHP Per Tanggal".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Obat/Alkes/BHP Per Tanggal", rs.getBoolean("pemberian_obat_pertanggal")});
                    }

                    if ("[D]Pemesanan Obat, Alkes & BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Pemesanan Obat, Alkes & BHP", rs.getBoolean("pemesanan_obat")});
                    }

                    if ("[D]Pengadaan Obat, Alkes & BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Pengadaan Obat, Alkes & BHP", rs.getBoolean("pengadaan_obat")});
                    }

                    if ("[D]Pengambilan BHP UTD".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Pengambilan BHP UTD", rs.getBoolean("pengambilan_utd")});
                    }

                    if ("[D]Penjualan Bebas Per Tanggal".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Penjualan Bebas Per Tanggal", rs.getBoolean("penjualan_obat_pertanggal")});
                    }

                    if ("[D]Penjualan Obat, Alkes & BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Penjualan Obat, Alkes & BHP", rs.getBoolean("penjualan_obat")});
                    }

                    if ("[D]Piutang Obat, Alkes & BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Piutang Obat, Alkes & BHP", rs.getBoolean("piutang_obat")});
                    }

                    if ("[D]Resep Dokter".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Resep Dokter", rs.getBoolean("resep_dokter")});
                    }

                    if ("[D]Retur Dari Pembeli".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Retur Dari Pembeli", rs.getBoolean("retur_dari_pembeli")});
                    }

                    if ("[D]Retur Ke Suplier".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Retur Ke Suplier", rs.getBoolean("retur_ke_suplier")});
                    }

                    if ("[D]Retur Obat, Alkes & BHP Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Retur Obat, Alkes & BHP Ranap", rs.getBoolean("retur_obat_ranap")});
                    }

                    if ("[D]Retur Piutang Pembeli".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Retur Piutang Pembeli", rs.getBoolean("retur_piutang_pasien")});
                    }

                    if ("[D]Riwayat Obat, Alkes & BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Riwayat Obat, Alkes & BHP", rs.getBoolean("riwayat_obat_alkes_bhp")});
                    }

                    if ("[D]Satuan Barang".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Satuan Barang", rs.getBoolean("satuan_barang")});
                    }

                    if ("[D]Sirkulasi Obat, Alkes & BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Sirkulasi Obat, Alkes & BHP", rs.getBoolean("sirkulasi_obat")});
                    }

                    if ("[D]Sirkulasi Obat, Alkes & BHP 2".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Sirkulasi Obat, Alkes & BHP 2", rs.getBoolean("sirkulasi_obat2")});
                    }

                    if ("[D]Stok Obat Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Stok Obat Pasien", rs.getBoolean("stok_obat_pasien")});
                    }

                    if ("[D]Stok Opname Apotek".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Stok Opname Apotek", rs.getBoolean("stok_opname_obat")});
                    }
                    
                    if ("[D]Dashboard e-Resep".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Dashboard e-Resep", rs.getBoolean("dashboard_eResep")});
                    }

                    if ("[D]Suplier Obat/Alkes/BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[D]Suplier Obat/Alkes/BHP", rs.getBoolean("suplier")});
                    }

                    if ("[E]Barang Non Medis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[E]Barang Non Medis", rs.getBoolean("ipsrs_barang")});
                    }

                    if ("[E]Biaya Pengadaan Non Medis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[E]Biaya Pengadaan Non Medis", rs.getBoolean("ipsrs_pengeluaran_harian")});
                    }

                    if ("[E]Jenis Non Medis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[E]Jenis Non Medis", rs.getBoolean("ipsrs_jenis_barang")});
                    }

                    if ("[E]Pengadaan Barang Nonmedis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[E]Pengadaan Barang Nonmedis", rs.getBoolean("ipsrs_pengadaan_barang")});
                    }

                    if ("[E]Pengambilan UTD".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[E]Pengambilan UTD", rs.getBoolean("pengambilan_penunjang_utd")});
                    }

                    if ("[E]Rekap Pengadaan Non Medis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[E]Rekap Pengadaan Non Medis", rs.getBoolean("ipsrs_rekap_pengadaan")});
                    }

                    if ("[E]Rekap Stok Keluar Non Medis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[E]Rekap Stok Keluar Non Medis", rs.getBoolean("ipsrs_rekap_stok_keluar")});
                    }

                    if ("[E]Stok Keluar Non Medis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[E]Stok Keluar Non Medis", rs.getBoolean("ipsrs_stok_keluar")});
                    }

                    if ("[E]Suplier Non Medis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[E]Suplier Non Medis", rs.getBoolean("suplier_penunjang")});
                    }

                    if ("[F]Barang CSSD".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[F]Barang CSSD", rs.getBoolean("barang_cssd")});
                    }

                    if ("[F]Inventaris".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[F]Inventaris", rs.getBoolean("inventaris_inventaris")});
                    }

                    if ("[F]Jenis Inventaris".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[F]Jenis Inventaris", rs.getBoolean("inventaris_jenis")});
                    }

                    if ("[F]Kategori Inventaris".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[F]Kategori Inventaris", rs.getBoolean("inventaris_kategori")});
                    }

                    if ("[F]Koleksi Inventaris".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[F]Koleksi Inventaris", rs.getBoolean("inventaris_koleksi")});
                    }

                    if ("[F]Merk Inventaris".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[F]Merk Inventaris", rs.getBoolean("inventaris_merk")});
                    }

                    if ("[F]Produsen Inventaris".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[F]Produsen Inventaris", rs.getBoolean("inventaris_produsen")});
                    }

                    if ("[F]Ruang Inventaris".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[F]Ruang Inventaris", rs.getBoolean("inventaris_ruang")});
                    }

                    if ("[F]Sirkulasi Inventaris".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[F]Sirkulasi Inventaris", rs.getBoolean("inventaris_sirkulasi")});
                    }

                    if ("[G]Barcode Parkir".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[G]Barcode Parkir", rs.getBoolean("parkir_barcode")});
                    }

                    if ("[G]Jenis Parkir".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[G]Jenis Parkir", rs.getBoolean("parkir_jenis")});
                    }

                    if ("[G]Parkir Keluar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[G]Parkir Keluar", rs.getBoolean("parkir_out")});
                    }

                    if ("[G]Parkir Masuk".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[G]Parkir Masuk", rs.getBoolean("parkir_in")});
                    }

                    if ("[G]Rekap Parkir Bulanan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[G]Rekap Parkir Bulanan", rs.getBoolean("parkir_rekap_bulanan")});
                    }

                    if ("[G]Rekap Parkir Harian".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[G]Rekap Parkir Harian", rs.getBoolean("parkir_rekap_harian")});
                    }

                    if ("[H]Bulanan BHP Medis/Paket Obat".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Bulanan BHP Medis/Paket Obat", rs.getBoolean("bulanan_paket_bhp")});
                    }

                    if ("[H]Bulanan Dokter".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Bulanan Dokter", rs.getBoolean("bulanan_dokter")});
                    }

                    if ("[H]Bulanan J.S.".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Bulanan J.S.", rs.getBoolean("bulanan_js")});
                    }

                    if ("[H]Bulanan KSO".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Bulanan KSO", rs.getBoolean("bulanan_kso")});
                    }

                    if ("[H]Bulanan Menejemen".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Bulanan Menejemen", rs.getBoolean("bulanan_menejemen")});
                    }

                    if ("[H]Bulanan Paramedis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Bulanan Paramedis", rs.getBoolean("bulanan_paramedis")});
                    }

                    if ("[H]Detail JM Dokter".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Detail JM Dokter", rs.getBoolean("jm_ranap_dokter")});
                    }

                    if ("[H]Detail Tindakan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Detail Tindakan", rs.getBoolean("detail_tindakan")});
                    }

                    if ("[H]Fee Bacaan EKG".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Fee Bacaan EKG", rs.getBoolean("fee_bacaan_ekg")});
                    }

                    if ("[H]Fee Periksa Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Fee Periksa Ralan", rs.getBoolean("fee_ralan")});
                    }

                    if ("[H]Fee Rujukan Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Fee Rujukan Ranap", rs.getBoolean("fee_rujukan_ranap")});
                    }

                    if ("[H]Fee Rujukan Rontgen".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Fee Rujukan Rontgen", rs.getBoolean("fee_rujukan_rontgen")});
                    }

                    if ("[H]Fee Visit Dokter".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Fee Visit Dokter", rs.getBoolean("fee_visit_dokter")});
                    }

                    if ("[H]Harian BHP Medis/Paket Obat".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Harian BHP Medis/Paket Obat", rs.getBoolean("harian_paket_bhp")});
                    }

                    if ("[H]Harian Dokter".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Harian Dokter", rs.getBoolean("harian_dokter")});
                    }

                    if ("[H]Harian Dokter Poli".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Harian Dokter Poli", rs.getBoolean("harian_tindakan_poli")});
                    }

                    if ("[H]Harian Dokter Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Harian Dokter Ralan", rs.getBoolean("harian_tindakan_dokter")});
                    }

                    if ("[H]Harian J.S.".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Harian J.S.", rs.getBoolean("harian_js")});
                    }

                    if ("[H]Harian Kamar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Harian Kamar", rs.getBoolean("harian_kamar")});
                    }

                    if ("[H]Harian KSO".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Harian KSO", rs.getBoolean("harian_kso")});
                    }

                    if ("[H]Harian Menejemen".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Harian Menejemen", rs.getBoolean("harian_menejemen")});
                    }

                    if ("[H]Harian Paramedis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Harian Paramedis", rs.getBoolean("harian_paramedis")});
                    }

                    if ("[H]Obat Per Cara Bayar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Obat Per Cara Bayar", rs.getBoolean("obat_per_cara_bayar")});
                    }

                    if ("[H]Obat Per Dokter Peresep".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Obat Per Dokter Peresep", rs.getBoolean("obat_per_dokter_peresep")});
                    }

                    if ("[H]Obat Per Dokter Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Obat Per Dokter Ralan", rs.getBoolean("obat_per_dokter_ralan")});
                    }

                    if ("[H]Obat Per Dokter Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Obat Per Dokter Ranap", rs.getBoolean("obat_per_dokter_ranap")});
                    }

                    if ("[H]Obat Per Kamar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Obat Per Kamar", rs.getBoolean("obat_per_kamar")});
                    }

                    if ("[H]Obat Per Poli".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Obat Per Poli", rs.getBoolean("obat_per_poli")});
                    }

                    if ("[H]Payment Point".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Payment Point", rs.getBoolean("payment_point")});
                    }

                    if ("[H]Pembayaran Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Pembayaran Ralan", rs.getBoolean("pembayaran_ralan")});
                    }

                    if ("[H]Pembayaran Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Pembayaran Ranap", rs.getBoolean("pembayaran_ranap")});
                    }

                    if ("[H]Piutang Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Piutang Ralan", rs.getBoolean("piutang_ralan")});
                    }

                    if ("[H]Piutang Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Piutang Ranap", rs.getBoolean("piutang_ranap")});
                    }

                    if ("[H]Potongan Biaya".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Potongan Biaya", rs.getBoolean("potongan_biaya")});
                    }

                    if ("[H]Rekap Pembayaran Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Rekap Pembayaran Ralan", rs.getBoolean("rekap_pembayaran_ralan")});
                    }

                    if ("[H]Rekap Pembayaran Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Rekap Pembayaran Ranap", rs.getBoolean("rekap_pembayaran_ranap")});
                    }

                    if ("[H]Rekap Per Shift".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Rekap Per Shift", rs.getBoolean("rekap_per_shift")});
                    }

                    if ("[H]Rekap Poli Anak".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Rekap Poli Anak", rs.getBoolean("rekap_poli_anak")});
                    }

                    if ("[H]Tagihan Masuk".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Tagihan Masuk", rs.getBoolean("tagihan_masuk")});
                    }

                    if ("[H]Tambahan Biaya".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[H]Tambahan Biaya", rs.getBoolean("tambahan_biaya")});
                    }
                    
                    if ("[I]Rekam Psikologis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Rekam Psikologis", rs.getBoolean("rekam_psikologis")});
                    }

                    if ("[I]Bulanan HAIs".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Bulanan HAIs", rs.getBoolean("bulanan_HAIs")});
                    }

                    if ("[I]Bulanan HAIs Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Bulanan HAIs Ralan", rs.getBoolean("bulanan_hais_ralan")});
                    }

                    if ("[I]Bulanan HAIs Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Bulanan HAIs Ranap", rs.getBoolean("bulanan_hais_ranap")});
                    }

                    if ("[I]Frekuensi Penyakit Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Frekuensi Penyakit Ralan", rs.getBoolean("penyakit_ralan")});
                    }

                    if ("[I]Frekuensi Penyakit Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Frekuensi Penyakit Ranap", rs.getBoolean("penyakit_ranap")});
                    }

                    if ("[I]Gizi Buruk".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Gizi Buruk", rs.getBoolean("gizi_buruk")});
                    }

                    if ("[I]Harian HAIs".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Harian HAIs", rs.getBoolean("harian_HAIs")});
                    }

                    if ("[I]Harian HAIs Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Harian HAIs Ralan", rs.getBoolean("harian_hais_ralan")});
                    }

                    if ("[I]Harian HAIs Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Harian HAIs Ranap", rs.getBoolean("harian_hais_ranap")});
                    }

                    if ("[I]Hitung ALOS".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Hitung ALOS", rs.getBoolean("hitung_alos")});
                    }

                    if ("[I]Hitung BOR".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Hitung BOR", rs.getBoolean("hitung_bor")});
                    }

                    if ("[I]ICD 10".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]ICD 10", rs.getBoolean("penyakit")});
                    }

                    if ("[I]ICD 9".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]ICD 9", rs.getBoolean("icd9")});
                    }

                    if ("[I]Indikator Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Indikator Ranap", rs.getBoolean("indikator_ranap")});
                    }

                    if ("[I]Jumlah Macam Diet".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Jumlah Macam Diet", rs.getBoolean("jumlah_macam_diet")});
                    }

                    if ("[I]Jumlah Porsi Diet".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Jumlah Porsi Diet", rs.getBoolean("jumlah_porsi_diet")});
                    }

                    if ("[I]Kunjungan Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Kunjungan Ralan", rs.getBoolean("kunjungan_ralan")});
                    }

                    if ("[I]Kunjungan Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Kunjungan Ranap", rs.getBoolean("kunjungan_ranap")});
                    }

                    if ("[I]Lama Pelayanan Apotek".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Lama Pelayanan Apotek", rs.getBoolean("lama_pelayanan_apotek")});
                    }

                    if ("[I]Lama Pelayanan Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Lama Pelayanan Ralan", rs.getBoolean("lama_pelayanan_ralan")});
                    }

                    if ("[I]Obat Penyakit".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Obat Penyakit", rs.getBoolean("obat_penyakit")});
                    }

                    if ("[I]Penyakit AFP & PD3I".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Penyakit AFP & PD3I", rs.getBoolean("penyakit_pd3i")});
                    }

                    if ("[I]Pny Menular Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Pny Menular Ralan", rs.getBoolean("penyakit_menular_ralan")});
                    }

                    if ("[I]Pny Menular Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Pny Menular Ranap", rs.getBoolean("penyakit_menular_ranap")});
                    }

                    if ("[I]Pny.Tdk Menular Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Pny.Tdk Menular Ralan", rs.getBoolean("pny_takmenular_ralan")});
                    }

                    if ("[I]Pny.Tdk Menular Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Pny.Tdk Menular Ranap", rs.getBoolean("pny_takmenular_ranap")});
                    }

                    if ("[I]RL 3.2 Rawat Darurat".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]RL 3.2 Rawat Darurat", rs.getBoolean("rl32")});
                    }

                    if ("[I]RL 3.3 Gigi dan Mulut".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]RL 3.3 Gigi dan Mulut", rs.getBoolean("rl33")});
                    }

                    if ("[I]RL 3.4 Kebidanan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]RL 3.4 Kebidanan", rs.getBoolean("rl34")});
                    }

                    if ("[I]RL 3.6 Pembedahan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]RL 3.6 Pembedahan", rs.getBoolean("rl36")});
                    }

                    if ("[I]RL 3.7 Radiologi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]RL 3.7 Radiologi", rs.getBoolean("rl37")});
                    }

                    if ("[I]RL 3.8 Laboratorium".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]RL 3.8 Laboratorium", rs.getBoolean("rl38")});
                    }

                    if ("[I]RL 4A Morbiditas Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]RL 4A Morbiditas Ralan", rs.getBoolean("rl4a")});
                    }

                    if ("[I]RL 4A Sebab Morbiditas Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]RL 4A Sebab Morbiditas Ranap", rs.getBoolean("rl4asebab")});
                    }

                    if ("[I]RL 4B Morbiditas Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]RL 4B Morbiditas Ralan", rs.getBoolean("rl4b")});
                    }

                    if ("[I]RL 4B Sebab Morbiditas Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]RL 4B Sebab Morbiditas Ralan", rs.getBoolean("rl4bsebab")});
                    }

                    if ("[I]Sensus Harian Poli".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Sensus Harian Poli", rs.getBoolean("sensus_harian_poli")});
                    }

                    if ("[I]Status Gizi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Status Gizi", rs.getBoolean("status_gizi")});
                    }

                    if ("[I]Surveilans AFP & PD3I".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Surveilans AFP & PD3I", rs.getBoolean("surveilans_pd3i")});
                    }

                    if ("[I]Surveilans Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Surveilans Ralan", rs.getBoolean("surveilans_ralan")});
                    }

                    if ("[I]Surveilans Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Surveilans Ranap", rs.getBoolean("surveilans_ranap")});
                    }

                    if ("[I]Telusur Kunjungan Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[I]Telusur Kunjungan Pasien", rs.getBoolean("telusur_kunjungan_pasien")});
                    }
                    
                    if ("[J]Cek Piutang".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Cek Piutang", rs.getBoolean("cek_piutang")});
                    }

                    if ("[J]Akun Bayar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Akun Bayar", rs.getBoolean("akun_bayar")});
                    }

                    if ("[J]Akun Piutang".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Akun Piutang", rs.getBoolean("akun_piutang")});
                    }

                    if ("[J]Akun Rekening".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Akun Rekening", rs.getBoolean("akun_rekening")});
                    }

                    if ("[J]Bayar Pesan Obat".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Bayar Pesan Obat", rs.getBoolean("bayar_pemesanan_obat")});
                    }

                    if ("[J]Bayar Piutang".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Bayar Piutang", rs.getBoolean("bayar_piutang")});
                    }

                    if ("[J]Buku Besar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Buku Besar", rs.getBoolean("buku_besar")});
                    }

                    if ("[J]Cash Flow".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Cash Flow", rs.getBoolean("cashflow")});
                    }

                    if ("[J]Deposit Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Deposit Pasien", rs.getBoolean("deposit_pasien")});
                    }

                    if ("[J]Hutang Obat & BHP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Hutang Obat & BHP", rs.getBoolean("hutang_obat")});
                    }

                    if ("[J]Jurnal Harian".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Jurnal Harian", rs.getBoolean("jurnal_harian")});
                    }

                    if ("[J]Kamar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Kamar", rs.getBoolean("kamar")});
                    }

                    if ("[J]Keuangan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Keuangan", rs.getBoolean("keuangan")});
                    }

                    if ("[J]Pemasukkan Lain-Lain".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Pemasukkan Lain-Lain", rs.getBoolean("pemasukan_lain")});
                    }

                    if ("[J]Pengaturan Rekening".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Pengaturan Rekening", rs.getBoolean("pengaturan_rekening")});
                    }

                    if ("[J]Pengeluaran Harian".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Pengeluaran Harian", rs.getBoolean("pengeluaran")});
                    }

                    if ("[J]Piutang Belum Lunas".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Piutang Belum Lunas", rs.getBoolean("piutang_pasien2")});
                    }

                    if ("[J]Piutang Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Piutang Pasien", rs.getBoolean("piutang_pasien")});
                    }

                    if ("[J]Piutang Per Cara Bayar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Piutang Per Cara Bayar", rs.getBoolean("detail_piutang_penjab")});
                    }

                    if ("[J]Posting Jurnal".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Posting Jurnal", rs.getBoolean("posting_jurnal")});
                    }

                    if ("[J]Rekening Tahun".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Rekening Tahun", rs.getBoolean("rekening_tahun")});
                    }

                    if ("[J]Rincian Piutang Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Rincian Piutang Pasien", rs.getBoolean("rincian_piutang_pasien")});
                    }

                    if ("[J]Tarif Lab".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Tarif Lab", rs.getBoolean("tarif_lab")});
                    }

                    if ("[J]Tarif Operasi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Tarif Operasi", rs.getBoolean("tarif_operasi")});
                    }

                    if ("[J]Tarif Radiologi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Tarif Radiologi", rs.getBoolean("tarif_radiologi")});
                    }

                    if ("[J]Tarif Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Tarif Ralan", rs.getBoolean("tarif_ralan")});
                    }

                    if ("[J]Tarif Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Tarif Ranap", rs.getBoolean("tarif_ranap")});
                    }

                    if ("[J]Tarif UTD".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[J]Tarif UTD", rs.getBoolean("tarif_utd")});
                    }
                    
                    if ("[K]Bridging SatuSehat".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Bridging SatuSehat", rs.getBoolean("bridging_satu_sehat")});
                    }
                    
                    if ("[K]Kemenkes Kanker".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Kemenkes Kanker", rs.getBoolean("kemenkes_kanker")});
                    }
                    
                    if ("[K]Hapus SEP".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Hapus SEP", rs.getBoolean("hapus_sep")});
                    }
                    
                    if ("[K]Kemenkes SITB".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Kemenkes SITB", rs.getBoolean("kemenkes_sitt")});
                    }

                    if ("[K]Bridging Diagnosa Pasien Corona".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Bridging Diagnosa Pasien Corona", rs.getBoolean("diagnosa_pasien_corona")});
                    }

                    if ("[K]Bridging Eklaim INACBG RAZA".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Bridging Eklaim INACBG RAZA", rs.getBoolean("inacbg_klaim_raza")});
                    }

                    if ("[K]Bridging Pasien Corona".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Bridging Pasien Corona", rs.getBoolean("pasien_corona")});
                    }

                    if ("[K]Cek Eligibilitas Inhealth".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Eligibilitas Inhealth", rs.getBoolean("inhealth_cek_eligibilitas")});
                    }

                    if ("[K]Cek NIK".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek NIK", rs.getBoolean("bpjs_cek_nik")});
                    }

                    if ("[K]Cek No.Kartu".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek No.Kartu", rs.getBoolean("bpjs_cek_kartu")});
                    }

                    if ("[K]Cek No.Rujukan Pcare".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek No.Rujukan Pcare", rs.getBoolean("bpjs_cek_nomor_rujukan")});
                    }

                    if ("[K]Cek No.Rujukan RS VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek No.Rujukan RS VClaim", rs.getBoolean("bpjs_cek_no_rujukan_rs")});
                    }

                    if ("[K]Cek Referensi Cara Keluar VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi Cara Keluar VClaim", rs.getBoolean("bpjs_cek_referensi_cara_keluar")});
                    }

                    if ("[K]Cek Referensi Dokter BPJS".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi Dokter BPJS", rs.getBoolean("bpjs_cek_referensi_dokter")});
                    }

                    if ("[K]Cek Referensi DPJP VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi DPJP VClaim", rs.getBoolean("bpjs_cek_referensi_dpjp")});
                    }

                    if ("[K]Cek Referensi Kabupaten VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi Kabupaten VClaim", rs.getBoolean("bpjs_cek_referensi_kabupaten")});
                    }

                    if ("[K]Cek Referensi Kecamatan VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi Kecamatan VClaim", rs.getBoolean("bpjs_cek_referensi_kecamatan")});
                    }

                    if ("[K]Cek Referensi Kelas Rawat VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi Kelas Rawat VClaim", rs.getBoolean("bpjs_cek_referensi_kelas_rawat")});
                    }

                    if ("[K]Cek Referensi Pasca Pulang VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi Pasca Pulang VClaim", rs.getBoolean("bpjs_cek_referensi_pasca_pulang")});
                    }

                    if ("[K]Cek Referensi Prosedur VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi Prosedur VClaim", rs.getBoolean("bpjs_cek_referensi_prosedur")});
                    }

                    if ("[K]Cek Referensi Provinsi VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi Provinsi VClaim", rs.getBoolean("bpjs_cek_referensi_propinsi")});
                    }

                    if ("[K]Cek Referensi Ruang Rawat VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi Ruang Rawat VClaim", rs.getBoolean("bpjs_cek_referensi_ruang_rawat")});
                    }

                    if ("[K]Cek Referensi Spesialistik VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Referensi Spesialistik VClaim", rs.getBoolean("bpjs_cek_referensi_spesialistik")});
                    }

                    if ("[K]Cek Rujukan Kartu Pcare VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Rujukan Kartu Pcare VClaim", rs.getBoolean("bpjs_cek_rujukan_kartu_pcare")});
                    }

                    if ("[K]Cek Rujukan RS BPJS Sesuai No.Kartu".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Rujukan RS BPJS Sesuai No.Kartu", rs.getBoolean("bpjs_cek_rujukan_kartu_rs")});
                    }

                    if ("[K]Cek Tgl. Rujukan VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek Tgl. Rujukan VClaim", rs.getBoolean("bpjs_cek_tanggal_rujukan")});
                    }

                    if ("[K]Coder NIK INACBG".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Coder NIK INACBG", rs.getBoolean("inacbg_coder_nik")});
                    }

                    if ("[K]Data Bridging SEP BPJS".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Data Bridging SEP BPJS", rs.getBoolean("bpjs_sep")});
                    }

                    if ("[K]Data Bridging SJP Inhealth".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Data Bridging SJP Inhealth", rs.getBoolean("inhealth_sjp")});
                    }

                    if ("[K]INACBG JKN Belum Diklaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]INACBG JKN Belum Diklaim", rs.getBoolean("jkn_belum_diproses_klaim")});
                    }

                    if ("[K]Kendali Mutu Kendali Biaya INACBG".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Kendali Mutu Kendali Biaya INACBG", rs.getBoolean("kendali_Mutu_kendali_Biaya_INACBG")});
                    }

                    if ("[K]Ketersediaan Kamar Aplicare".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Ketersediaan Kamar Aplicare", rs.getBoolean("aplicare_ketersediaan_kamar")});
                    }

                    if ("[K]Klaim Baru Manual INACBG".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Klaim Baru Manual INACBG", rs.getBoolean("inacbg_klaim_baru_manual")});
                    }

                    if ("[K]Klaim Baru Manual INACBG 2".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Klaim Baru Manual INACBG 2", rs.getBoolean("inacbg_klaim_baru_manual2")});
                    }

                    if ("[K]Klaim Baru Otomatis INACBG".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Klaim Baru Otomatis INACBG", rs.getBoolean("inacbg_klaim_baru_otomatis")});
                    }

                    if ("[K]Monitoring Verifikasi Klaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Monitoring Verifikasi Klaim", rs.getBoolean("bpjs_monitoring_klaim")});
                    }

                    if ("[K]Pengajuan Klaim INACBG RAZA".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Pengajuan Klaim INACBG RAZA", rs.getBoolean("pengajuan_klaim_inacbg_raza")});
                    }

                    if ("[K]Perawatan Pasien Corona".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Perawatan Pasien Corona", rs.getBoolean("perawatan_pasien_corona")});
                    }

                    if ("[K]Referensi Diagnosa BPJS".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Referensi Diagnosa BPJS", rs.getBoolean("bpjs_referensi_diagnosa")});
                    }

                    if ("[K]Referensi Diagnosa Pcare".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Referensi Diagnosa Pcare", rs.getBoolean("pcare_cek_penyakit")});
                    }

                    if ("[K]Referensi Faskes BPJS".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Referensi Faskes BPJS", rs.getBoolean("bpjs_referensi_faskes")});
                    }

                    if ("[K]Referensi Faskes Inhealth".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Referensi Faskes Inhealth", rs.getBoolean("inhealth_referensi_faskes")});
                    }

                    if ("[K]Referensi Kamar Aplicare".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Referensi Kamar Aplicare", rs.getBoolean("aplicare_referensi_kamar")});
                    }

                    if ("[K]Referensi Poli BPJS".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Referensi Poli BPJS", rs.getBoolean("bpjs_referensi_poli")});
                    }

                    if ("[K]Referensi Poli Inhealth".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Referensi Poli Inhealth", rs.getBoolean("inhealth_referensi_poli")});
                    }

                    if ("[K]Referensi Ruang Rawat Inhealth".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Referensi Ruang Rawat Inhealth", rs.getBoolean("inhealth_referensi_jenpel_ruang_rawat")});
                    }

                    if ("[K]Reklasifikasi Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Reklasifikasi Ralan", rs.getBoolean("reklasifikasi_ralan")});
                    }

                    if ("[K]Reklasifikasi Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Reklasifikasi Ranap", rs.getBoolean("reklasifikasi_ranap")});
                    }

                    if ("[K]Riwayat Peserta".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Riwayat Peserta", rs.getBoolean("bpjs_cek_riwayat")});
                    }

                    if ("[K]Riwayat Rujukan Pcare VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Riwayat Rujukan Pcare VClaim", rs.getBoolean("bpjs_cek_riwayat_rujukan_pcare")});
                    }

                    if ("[K]Riwayat Rujukan RS VClaim".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Riwayat Rujukan RS VClaim", rs.getBoolean("bpjs_cek_riwayat_rujukan_rs")});
                    }

                    if ("[K]Rujukan Keluar VClaim BPJS".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Rujukan Keluar VClaim BPJS", rs.getBoolean("rujukan_keluar_vclaim_bpjs")});
                    }

                    if ("[K]Sisrute Referensi Alasan Rujuk".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Sisrute Referensi Alasan Rujuk", rs.getBoolean("sisrute_referensi_alasanrujuk")});
                    }

                    if ("[K]Sisrute Referensi Diagnosa".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Sisrute Referensi Diagnosa", rs.getBoolean("sisrute_referensi_diagnosa")});
                    }

                    if ("[K]Sisrute Referensi Faskes".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Sisrute Referensi Faskes", rs.getBoolean("sisrute_referensi_faskes")});
                    }

                    if ("[K]Sisrute Rujukan Keluar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Sisrute Rujukan Keluar", rs.getBoolean("sisrute_rujukan_keluar")});
                    }

                    if ("[K]Sisrute Rujukan Masuk".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Sisrute Rujukan Masuk", rs.getBoolean("sisrute_rujukan_masuk")});
                    }

                    if ("[K]SKDP BPJS".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]SKDP BPJS", rs.getBoolean("skdp_bpjs")});
                    }
                    
                    if ("[K]Cek SEP Internal BPJS".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Cek SEP Internal BPJS", rs.getBoolean("bpjs_sep_internal")});
                    }
                    
                    if ("[K]Rencana Kontrol JKN".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]Rencana Kontrol JKN", rs.getBoolean("rencana_kontrol_jkn")});
                    }
                    
                    if ("[K]SPRI JKN".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[K]SPRI JKN", rs.getBoolean("spri_jkn")});
                    }
                    
                    if ("[L]Asesmen Medik Anak Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Asesmen Medik Anak Ranap", rs.getBoolean("asesmen_medik_anak_ranap")});
                    }
                    
                    if ("[L]Kemoterapi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Kemoterapi", rs.getBoolean("kemoterapi")});
                    }
                    
                    if ("[L]CPPT".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]CPPT", rs.getBoolean("cppt")});
                    }
                    
                    if ("[L]Asesmen Medik Dewasa Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Asesmen Medik Dewasa Ranap", rs.getBoolean("asesmen_medik_dewasa_ranap")});
                    }
                    
                    if ("[L]Surat Keterangan KIR/MCU".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Surat Keterangan KIR/MCU", rs.getBoolean("surat_keterangan_kir_mcu")});
                    }
                    
                    if ("[L]Surat Sakit".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Surat Sakit", rs.getBoolean("surat_sakit")});
                    }
                    
                    if ("[L]Penilaian Awal Medis Ralan Mata".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Penilaian Awal Medis Ralan Mata", rs.getBoolean("penilaian_awal_medis_ralan_mata")});
                    }
                    
                    if ("[L]Penilaian Awal Medis & Tambahan Pasien Geriatri".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Penilaian Awal Medis & Tambahan Pasien Geriatri", rs.getBoolean("penilaian_pasien_geriatri")});
                    }
                    
                    if ("[L]Penilaian Awal Medis Ralan THT".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Penilaian Awal Medis Ralan THT", rs.getBoolean("penilaian_awal_medis_ralan_tht")});
                    }
                    
                    if ("[L]Survey Kepuasan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Survey Kepuasan", rs.getBoolean("survey_kepuasan")});
                    }
                    
                    if ("[L]Ikhtisar Perawatan HIV & Terapi ART".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Ikhtisar Perawatan HIV & Terapi ART", rs.getBoolean("ikhtisar_perawatan_hiv")});
                    }
                    
                    if ("[L]Penilaian Awal Keperawatan Kebidanan Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Penilaian Awal Keperawatan Kebidanan Ralan", rs.getBoolean("penilaian_awal_keperawatan_kebidanan")});
                    }
                    
                    if ("[L]Penilaian Awal Medis Kebidanan & Kandungan Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Penilaian Awal Medis Kebidanan & Kandungan Ralan", rs.getBoolean("penilaian_awal_medis_ralan_kebidanan")});
                    }

                    if ("[L]Berkas Digital Perawatan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Berkas Digital Perawatan", rs.getBoolean("berkas_digital_perawatan")});
                    }

                    if ("[L]Catatan Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Catatan Pasien", rs.getBoolean("catatan_pasien")});
                    }

                    if ("[L]Data HAIs".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Data HAIs", rs.getBoolean("data_HAIs")});
                    }

                    if ("[L]Data Persalinan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Data Persalinan", rs.getBoolean("data_persalinan")});
                    }

                    if ("[L]Data Ponek".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Data Ponek", rs.getBoolean("data_ponek")});
                    }

                    if ("[L]Diagnosa Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Diagnosa Pasien", rs.getBoolean("diagnosa_pasien")});
                    }

                    if ("[L]Indikator Mutu Unit".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Indikator Mutu Unit", rs.getBoolean("indikator_mutu_unit")});
                    }

                    if ("[L]Input Kode ICD".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Input Kode ICD", rs.getBoolean("input_kode_icd")});
                    }

                    if ("[L]Instansi/Perusahaan Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Instansi/Perusahaan Pasien", rs.getBoolean("perusahaan_pasien")});
                    }

                    if ("[L]Kelahiran Bayin".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Kelahiran Bayi", rs.getBoolean("kelahiran_bayi")});
                    }

                    if ("[L]Master Cara Bayar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Master Cara Bayar", rs.getBoolean("master_cara_bayar")});
                    }

                    if ("[L]Master Masalah Keperawatan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Master Masalah Keperawatan", rs.getBoolean("master_masalah_keperawatan")});
                    }

                    if ("[L]Master Triase Macam Kasus".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Master Triase Macam Kasus", rs.getBoolean("master_triase_macamkasus")});
                    }

                    if ("[L]Master Triase Pemeriksaan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Master Triase Pemeriksaan", rs.getBoolean("master_triase_pemeriksaan")});
                    }

                    if ("[L]Master Triase Skala 1".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Master Triase Skala 1", rs.getBoolean("master_triase_skala1")});
                    }

                    if ("[L]Master Triase Skala 2".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Master Triase Skala 2", rs.getBoolean("master_triase_skala2")});
                    }

                    if ("[L]Master Triase Skala 3".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Master Triase Skala 3", rs.getBoolean("master_triase_skala3")});
                    }

                    if ("[L]Master Triase Skala 4".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Master Triase Skala 4", rs.getBoolean("master_triase_skala4")});
                    }

                    if ("[L]Master Triase Skala 5".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Master Triase Skala 5", rs.getBoolean("master_triase_skala5")});
                    }

                    if ("[L]Mutasi Berkas RM".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Mutasi Berkas RM", rs.getBoolean("mutasi_berkas")});
                    }

                    if ("[L]Pasien".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Pasien", rs.getBoolean("pasien")});
                    }

                    if ("[L]Pasien Meninggal".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Pasien Meninggal", rs.getBoolean("pasien_meninggal")});
                    }

                    if ("[L]Peminjaman Berkas RM".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Peminjaman Berkas RM", rs.getBoolean("peminjaman_berkas")});
                    }

                    if ("[L]Penilaian Awal Keperawatan Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Penilaian Awal Keperawatan Ralan", rs.getBoolean("penilaian_awal_keperawatan_ralan")});
                    }

                    if ("[L]Rekam Medis Triase IGD".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Rekam Medis Triase IGD", rs.getBoolean("data_triase_igd")});
                    }

                    if ("[L]Retensi Data R.M.".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Retensi Data R.M.", rs.getBoolean("retensi_rm")});
                    }

                    if ("[L]Review RM IGD".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Review RM IGD", rs.getBoolean("review_rm_igd")});
                    }

                    if ("[L]Review RM Laporan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Review RM Laporan", rs.getBoolean("review_rm_laporan")});
                    }

                    if ("[L]Review RM Ranap H+1".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Review RM Ranap H+1", rs.getBoolean("review_rm_ruangan_h1")});
                    }

                    if ("[L]Review RM Ranap Pulang".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Review RM Ranap Pulang", rs.getBoolean("review_rm_ruangan_pulang")});
                    }

                    if ("[L]Ringkasan Pulang Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Ringkasan Pulang Ranap", rs.getBoolean("ringkasan_pulang_ranap")});
                    }

                    if ("[L]Riwayat Perawatan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[L]Riwayat Perawatan", rs.getBoolean("resume_pasien")});
                    }

                    if ("[M]BHP Medis Rusak".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[M]BHP Medis Rusak", rs.getBoolean("utd_medis_rusak")});
                    }

                    if ("[M]BHP Non Medis Rusak".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[M]BHP Non Medis Rusak", rs.getBoolean("utd_penunjang_rusak")});
                    }

                    if ("[M]Cekal Darah".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[M]Cekal Darah", rs.getBoolean("utd_cekal_darah")});
                    }

                    if ("[M]Donor Darah".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[M]Donor Darah", rs.getBoolean("utd_donor")});
                    }

                    if ("[M]Komponen Darah".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[M]Komponen Darah", rs.getBoolean("utd_komponen_darah")});
                    }

                    if ("[M]Pemisahan Darah".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[M]Pemisahan Darah", rs.getBoolean("utd_pemisahan_darah")});
                    }

                    if ("[M]Pengambilan BHP Medis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[M]Pengambilan BHP Medis", rs.getBoolean("pengambilan_utd2")});
                    }

                    if ("[M]Pengambilan BHP Non Medis".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[M]Pengambilan BHP Non Medis", rs.getBoolean("pengambilan_penunjang_utd2")});
                    }

                    if ("[M]Penyerahan Darah".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[M]Penyerahan Darah", rs.getBoolean("utd_penyerahan_darah")});
                    }

                    if ("[M]Stok Darah".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[M]Stok Darah", rs.getBoolean("utd_stok_darah")});
                    }

                    if ("[N]Batal Periksa Per Bulan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Batal Periksa Per Bulan", rs.getBoolean("grafik_kunjungan_statusbatalbulan")});
                    }

                    if ("[N]Batal Periksa Per Tahun".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Batal Periksa Per Tahun", rs.getBoolean("grafik_kunjungan_statusbataltahun")});
                    }

                    if ("[N]Batal Periksa Per Tanggal".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Batal Periksa Per Tanggal", rs.getBoolean("grafik_kunjungan_statusbataltanggal")});
                    }

                    if ("[N]Demografi Registrasi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Demografi Registrasi", rs.getBoolean("grafik_kunjungan_demografi")});
                    }

                    if ("[N]Kunjungan Reg Per Bulan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Kunjungan Reg Per Bulan", rs.getBoolean("grafik_kunjungan_perbulan")});
                    }

                    if ("[N]Kunjungan Reg Per Dokter".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Kunjungan Reg Per Dokter", rs.getBoolean("grafik_kunjungan_perdokter")});
                    }

                    if ("[N]Kunjungan Reg Per Pekerjaan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Kunjungan Reg Per Pekerjaan", rs.getBoolean("grafik_kunjungan_perpekerjaan")});
                    }

                    if ("[N]Kunjungan Reg Per Pendidikan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Kunjungan Reg Per Pendidikan", rs.getBoolean("grafik_kunjungan_perpendidikan")});
                    }

                    if ("[N]Kunjungan Reg Per Poli".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Kunjungan Reg Per Poli", rs.getBoolean("grafik_kunjungan_poli"),});
                    }

                    if ("[N]Kunjungan Reg Per Tahun".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Kunjungan Reg Per Tahun", rs.getBoolean("grafik_kunjungan_pertahun")});
                    }

                    if ("[N]Kunjungan Reg Per Tanggal".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Kunjungan Reg Per Tanggal", rs.getBoolean("grafik_kunjungan_pertanggal")});
                    }

                    if ("[N]Reg Baru Per Bulan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Reg Baru Per Bulan", rs.getBoolean("grafik_kunjungan_statusdaftarbulan2")});
                    }

                    if ("[N]Reg Baru Per Tahun".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Reg Baru Per Tahun", rs.getBoolean("grafik_kunjungan_statusdaftartahun2")});
                    }

                    if ("[N]Reg Baru Per Tanggal".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Reg Baru Per Tanggal", rs.getBoolean("grafik_kunjungan_statusdaftartanggal2")});
                    }

                    if ("[N]Reg Lama Per Bulan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Reg Lama Per Bulan", rs.getBoolean("grafik_kunjungan_statusdaftarbulan")});
                    }

                    if ("[N]Reg Lama Per Tahun".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Reg Lama Per Tahun", rs.getBoolean("grafik_kunjungan_statusdaftartahun")});
                    }

                    if ("[N]Reg Lama Per Tanggal".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[N]Reg Lama Per Tanggal", rs.getBoolean("grafik_kunjungan_statusdaftartanggal")});
                    }
                    
                    if ("[O]Operator Antrian".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Operator Antrian", rs.getBoolean("operator_antrian")});
                    }
                    
                    if ("[O]Set Bridging".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Bridging", rs.getBoolean("aktivasi_bridging")});
                    }

                    if ("[O]Biaya Harian Kamar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Biaya Harian Kamar", rs.getBoolean("biaya_harian")});
                    }

                    if ("[O]Biaya Masuk Sekali".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Biaya Masuk Sekali", rs.getBoolean("biaya_masuk_sekali")});
                    }

                    if ("[O]Closing Kasir".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Closing Kasir", rs.getBoolean("closing_kasir")});
                    }

                    if ("[O]Set Antrian".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Antrian", rs.getBoolean("display")});
                    }

                    if ("[O]Set Billing".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Billing", rs.getBoolean("set_nota")});
                    }

                    if ("[O]Set Embalase & Tuslah".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Embalase & Tuslah", rs.getBoolean("setup_embalase")});
                    }

                    if ("[O]Set Harga Kamar".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Harga Kamar", rs.getBoolean("set_harga_kamar")});
                    }

                    if ("[O]Set Harga Obat".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Harga Obat", rs.getBoolean("set_harga_obat")});
                    }

                    if ("[O]Set Harga Obat Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Harga Obat Ralan", rs.getBoolean("set_harga_obat_ralan")});
                    }

                    if ("[O]Set Harga Obat Ranap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Harga Obat Ranap", rs.getBoolean("set_harga_obat_ranap")});
                    }

                    if ("[O]Set Kamar Inap".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Kamar Inap", rs.getBoolean("setup_jam_kamin")});
                    }

                    if ("[O]Set Keterlambatan Presensi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Keterlambatan Presensi", rs.getBoolean("keterlambatan_presensi")});
                    }

                    if ("[O]Set Oto Lokasi".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Oto Lokasi", rs.getBoolean("setup_otolokasi")});
                    }

                    if ("[O]Set Oto Ralan".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Oto Ralan", rs.getBoolean("set_oto_ralan")});
                    }

                    if ("[O]Set P.J. Unit Penunjang".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set P.J. Unit Penunjang", rs.getBoolean("setup_pjlab")});
                    }

                    if ("[O]Set Penggunaan Tarif".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set Penggunaan Tarif", rs.getBoolean("set_penggunaan_tarif")});
                    }

                    if ("[O]Set RM".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Set RM", rs.getBoolean("set_no_rm")});
                    }

                    if ("[O]Tombol Nota Billing".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Tombol Nota Billing", rs.getBoolean("tombol_nota_billing")});
                    }

                    if ("[O]Tombol Simpan Hasil Rad.".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Tombol Simpan Hasil Rad.", rs.getBoolean("tombol_simpan_hasil_radiologi")});
                    }

                    if ("[O]Tracer Login".toLowerCase().contains(TCari.getText().toLowerCase())) {
                        tabMode.addRow(new Object[]{false, "[O]Tracer Login", rs.getBoolean("tracer_login")});
                    }
                }
                LCount.setText("" + tabMode.getRowCount());
            } catch (Exception e) {
                System.out.println(e);
            } finally {
                if (rs != null) {
                    rs.close();
                }
                if (ps != null) {
                    ps.close();
                }
            }

        } catch (Exception e) {
            System.out.println("Notifikasi : " + e);
        }
    }
    
    public void isUser(String User,String Nama, String Password){
        TKd.setText(User);
        TNmUser.setText(Nama);
        TPass.setText(Password);
        tampil(User);
        TCari.requestFocus();
    }

    private void Simpan() {
        for (i = 0; i < tbUser.getRowCount(); i++) { 
            if("[A]Assesment Gizi Harian".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","assesmen_gizi_harian='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Assesment Gizi Ulang".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","assesmen_gizi_ulang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Bahasa Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bahasa_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Beri Obat, Alkes & BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","beri_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Billing Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","billing_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Billing Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","billing_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Booking Registrasi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","booking_registrasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Bridging SEP Jamkesda".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bridging_jamkesda='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Copy Pemeriksaan Dokter Ke Perawat/Bidan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","copy_pemeriksaan_dokter_kepetugas_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Diet Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","diet_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]DPJP Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","dpjp_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Edit Data Kematian".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","edit_data_kematian='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Edit Registrasi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","edit_registrasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]IGD".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","igd='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Informasi Kamar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","informasi_kamar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Jadwal Praktek".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","jadwal_praktek='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Kamar Inap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kamar_inap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Kasir Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kasir_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Master Faskes/Perujuk".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","master_faskes='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Masuk & Pindah (Ranap)".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","masuk_pindah_inap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Masuk, Pindah, Pulang (Ranap)".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","masuk_pindah_pulang_inap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Monitoring Evaluasi Asuhan Gizi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","monev_asuhan_gizi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]No.Resep".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","resep_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Operasi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","operasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Periksa Lab".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","periksa_lab='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Periksa Radiologi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","periksa_radiologi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Permintaan Periksa Lab.".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","permintaan_lab='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Permintaan Periksa Radiologi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","permintaan_radiologi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Registrasi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","registrasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Registrasi Booking Dikasir".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","registrasi_booking_dikasir='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Resep Pulang".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","resep_pulang='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[A]Rujukan Keluar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rujukan_keluar='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[A]Rujukan Masuk".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rujukan_masuk='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[A]Rujukan Poli Internal".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rujukan_poli_internal='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[A]Selisih Tarif Naik Kls. Rawat BPJS".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","selisih_tarif_bpjs='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[A]Sensus Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sensus_inap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Set Status Reg. Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","set_status_registrasi_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Status Pulang Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","status_pulang_inap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Suku Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","suku_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Tindakan Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tindakan_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[A]Tindakan Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tindakan_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[B]Checklist Pra Operasi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kegiatan_operasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[B]Barcode Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","barcoderalan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[B]Barcode Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","barcoderanap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Barcode Presensi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","barcode='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Dokter".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","dokter='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Jadwal Pegawai".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","jadwal_pegawai='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Jam Presensi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","jam_masuk='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Pegawai Admin".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pegawai_admin='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Pegawai User".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pegawai_user='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Petugas".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","petugas='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Presensi Bulanan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","presensi_bulanan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Presensi Harian".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","presensi_harian='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Sidik Jari".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sidikjari='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]SMS Gateway".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sms='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Status Kerja Dokter".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","status_kerja_dokter='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[C]Temporary Presensi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","temporary_presensi='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[D]Pemberian Obat Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pemberian_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Darurat Stok".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","darurat_stok='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Golongan Obat/Alkes/BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","golongan_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Industri Farmasi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","industrifarmasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Jenis Obat/Alkes/BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","jenis_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Kategori Obat/Alkes/BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kategori_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Keuntungan Beri Obat, Alkes & BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","keuntungan_beri_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Keuntungan Beri Obat, Alkes & BHP 2".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","keuntungan_beri_obat_nonpiutang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Keuntungan Penjualan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","keuntungan_penjualan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Konversi Satuan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","konversi_satuan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Laporan Farmasi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","laporan_farmasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Mutasi Obat/Alkes/BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","mutasi_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Obat, Alkes & BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Obat/Alkes/BHP Per Tanggal".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pemberian_obat_pertanggal='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Pemesanan Obat, Alkes & BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pemesanan_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Pengadaan Obat, Alkes & BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pengadaan_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Pengambilan BHP UTD".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pengambilan_utd='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Penjualan Bebas Per Tanggal".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penjualan_obat_pertanggal='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[D]Penjualan Obat, Alkes & BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penjualan_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Piutang Obat, Alkes & BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","piutang_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Resep Dokter".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","resep_dokter='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Retur Dari Pembeli".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","retur_dari_pembeli='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Retur Ke Suplier".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","retur_ke_suplier='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Retur Obat, Alkes & BHP Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","retur_obat_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Retur Piutang Pembeli".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","retur_piutang_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Riwayat Obat, Alkes & BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","riwayat_obat_alkes_bhp='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Satuan Barang".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","satuan_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Sirkulasi Obat, Alkes & BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sirkulasi_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Sirkulasi Obat, Alkes & BHP 2".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sirkulasi_obat2='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Stok Obat Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","stok_obat_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Stok Opname Apotek".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","stok_opname_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[D]Suplier Obat/Alkes/BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","suplier='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[D]Dashboard e-Resep".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","dashboard_eResep='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[E]Barang Non Medis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","ipsrs_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[E]Biaya Pengadaan Non Medis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","ipsrs_pengeluaran_harian='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[E]Jenis Non Medis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","ipsrs_jenis_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[E]Pengadaan Barang Nonmedis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","ipsrs_pengadaan_barang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[E]Pengambilan UTD".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pengambilan_penunjang_utd='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[E]Rekap Pengadaan Non Medis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","ipsrs_rekap_pengadaan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[E]Rekap Stok Keluar Non Medis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","ipsrs_rekap_stok_keluar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[E]Stok Keluar Non Medis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","ipsrs_stok_keluar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[E]Suplier Non Medis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","suplier_penunjang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[F]Barang CSSD".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","barang_cssd='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[F]Inventaris".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inventaris_inventaris='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[F]Jenis Inventaris".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inventaris_jenis='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[F]Kategori Inventaris".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inventaris_kategori='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[F]Koleksi Inventaris".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inventaris_koleksi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[F]Merk Inventaris".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inventaris_merk='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[F]Produsen Inventaris".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inventaris_produsen='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[F]Ruang Inventaris".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inventaris_ruang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[F]Sirkulasi Inventaris".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inventaris_sirkulasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[G]Barcode Parkir".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","parkir_barcode='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[G]Jenis Parkir".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","parkir_jenis='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[G]Parkir Keluar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","parkir_out='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[G]Parkir Masuk".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","parkir_in='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[G]Rekap Parkir Bulanan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","parkir_rekap_bulanan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[G]Rekap Parkir Harian".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","parkir_rekap_harian='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Bulanan BHP Medis/Paket Obat".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bulanan_paket_bhp='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Bulanan Dokter".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bulanan_dokter='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Bulanan J.S.".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bulanan_js='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Bulanan KSO".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bulanan_kso='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Bulanan Menejemen".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bulanan_menejemen='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Bulanan Paramedis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bulanan_paramedis='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Detail JM Dokter".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","jm_ranap_dokter='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Detail Tindakan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","detail_tindakan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Fee Bacaan EKG".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","fee_bacaan_ekg='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Fee Periksa Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","fee_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Fee Rujukan Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","fee_rujukan_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Fee Rujukan Rontgen".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","fee_rujukan_rontgen='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Fee Visit Dokter".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","fee_visit_dokter='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Harian BHP Medis/Paket Obat".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_paket_bhp='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Harian Dokter".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_dokter='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Harian Dokter Poli".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_tindakan_poli='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Harian Dokter Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_tindakan_dokter='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Harian J.S.".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_js='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Harian Kamar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_kamar='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Harian KSO".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_kso='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Harian Menejemen".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_menejemen='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Harian Paramedis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_paramedis='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Obat Per Cara Bayar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","obat_per_cara_bayar='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Obat Per Dokter Peresep".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","obat_per_dokter_peresep='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Obat Per Dokter Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","obat_per_dokter_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Obat Per Dokter Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","obat_per_dokter_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Obat Per Kamar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","obat_per_kamar='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Obat Per Poli".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","obat_per_poli='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[H]Payment Point".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","payment_point='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Pembayaran Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pembayaran_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Pembayaran Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pembayaran_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Piutang Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","piutang_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Piutang Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","piutang_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Potongan Biaya".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","potongan_biaya='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Rekap Pembayaran Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rekap_pembayaran_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Rekap Pembayaran Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rekap_pembayaran_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Rekap Per Shift".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rekap_per_shift='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Rekap Poli Anak".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rekap_poli_anak='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Tagihan Masuk".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tagihan_masuk='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[H]Tambahan Biaya".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tambahan_biaya='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Rekam Psikologis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rekam_psikologis='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Bulanan HAIs".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bulanan_HAIs='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Bulanan HAIs Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bulanan_hais_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Bulanan HAIs Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bulanan_hais_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Frekuensi Penyakit Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penyakit_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Frekuensi Penyakit Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penyakit_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Gizi Buruk".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","gizi_buruk='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Harian HAIs".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_HAIs='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Harian HAIs Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_hais_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Harian HAIs Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","harian_hais_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Hitung ALOS".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","hitung_alos='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Hitung BOR".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","hitung_bor='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]ICD 10".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penyakit='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]ICD 9".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","icd9='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Indikator Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","indikator_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Jumlah Macam Diet".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","jumlah_macam_diet='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Jumlah Porsi Diet".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","jumlah_porsi_diet='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Kunjungan Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kunjungan_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Kunjungan Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kunjungan_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Lama Pelayanan Apotek".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","lama_pelayanan_apotek='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Lama Pelayanan Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","lama_pelayanan_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Obat Penyakit".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","obat_penyakit='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Penyakit AFP & PD3I".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penyakit_pd3i='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Pny Menular Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penyakit_menular_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Pny Menular Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penyakit_menular_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Pny.Tdk Menular Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pny_takmenular_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Pny.Tdk Menular Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pny_takmenular_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]RL 3.2 Rawat Darurat".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rl32='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]RL 3.3 Gigi dan Mulut".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rl33='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]RL 3.4 Kebidanan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rl34='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]RL 3.6 Pembedahan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rl36='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]RL 3.7 Radiologi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rl37='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]RL 3.8 Laboratorium".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rl38='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]RL 4A Morbiditas Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rl4a='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]RL 4A Sebab Morbiditas Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rl4asebab='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]RL 4B Morbiditas Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rl4b='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]RL 4B Sebab Morbiditas Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rl4bsebab='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Sensus Harian Poli".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sensus_harian_poli='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Status Gizi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","status_gizi='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[I]Surveilans AFP & PD3I".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","surveilans_pd3i='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Surveilans Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","surveilans_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Surveilans Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","surveilans_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[I]Telusur Kunjungan Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","telusur_kunjungan_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[J]Cek Piutang".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","cek_piutang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Akun Bayar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","akun_bayar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Akun Piutang".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","akun_piutang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Akun Rekening".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","akun_rekening='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Bayar Pesan Obat".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bayar_pemesanan_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Bayar Piutang".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bayar_piutang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Buku Besar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","buku_besar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Cash Flow".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","cashflow='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Deposit Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","deposit_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Hutang Obat & BHP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","hutang_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Jurnal Harian".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","jurnal_harian='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Kamar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kamar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Keuangan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","keuangan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Pemasukkan Lain-Lain".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pemasukan_lain='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Pengaturan Rekening".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pengaturan_rekening='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Pengeluaran Harian".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pengeluaran='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Piutang Belum Lunas".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","piutang_pasien2='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Piutang Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","piutang_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Piutang Per Cara Bayar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","detail_piutang_penjab='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Posting Jurnal".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","posting_jurnal='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Rekening Tahun".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rekening_tahun='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Rincian Piutang Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rincian_piutang_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Tarif Lab".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tarif_lab='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Tarif Operasi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tarif_operasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Tarif Radiologi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tarif_radiologi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Tarif Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tarif_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Tarif Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tarif_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[J]Tarif UTD".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tarif_utd='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[K]Bridging SatuSehat".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bridging_satu_sehat='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[K]Kemenkes Kanker".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kemenkes_kanker='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[K]Hapus SEP".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","hapus_sep='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[K]Rencana Kontrol JKN".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rencana_kontrol_jkn='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[K]SPRI JKN".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","spri_jkn='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[K]Kemenkes SITB".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kemenkes_sitt='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Bridging Diagnosa Pasien Corona".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","diagnosa_pasien_corona='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Bridging Eklaim INACBG RAZA".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inacbg_klaim_raza='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Bridging Pasien Corona".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pasien_corona='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Eligibilitas Inhealth".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inhealth_cek_eligibilitas='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek NIK".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_nik='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek No.Kartu".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_kartu='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek No.Rujukan Pcare".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_nomor_rujukan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek No.Rujukan RS VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_no_rujukan_rs='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi Cara Keluar VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_cara_keluar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi Dokter BPJS".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_dokter='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi DPJP VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_dpjp='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi Kabupaten VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_kabupaten='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi Kecamatan VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_kecamatan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi Kelas Rawat VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_kelas_rawat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi Pasca Pulang VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_pasca_pulang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi Prosedur VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_prosedur='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi Provinsi VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_propinsi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi Ruang Rawat VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_ruang_rawat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Referensi Spesialistik VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_referensi_spesialistik='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Rujukan Kartu Pcare VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_rujukan_kartu_pcare='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Rujukan RS BPJS Sesuai No.Kartu".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_rujukan_kartu_rs='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Cek Tgl. Rujukan VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_tanggal_rujukan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Coder NIK INACBG".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inacbg_coder_nik='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Data Bridging SEP BPJS".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_sep='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Data Bridging SJP Inhealth".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inhealth_sjp='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]INACBG JKN Belum Diklaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","jkn_belum_diproses_klaim='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[K]Kendali Mutu Kendali Biaya INACBG".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kendali_Mutu_kendali_Biaya_INACBG='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Ketersediaan Kamar Aplicare".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","aplicare_ketersediaan_kamar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Klaim Baru Manual INACBG".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inacbg_klaim_baru_manual='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Klaim Baru Manual INACBG 2".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inacbg_klaim_baru_manual2='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Klaim Baru Otomatis INACBG".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inacbg_klaim_baru_otomatis='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Monitoring Verifikasi Klaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_monitoring_klaim='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Pengajuan Klaim INACBG RAZA".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pengajuan_klaim_inacbg_raza='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Perawatan Pasien Corona".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","perawatan_pasien_corona='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Referensi Diagnosa BPJS".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_referensi_diagnosa='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Referensi Diagnosa Pcare".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pcare_cek_penyakit='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Referensi Faskes BPJS".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_referensi_faskes='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Referensi Faskes Inhealth".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inhealth_referensi_faskes='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Referensi Kamar Aplicare".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","aplicare_referensi_kamar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Referensi Poli BPJS".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_referensi_poli='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Referensi Poli Inhealth".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inhealth_referensi_poli='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Referensi Ruang Rawat Inhealth".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","inhealth_referensi_jenpel_ruang_rawat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Reklasifikasi Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","reklasifikasi_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Reklasifikasi Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","reklasifikasi_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Riwayat Peserta".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_riwayat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Riwayat Rujukan Pcare VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_riwayat_rujukan_pcare='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Riwayat Rujukan RS VClaim".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_cek_riwayat_rujukan_rs='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Rujukan Keluar VClaim BPJS".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","rujukan_keluar_vclaim_bpjs='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Sisrute Referensi Alasan Rujuk".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sisrute_referensi_alasanrujuk='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Sisrute Referensi Diagnosa".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sisrute_referensi_diagnosa='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Sisrute Referensi Faskes".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sisrute_referensi_faskes='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Sisrute Rujukan Keluar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sisrute_rujukan_keluar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]Sisrute Rujukan Masuk".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","sisrute_rujukan_masuk='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[K]SKDP BPJS".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","skdp_bpjs='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[K]Cek SEP Internal BPJS".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","bpjs_sep_internal='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Asesmen Medik Anak Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","asesmen_medik_anak_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Kemoterapi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kemoterapi='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]CPPT".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","cppt='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Asesmen Medik Dewasa Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","asesmen_medik_dewasa_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Surat Keterangan KIR/MCU".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","surat_keterangan_kir_mcu='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Surat Sakit".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","surat_sakit='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Penilaian Awal Medis Ralan Mata".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penilaian_awal_medis_ralan_mata='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Penilaian Awal Medis & Tambahan Pasien Geriatri".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penilaian_pasien_geriatri='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Penilaian Awal Medis Ralan THT".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penilaian_awal_medis_ralan_tht='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Survey Kepuasan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","survey_kepuasan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Ikhtisar Perawatan HIV & Terapi ART".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","ikhtisar_perawatan_hiv='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Penilaian Awal Keperawatan Kebidanan Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penilaian_awal_keperawatan_kebidanan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Penilaian Awal Medis Kebidanan & Kandungan Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penilaian_awal_medis_ralan_kebidanan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[L]Berkas Digital Perawatan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","berkas_digital_perawatan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Catatan Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","catatan_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Data HAIs".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","data_HAIs='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Data Persalinan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","data_persalinan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Data Ponek".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","data_ponek='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Diagnosa Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","diagnosa_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Indikator Mutu Unit".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","indikator_mutu_unit='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Input Kode ICD".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","input_kode_icd='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Instansi/Perusahaan Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","perusahaan_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Kelahiran Bayi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","kelahiran_bayi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Master Cara Bayar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","master_cara_bayar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Master Masalah Keperawatan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","master_masalah_keperawatan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Master Triase Macam Kasus".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","master_triase_macamkasus='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Master Triase Pemeriksaan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","master_triase_pemeriksaan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Master Triase Skala 1".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","master_triase_skala1='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Master Triase Skala 2".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","master_triase_skala2='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Master Triase Skala 3".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","master_triase_skala3='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Master Triase Skala 4".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","master_triase_skala4='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Master Triase Skala 5".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","master_triase_skala5='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Mutasi Berkas RM".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","mutasi_berkas='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Pasien".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Pasien Meninggal".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pasien_meninggal='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Peminjaman Berkas RM".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","peminjaman_berkas='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Penilaian Awal Keperawatan Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","penilaian_awal_keperawatan_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Rekam Medis Triase IGD".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","data_triase_igd='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Retensi Data R.M.".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","retensi_rm='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Review RM IGD".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","review_rm_igd='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Review RM Laporan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","review_rm_laporan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Review RM Ranap H+1".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","review_rm_ruangan_h1='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Review RM Ranap Pulang".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","review_rm_ruangan_pulang='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Ringkasan Pulang Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","ringkasan_pulang_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[L]Riwayat Perawatan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","resume_pasien='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[M]BHP Medis Rusak".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","utd_medis_rusak='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[M]BHP Non Medis Rusak".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","utd_penunjang_rusak='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[M]Cekal Darah".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","utd_cekal_darah='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[M]Donor Darah".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","utd_donor='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[M]Komponen Darah".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","utd_komponen_darah='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[M]Pemisahan Darah".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","utd_pemisahan_darah='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[M]Pengambilan BHP Medis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pengambilan_utd2='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[M]Pengambilan BHP Non Medis".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","pengambilan_penunjang_utd2='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[M]Penyerahan Darah".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","utd_penyerahan_darah='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[M]Stok Darah".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","utd_stok_darah='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[N]Batal Periksa Per Bulan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_statusbatalbulan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[N]Batal Periksa Per Tahun".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_statusbataltahun='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[N]Batal Periksa Per Tanggal".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_statusbataltanggal='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[N]Demografi Registrasi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_demografi='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[N]Kunjungan Reg Per Bulan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_perbulan='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[N]Kunjungan Reg Per Dokter".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_perdokter='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Kunjungan Reg Per Pekerjaan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_perpekerjaan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Kunjungan Reg Per Pendidikan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_perpendidikan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Kunjungan Reg Per Poli".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_poli='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Kunjungan Reg Per Tahun".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_pertahun='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Kunjungan Reg Per Tanggal".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_pertanggal='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Reg Baru Per Bulan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_statusdaftarbulan2='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Reg Baru Per Tahun".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_statusdaftartahun2='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Reg Baru Per Tanggal".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_statusdaftartanggal2='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Reg Lama Per Bulan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_statusdaftarbulan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Reg Lama Per Tahun".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_statusdaftartahun='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[N]Reg Lama Per Tanggal".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","grafik_kunjungan_statusdaftartanggal='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[O]Operator Antrian".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","operator_antrian='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[O]Set Bridging".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","aktivasi_bridging='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Biaya Harian Kamar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","biaya_harian='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Biaya Masuk Sekali".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","biaya_masuk_sekali='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Closing Kasir".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","closing_kasir='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Antrian".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","display='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Billing".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","set_nota='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Embalase & Tuslah".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","setup_embalase='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Harga Kamar".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","set_harga_kamar='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Harga Obat".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","set_harga_obat='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Harga Obat Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","set_harga_obat_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Harga Obat Ranap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","set_harga_obat_ranap='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Kamar Inap".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","setup_jam_kamin='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Keterlambatan Presensi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","keterlambatan_presensi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Oto Lokasi".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","setup_otolokasi='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Oto Ralan".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","set_oto_ralan='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set P.J. Unit Penunjang".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","setup_pjlab='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set Penggunaan Tarif".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","set_penggunaan_tarif='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Set RM".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","set_no_rm='"+tbUser.getValueAt(i,2).toString()+"'");
            }

            if("[O]Tombol Nota Billing".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tombol_nota_billing='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[O]Tombol Simpan Hasil Rad.".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tombol_simpan_hasil_radiologi='"+tbUser.getValueAt(i,2).toString()+"'");
            }
            
            if("[O]Tracer Login".equals(tbUser.getValueAt(i,1).toString())){
                Sequel.mengedit("user","id_user=AES_ENCRYPT('"+TKd.getText()+"','nur')","tracer_login='"+tbUser.getValueAt(i,2).toString()+"'");
            }
        }
        
        JOptionPane.showMessageDialog(null,"Proses hak akses yang dipilih telah berhasil tersimpan..!!");
    }
}
